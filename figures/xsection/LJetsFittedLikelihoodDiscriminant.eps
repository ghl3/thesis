%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: profile_fit_prel.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Heike Boos
%%CreationDate: 8/20/11
%%BoundingBox: 0 0 567 358
%%HiResBoundingBox: 0 0 567 358
%%CropBox: 0 0 567 358
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 84 8%%BeginData: 11302 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFD8DFFA87DFFA8FF7DFF7DA8FD77FFFD047D52A8527D7DFD%72FF7D777DFFFF7D7D7D28527D777D7DA87D52FD047DA87DA87DA87DA87D%A87DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7D%A87DA87DA87DA87DA87DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87DA87D%A87DA87DA87DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA8FD067DA8FD09FF%A252A8FFFF527DA8A87E7DA87EA8FF52A8FD20FFA8FD21FFA8FD1FFFA8A8%7DFD0AFF7DA8A8FD0BFFA87DA8FD11FFA8A8A8FFFFFFA8FFA8FFFFFFA8FD%05FFA8FFFFFFA8FD19FFA8FFA8FD07FFA8A8A8FD05FFA8FFFFFFA8FD0BFF%A87DA8FD08FFA852277DFD0CFF7DA8FD10FF27A827527DFF7D7D7D277DFF%7D5252A8A8A8527DA8A87DA87DFF7DA87DFFA8FD05FFA8FFFFFF527DA8A8%7D7D7DFFA87D7D7DA87DA87DFFFFFD05A8FFFFFFA852A8A827FD06A8FD06%FFA87DFD0AFF527DA8FD0BFFA87D7DA8A8FFA8FD0BFF27F8FD047DA82727%7D277DFF7D277D27522727F852525227522752277D527DFD04FFA82752FF%A87DA852F85252277DFFFD047D52FF52FFFFFF52A827A87DF87DFF7DFFFF%7D7D27527D52FD05FFA8A87D7DA8FD09FFA852A8FD0CFF7DFFFFFFA852A8%FF7DA8527D7DFFFFFFA87D527D7DA8277D7D7D5252A8FF7DA8FFFD047D52%7DA8FD047D5252A852A8FD05FFA8FFFFFF527D7D52527D52A8A8527D52A8%A8FFA87DA8FFA87D7DA8FF7DFFA8A8FFFFA8A852FF7DA8FD07FFA87DFD0A%FF7D527DFFFFA8A8FFA8FF7DFFA8FFA87DA8FFFFA828A87D5227272728A8%FD0DFFA8FD13FF7DFD0BFFA8FD0FFFA8FD19FFA87DA8FD09FF7D527DFFFF%7D7D527D52FD047DFF7DFFFFFFA8A8FFFD06A8FD04FFA87DFD22FFA86F9A%CAFF5252FD0DFFA84C77A8FF7D7DA87D7DA852A8FF7DA87DA8FF7D7D7DA8%A87DA8FFFFA87DFD0AFF7D52A8FFFFA87D7DA827A8527E7DA87DA8A8A8FD%0DFF52A87DFFFFA852A8A8FFFFFF527DFF7D527D7DFF5252A8FF7DFD0BFF%9AFC8CCAA82752FD0DFF772121A8A87D7D527DFF52A852FF2752277DFD04%52272727FD04A87DA8FD09FFA852A8FFFF52FD087DFF7DFD05FFAFFD0AFF%7DA87DFFA8525252FF527DA87D7DFF7D527D7DA85252527DA8A8FD0AFFA1%8C8CA8FF527DFD0DFF7D21467DFF7D27FD047D52A8FF7D52A8527D7D7D52%527D7DA8FFA8A87DFD09FFA87DA8A8FFFFFFA8FFA8FFA8FFA8FFA87DA8FF%A859A14B4BA1FD08FF52A852A8A852527DA87D7DFF527DA87DA87D7DFF52%527DFD0DFFA8A8A8FD11FFA8A8A8FD12FFA8A8FD05FFA87DA8FD08FFFD04%7DFD0CFF7DFFFFFF68688C8C6FFD07FFA87DFFFFA8FD20FFCAA0A7CAFFA8%A8A8FFFFFFA8FFA8A8A8FD04FFA95A5AA8FF7D7DA87D7DFFA8FFA8FF7D7D%A8A87DFD08FFA87DFD09FFA8527D7DFD0BFFA87DA8AF76FC8C92FC937DA8%FD2AFF7CC09EA8A87D27527D27A87D27FD0452FFFFFF590F0884A87DA852%27525227277DFF52527D27277DFD05FFA8A8A87DA8FD18FF7DA87775C0C0%9E928C4BA1FD2AFFA79E9EA8FF527D52FFA8A8527D7DA85252FFFFFF7E08%0E84FFFD067D527D7DFF52527D7D52A8FD07FFA87DFD0FFFA8A8FF7DA87D%A87DA8A87D7D4B6EC6C6C69E988CC3FD2AFFA8A8A8FD07FFA8FFFFFFA8FD%05FFA8A884FFFFFFA8FD05FFA8FFFFFFA8FD0BFFA87DA8FD0EFFFD047D52%A852A87DFF7DA198FD04C6FE9EFC6FFD5AFFA87DFD10FF527D7D27FD047D%A87D769E9EC6C0C6C69EFC8C9AFD57FFA8A8A87DA8FD0FFFA8A87EA87DA8%A8A8FF5375C0C6C0C6C6C69E92FCC3FD58FFA8A87DFD18FFA87D74C6C0C6%C0C6C0C69E929AFD59FFA87DA8FD18FF7DC7FD07C6FE9268A1FD58FFA87D%FD18FFA87D9EC6C0C6C0C6C0C6C09E68A2FD06FFA8A8A8FFFFA8FFFF7DA8%7D7D7DA8FD12FF7DFD13FFA8A8FFFFA8FFFF7D7DA853A8A8FD0FFFA8A8A8%7DA8FD18FF7D9FC0C6C6C6C0FD04C6B49AFD06FFA8527DFF7D52FFA87D27%5252527DFD17FFA8FD05FFA8FD07FFA85252FF7D7DFFA85252527D52A8FD%10FFA8A87DFD10FFA8FF7DFF7DFF7DA8A87D9EC6C0C6C0C6C0C6C0C69268%A8FD05FF5252A8FF7DA8A8FD057D52A8FD12FF7DFFFFFFA852A8FF527D52%5252FD07FF52A8FFA8A2FF52A852A87D7D7DFD11FFA87DA8FD0EFF7D7DA8%7D28A8777D7DFF7D9FFD09C6B48CFD06FFA8FD1EFFA8A8FD04FF52A87D7D%27525252A8FD24FFA87DFD10FF52A87D527D537D7DA87D9EC09EC6C0C6C0%C6C0C69893FD2AFFA8A8FFA8A8FFA8A8A8FD23FFA8A8A87DA8FD0EFFA8A8%7D7DA87DA27D7DFF4A9EC0C6C0C6C6C6C0C6C6C66EA8FD24FFA8A8FD05FF%A87DA8A1FD07FFA8FD1FFFA8A87DFD12FFA8FFFFFFA8FFCA9E9EC6C0C6C0%C6C0C6C0C69E9268FFFFFFA8FD04FFA8A8FF7DFF7DA8A8FFFFFFA8A8FFFF%A8FFA87DA8FFA8FF7DA8A8FFFFFFA8FD04FF7D526F444476FD06FFA8A8FF%FFFFA8A8FFA8A8A87DFD05FFA8FD05FF52FFFFA8A8A87DFFFFFF7D7DA8FD%18FF98FD0BC698B5FD07FFA827A8A87DFD0452FD08FF525252FFA8FD0552%FD07FFA168B0FCFC8C93FD0BFF5252FFFD0552FD08FF7D52527DFF7D5227%5252FFFFA87DFD18FFCA9E9EC09EC6C0C6C0C6C0C6C6C08CFFFFFF7DFFFF%FFA87DA87D5252527D52FFFFFFA8A8FFFF7D27527DA87D7D52527D52FFFF%FF7DFFFFA8689292986E92687DAFFD04FFA8FD04FF527D7D7D527D7752A8%FFFFFF7DFFFFFF275252A87D7D527D5252A8A8A87DA8FD18FF9EC6C0C6C6%C6C0C6C6C6C0C6C08C7DFD13FFA8FFFFFFA8FD0FFF7C749EC6C6C69E8C44%A8FD04FFA8FD20FFA87DFD12FFA8FFA8FFA8FFA89E9EC6C0C6C0C6C0C6C0%C6C0C08C6FAFFFA8FD21FFA8FFA14AC0C6C0C6C0C698FC9BFD15FFA8FD0F%FFA87DA8FD10FFFD077DFF9EFD0BC6C0B493FFFFA8FD10FFA8FD0FFFA8A8%FFA19EFD06C69E8CC3FD04FFA8FD10FFA8FD0FFFA87DFD11FF7D5227A852%A87DA89F9E9E9EC6C0C6C0C6C0C6C0C69893FD24FFA8FF51C0C0C6C0C6C0%C69E9268A8FD22FFA8A8A87DA8FD10FFFD077DFF9EC6C6C6C0C6C6C6C0FD%04C6C093AFFD12FFA8FD12FF99C6C6C0C6C6C6C0C69868A1FFFFFFA8FD1F%FFA8A87DFD12FFA8FFA8FFA8FFCA9E9EC6C0C6C0C6C0C6C0C6C0C6986E7D%FF7DFD0FFFA8A8FD10FF7DFF9EC6C0C6C0C6C0C6C0C69276AFFFFFA8A8FD%0FFF7DFD0FFFA87DA8FD18FF9EFD0DC698BCFD25FFC7FD09C69E68CBFD23%FFA87DFD18FFCA9E9EC0C0C6C0C6C0C6C0C6C0C6C6BA93FFA8FD0FFFA8A8%FD10FF7D7D9EC6C0C6C0C6C0C6C0C6A492A1FFFFA8FD10FFA8FD0DFFA8A8%A87DA8FD18FF9EC6C0C6C6C6C0C6C6C6C0C6C6C698BCAFFFFFA8CAA8A8FF%7DFD09FFA8FD0FFFA8A850FD05C6C0FD05C692CAFFFFA8FD10FFA8FD0EFF%A8A87DFD12FFA8A87DFF7DA8A89E9EC6C0C6C6C6C0C6C0C6C0C6C69893FF%FFFF44686876526FA8AFFD18FFA8C6C0C6C0C6C0C6C0C6C0C69E9270FD23%FFA87DA8FD11FF5252A8527D7DFF9E9E74C19E9F9EFD07C6989AAFA87692%6E8C8C8CFC6F76A8FD05FFA8A8FD0FFFA8A1C7FD0BC69E4ACBFFA8FD10FF%A8FD0FFFA87DFD11FF7D2752FD047DA89F4A214546214645759EC6C0C6C0%C69FFFA8749EC69EB4FCFC688C447676764B6F76FD11FF7DC7C0C6C0C6C0%C6C0C6C0C6C0C66EFD13FFA8FD0DFFA8A8A87DA8FD11FFA8A87DA8A8A8FF%9E4CFD0646224674FD04C6C7FFFF9EC6C6C6989892FCFCFC8C6868FC8CC3%FD12FF9EC6C6C6C0C6C6C6C0C6C6C69E75FD0BFFA17D7DA8FD13FFA8A87D%FD18FFCA7521FD09464BC6C0C674A27DC7C0C6C0C6C6C67492FD06FC9AAF%FD0DFFA8527D7DC7C0C6C0C6C0C6C0C6C0C6C0C67476CBA8FFCA4C76527D%4B76446868767DA8FFFF7DFD0FFFA87DA8FD18FF45FD0B464AFEC67476FF%9EFD07C6A4988CB4FCFCFCC3FD0CFFAF76688C6FFF9EFD0CC6C093FFFFA9%4A928CFC8CFC8CB4FCFC8C686876FD12FF7DFD18FFCF4C21464646454645%464546464674FE929B519EFD04C6C0C6C0C69E9E98928CFC9AFFFFFFAFFF%FFFFAFA87D7D4B6F68FCFCBCA8C7C6C6C69E9EC69EC6C0C6C6C69E99FFFF%4B9E9E9898BA98987A988CFCFCFC68A8A8FD07FF84AFAFFFA8FFA884A87D%A8FD08FFA87D7DA8FD0CFF4546454622292229294D224C46469EC07C9FC6%9E9E9EFD08C69EA4926F7DA1526F6F7D4B6F68688CFD05FC9384C698456F%45464546454B6EC6C6C67AFFA89EFD0AC67492FCFC6FA8FFFFFFA8767652%6F446F6F6F4B6F447D7DFD09FFA852527DFD0BFFA84C062A07FD040F150F%0F0829224598C99F6F2146216F456F989E98FD05C6684B4A928C8C68FC8C%FD06FCB4FC932D4B454621462229070807072175C09E4CFF9EC6C0C6C6C6%C0FD05C6A49E8CB5FFA8274B688C8C8CFCFC8CFCFC8CFCFC6F7DA8FD08FF%A8A8A8FD0DFF070F0F150F150F150F150F150F1508287551224D224D2247%2246224C4B754B759E926EC69E9E7AC0BA9E74C098C0989874BA68504629%080F0F150F150F150F15082E749951744B75515174C19E757A9F9E9F9EC0%99A84A9E9EC0BAC098C098BAB49892B4FC937DFD09FFA2527DA8FD0BFFA8%2F0E300E300E300E300D300E300E0F072700300D30070E0730072F073007%0707292727272E2728275251282752515227282D27202F0E0E0E300E300E%300E300E300E2F2726280707300729070E070E073007282E51F827515251%51515251512D5251512752274BCAFD08FF7D5252A8FD09FFA8A8FF7DFFA8%CFA8CFA8CFA8CFA8CFA8CFA8CFA8AEA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8A9A8FFA8A9A8AFA8A9A8AFA8FFA8AFA8A8A8FFA8CFA8CFA8CFA8CFA8%CFA8FFA8A97DFFA8FFA8FFA8FFA8FFA8FFA8FFA8A9A8A8A8A9A8AFA8A9A8%AFA8A9A8FFA8AFA8FF7DFD0AFFA8A8A8FD05FF7D52FFA827A8FFA8A8FD41%FFA8A8FD20FFA8A8A8FD09FFA8527DFD06FF52FFA8A87DFF7DFFA8FD40FF%A8A8FD1FFFA8FFA8FD0AFF7D527DFD05FFA87DA87D527DFFA8A8FD53FFA8%FD0FFFA8A8A8FD08FFA87D527DFD0CFF7DFD43FFA8FD21FF7DFD0AFF7D7D%7DFD0BFFA8A8FD42FFA8FD11FFA8FFFFFF7DFD0BFFA8A8A8FD09FFA8527D%FD0CFFA8FD43FFA8FD0FFFA8A8FFFFFFA8FD0CFFA8FD0AFF7D7D7DFD05FF%A8A8FFFF7DFD04A8FD0DFFA8FFA8FFA8FFFFFFFD06A8FD04FFA8FFFFFF7D%A87DFFFFFFA8FD05FF7DFFA8FD05FFA8FD0AFFA87DA87DFFFFFFA8FFFFFF%A8FFFFFFA87DA8FFA8FD05FF7DFFA8FD04FFFD04A8FD08FFA87D52A8FD05%FFA852FF7D7D7DFF7DFF7D7D7DFD04A87D7DFFA8A87DA8A87D7D7DFFA852%7D7DFFA8A87DFFA87DA87DFD04A87DA87DFF7D7D7DA87DFFA8FFA8A8FF7D%A8FF527D52A8A8FF7DA87DFFFFFF7D7DA8A8FD047DA8FFA852FD05A8FFA8%A8A8FFA8A852FD047DA8FFA8527DA8FD09FF7D7DFF53FD05FFA852FF7D52%7DFF52277D7DA8527D527D7D7D527D7DA8A87D7D7DA8A87DA8A8FFA8A87D%A8527D7D527DA8527DA8A8FD087D527DA8527D7D7D5252A8A8A85252527D%7DA852527DA87DFFA87D7D7DA87D527DA8A87D5252FFA87D52A8A852527D%A87D7D7D52A8FD047DA8FD08FFFD047DFD06FFA8FFA87DA8FF7DFD0BFFA8%FFFFA87DFFFFFF52FFFFFFA8A8FFFFFFA8FD04FFA8A8A8FD04FFA8FFFFA8%FFFF7DA8FFA8A87DFD0DFFA8FFFFFF7DFD05FFA87DA8FF7DFD04FFA8FFFF%7DFFA8FD07FF7DFFFFFF7DFD0AFFA8A8A8FD0BFFA8A8FD10FFA8FD07FFA8%FD0FFFA8FD09FFA8FD12FFA8FD0EFF7DA8FF7DA8FD08FFA8A8FFA87DFD0A%FF7D7DA8FD0CFF7DFD55FFA8FD0FFF7DFD0AFF7D7D7DFD05FFA87DFFFF7D%A8A8A8FD54FFA8FD0FFFA87DA8FD08FFA8A852A8FD05FF7D52A8A852A8FF%A8FD65FF7DFD09FFA8527D7DFD05FF527D7DA87D7DFD05A8FFFFFFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFFD%05A8FD09FFA87DA8FD05FFA87DA87D7DA8FFFD13A8FFFD0FA8FFFD11A8FF%FD0DA8FFA8FFFD0FA8FFFD11A8FD0AFF525252FD0BFFA87DA8FD0EFFA8A8%A87DFD0DFFA8FF7DA8FD0DFFA8A8A87DFD0DFF7DA87DA8FD0CFFA8FF7DA8%A87DFD18FFA8777DFD0BFF7D52A8FD0EFF7D525252A8FD0CFF7D7D7D52FD%0DFF277D7D52A8FD0CFF52527D52FD0CFF52FD047D52FD17FFA8527DA8FD%0BFF7D7D7DFD0EFFA87D7D7DA8FD0BFF7D27527D7DA8FD0BFFA852527D7D%A8FD0BFFA852527D7DA8FD0BFFFD047D527D7DFD16FF7D7D7DFD0CFFA852%FD0FFF527D7D52A8FD0BFFA8FD047DFD0DFF7D7D7D52A8FD0BFFA87D7D7D%52FD0CFFA8A8527DA852FD17FFA8527D7DFD2BFFA8FDFCFFFD21FF7DFF7D%A8A8FFA8A87D7DA8FFA8FFA8FFA87DFFA852A87DA8A8FFA8FF7DFD06A8FF%FD04A87D7DFD55FFA87DFF7D277DFD04522752527D527D527D52FF52FF7D%52277D7D7D527D5252527D525252A8275252527DFD56FF52A85227275252%52277D7D5252277D525252FF7D7D7D525227527D7D7D527D7D52527D7D52%27527D52A8FD56FFA87DFD08A8FFA87DFD04A87DFFA87DA8FF7DA8A87DA8%FFA8FFA8A8A8FFA8A87DFD04A8FDFCFFFD89FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2011-08-20T17:18:15+02:00</xap:CreateDate>
         <xap:ModifyDate>2011-08-20T17:18:16+02:00</xap:ModifyDate>
         <xap:MetadataDate>2011-08-20T17:18:16+02:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>164</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgApAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FUI+r6UmpJpb3sC&#xA;6lIhljsTKgnaMVq6xV5ldutMVUz5h0ATQQHUrUT3UkkFtEZ4+cksLFJI0XlVnRhxZRuD1xVV0/Vt&#xA;K1KOSTTryC9jicxSvbypKEkXqjFC1GHcHFUVirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirTuiIzuwVFBLMTQADqScVed+UPMHm+983SR6hqVlPpLi5SCCGa&#xA;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&#xA;/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:4077C439E1CCE0119B959CC3AA951AE7</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:90DBB2B8E2CCE0119B959CC3AA951AE7</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:3F77C439E1CCE0119B959CC3AA951AE7</stRef:instanceID>
            <stRef:documentID>uuid:67b239a3-6072-0745-bc4a-efd8ab048d8d</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>567.000000</stDim:w>
            <stDim:h>358.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica-BoldOblique</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Bold Oblique</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>7.0d20e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica-Oblique</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Oblique</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>7.0d20e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>7.0d20e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Arial-ItalicMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00.2x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Arial Italic.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.2x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Arial.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -358 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 358 li
567 358 li
567 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 358 mo
567 358 li
567 0 li
0 0 li
0 358 li
cp
clp
0.75 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
85 22.75 mo
538.5 22.75 li
538.5 232.749 li
85 232.749 li
85 22.75 li
cp
85 22.75 mo
538.5 22.75 li
538.5 232.749 li
85 232.749 li
85 22.75 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
@
1.5 lw
85 232.75 mo
538.5 232.75 li
@
0.75 lw
85 232.75 mo
538.5 232.75 li
521.5 229.75 mo
521.5 232.75 li
502.75 229.75 mo
502.75 232.75 li
483.75 229.75 mo
483.75 232.75 li
465 226.75 mo
465 232.75 li
87 226.75 mo
87 232.75 li
465 226.75 mo
465 232.75 li
446 229.75 mo
446 232.75 li
427 229.75 mo
427 232.75 li
408.25 229.75 mo
408.25 232.75 li
389.25 226.75 mo
389.25 232.75 li
370.5 229.75 mo
370.5 232.75 li
351.5 229.75 mo
351.5 232.75 li
332.5 229.75 mo
332.5 232.75 li
313.75 226.75 mo
313.75 232.75 li
294.75 229.75 mo
294.75 232.75 li
276 229.75 mo
276 232.75 li
257 229.75 mo
257 232.75 li
238 226.75 mo
238 232.75 li
219.25 229.75 mo
219.25 232.75 li
200.25 229.75 mo
200.25 232.75 li
181.5 229.75 mo
181.5 232.75 li
162.5 226.75 mo
162.5 232.75 li
143.5 229.75 mo
143.5 232.75 li
124.75 229.75 mo
124.75 232.75 li
105.75 229.75 mo
105.75 232.75 li
87 226.75 mo
87 232.75 li
85 232.75 mo
85 22.75 li
521.5 25.75 mo
521.5 22.75 li
502.75 25.75 mo
502.75 22.75 li
483.75 25.75 mo
483.75 22.75 li
465 29 mo
465 22.75 li
87 29 mo
87 22.75 li
465 29 mo
465 22.75 li
446 25.75 mo
446 22.75 li
427 25.75 mo
427 22.75 li
408.25 25.75 mo
408.25 22.75 li
389.25 29 mo
389.25 22.75 li
370.5 25.75 mo
370.5 22.75 li
351.5 25.75 mo
351.5 22.75 li
332.5 25.75 mo
332.5 22.75 li
313.75 29 mo
313.75 22.75 li
294.75 25.75 mo
294.75 22.75 li
276 25.75 mo
276 22.75 li
257 25.75 mo
257 22.75 li
238 29 mo
238 22.75 li
219.25 25.75 mo
219.25 22.75 li
200.25 25.75 mo
200.25 22.75 li
181.5 25.75 mo
181.5 22.75 li
162.5 29 mo
162.5 22.75 li
143.5 25.75 mo
143.5 22.75 li
124.75 25.75 mo
124.75 22.75 li
105.75 25.75 mo
105.75 22.75 li
87 29 mo
87 22.75 li
85 22.75 mo
538.5 22.75 li
@
0.101961 0.0901961 0.105882 rgb
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 69 /E putdup 101 /e putdup 110 /n putdup 115 /s putdup 116 /t putdup 118 /v putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings7 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/E <1C60D8A8C9B64EDFE336C703EA12FABA68C9F5D15F1A9B67653505BC29F8D56A4237858E054C3198877A> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/s <1C60D8A8C9B7A73DE557A2AA450BB57EE39D611FDE79056DA153DEDE8E0D2C9D756143DA5E614060C362E0813E35369DA2F002330267D2CFA81D3D9AA172C91A8B8E19BB92CE3CFBA62200E9E8175CCCB3A5FA559ECF71DD7F2B47B117C69AC3637EDAE62020C9DAFDDB718C27C76EF62794CF8B187D103B05AC07655F04A6D9D5181CB287F032D98B2512B2A9B281D13745308AC05B350DA95BA0BE14F12630B5B2A718215DC0DE5A544FA267BEF8FD5CF5292808F195D31A5EEC3ADC63> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-/v <1C60D8A8C9B7A73DDF32B99894CC6FA66F5D07EC695DA6C164CB40F9A791729569775D3BE9C3> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/HLSMFT+Helvetica /Helvetica findfont ct_VMDictPut/HLSMFT+Helvetica*1 [69{/.notdef}rp /E 31{/.notdef}rp /e 8{/.notdef}rp /n 4{/.notdef}rp /s /t /.notdef /v 137{/.notdef}rp]HLSMFT+Helvetica nfHLSMFT+Helvetica*1 [0 -18 -18 0 0 0 ]msf29.5703 77.7793 mo(Events)[-12.0059 -9 -10.0107 -10.0107 -5.00098 0 ]ysh99 24.75 mo
85 24.75 li
99 24.75 mo
85 24.75 li
92 29 mo
85 29 li
92 33.25 mo
85 33.25 li
92 37.75 mo
85 37.75 li
99 42 mo
85 42 li
92 46.25 mo
85 46.25 li
92 50.75 mo
85 50.75 li
92 55 mo
85 55 li
99 59.25 mo
85 59.25 li
92 63.75 mo
85 63.75 li
92 68 mo
85 68 li
92 72.5 mo
85 72.5 li
99 76.75 mo
85 76.75 li
92 81 mo
85 81 li
92 85.5 mo
85 85.5 li
92 89.75 mo
85 89.75 li
99 94 mo
85 94 li
92 98.5 mo
85 98.5 li
92 102.75 mo
85 102.75 li
92 107 mo
85 107 li
99 111.5 mo
85 111.5 li
92 115.75 mo
85 115.75 li
92 120 mo
85 120 li
92 124.5 mo
85 124.5 li
99 128.75 mo
85 128.75 li
92 133 mo
85 133 li
92 137.5 mo
85 137.5 li
92 141.75 mo
85 141.75 li
99 146 mo
85 146 li
92 150.5 mo
85 150.5 li
92 154.75 mo
85 154.75 li
92 159 mo
85 159 li
99 163.5 mo
85 163.5 li
92 167.75 mo
85 167.75 li
92 172 mo
85 172 li
92 176.5 mo
85 176.5 li
99 180.75 mo
85 180.75 li
92 185 mo
85 185 li
92 189.5 mo
85 189.5 li
92 193.75 mo
85 193.75 li
99 198 mo
85 198 li
92 202.5 mo
85 202.5 li
92 206.75 mo
85 206.75 li
92 211 mo
85 211 li
99 215.5 mo
85 215.5 li
92 219.75 mo
85 219.75 li
92 224 mo
85 224 li
92 228.5 mo
85 228.5 li
99 232.75 mo
85 232.75 li
0 0 0 rgb
@
0.101961 0.0901961 0.105882 rgb
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginHLSMFT+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-/eight <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-systemdict /gcheck known {setglobal} if end {end} ifendHLSMFT+Helvetica /Encoding getdup 48 /zero putdup 49 /one putdup 50 /two putdup 52 /four putdup 54 /six putdup 56 /eight putpop%ADOEndSubsetFont
/HLSMFT+Helvetica*1 [48{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 12{/.notdef}rp /E 31{/.notdef}rp /e 8{/.notdef}rp /n 4{/.notdef}rp /s /t /.notdef /v 137{/.notdef}rp]HLSMFT+Helvetica nfHLSMFT+Helvetica*1 [18 0 0 -18 0 0 ]msf49.8975 202.25 mo(400)[10.0107 10.0107 0 ]xsh49.8975 167.665 mo(800)[10.0107 10.0107 0 ]xsh39.8857 132.586 mo(1200)[10.0107 10.0107 10.0107 0 ]xsh39.8857 97.978 mo(1600)[10.0107 10.0107 10.0107 0 ]xsh39.8857 63.3604 mo(2000)[10.0107 10.0107 10.0107 0 ]xsh39.8857 28.7661 mo(2400)[10.0107 10.0107 10.0107 0 ]xsh524.75 24.75 mo
538.5 24.75 li
524.75 24.75 mo
538.5 24.75 li
531.5 29 mo
538.5 29 li
531.5 33.25 mo
538.5 33.25 li
531.5 37.75 mo
538.5 37.75 li
524.75 42 mo
538.5 42 li
531.5 46.25 mo
538.5 46.25 li
531.5 50.75 mo
538.5 50.75 li
531.5 55 mo
538.5 55 li
524.75 59.25 mo
538.5 59.25 li
531.5 63.75 mo
538.5 63.75 li
531.5 68 mo
538.5 68 li
531.5 72.5 mo
538.5 72.5 li
524.75 76.75 mo
538.5 76.75 li
531.5 81 mo
538.5 81 li
531.5 85.5 mo
538.5 85.5 li
531.5 89.75 mo
538.5 89.75 li
524.75 94 mo
538.5 94 li
531.5 98.5 mo
538.5 98.5 li
531.5 102.75 mo
538.5 102.75 li
531.5 107 mo
538.5 107 li
524.75 111.5 mo
538.5 111.5 li
531.5 115.75 mo
538.5 115.75 li
531.5 120 mo
538.5 120 li
531.5 124.5 mo
538.5 124.5 li
524.75 128.75 mo
538.5 128.75 li
531.5 133 mo
538.5 133 li
531.5 137.5 mo
538.5 137.5 li
531.5 141.75 mo
538.5 141.75 li
524.75 146 mo
538.5 146 li
531.5 150.5 mo
538.5 150.5 li
531.5 154.75 mo
538.5 154.75 li
531.5 159 mo
538.5 159 li
524.75 163.5 mo
538.5 163.5 li
531.5 167.75 mo
538.5 167.75 li
531.5 172 mo
538.5 172 li
531.5 176.5 mo
538.5 176.5 li
524.75 180.75 mo
538.5 180.75 li
531.5 185 mo
538.5 185 li
531.5 189.5 mo
538.5 189.5 li
531.5 193.75 mo
538.5 193.75 li
524.75 198 mo
538.5 198 li
531.5 202.5 mo
538.5 202.5 li
531.5 206.75 mo
538.5 206.75 li
531.5 211 mo
538.5 211 li
524.75 215.5 mo
538.5 215.5 li
531.5 219.75 mo
538.5 219.75 li
531.5 224 mo
538.5 224 li
531.5 228.5 mo
538.5 228.5 li
524.75 232.75 mo
538.5 232.75 li
538.5 232.75 mo
538.5 22.75 li
0 0 0 rgb
@
85 232.75 mo
85 128.5 li
88.75 128.5 li
88.75 94.25 li
92.5 94.25 li
92.5 85.25 li
96.5 85.25 li
96.5 81 li
100.25 81 li
100.25 73 li
104 73 li
104 70.75 li
107.75 70.75 li
107.75 69 li
111.5 69 li
111.5 66 li
115.25 66 li
115.25 68 li
122.75 68 li
122.75 80.5 li
126.5 80.5 li
126.5 81 li
130.5 81 li
130.5 90.25 li
134.25 90.25 li
134.25 104.25 li
138 104.25 li
138 116 li
141.75 116 li
141.75 135 li
145.5 135 li
145.5 150.25 li
149.25 150.25 li
149.25 172.75 li
153 172.75 li
153 206.25 li
156.75 206.25 li
156.75 229.25 li
160.75 229.25 li
160.75 214 li
164.5 214 li
164.5 194.25 li
168.25 194.25 li
168.25 188.5 li
172 188.5 li
172 185 li
175.75 185 li
175.75 186.5 li
179.5 186.5 li
179.5 185.75 li
183.25 185.75 li
183.25 191.25 li
187 191.25 li
187 190.5 li
190.75 190.5 li
190.75 188 li
194.75 188 li
194.75 191 li
198.5 191 li
198.5 194 li
202.25 194 li
202.25 193.75 li
206 193.75 li
206 198.5 li
209.75 198.5 li
209.75 198 li
213.5 198 li
213.5 197 li
217.25 197 li
217.25 199 li
221 199 li
221 196.75 li
225 196.75 li
225 197.25 li
228.75 197.25 li
228.75 195 li
232.5 195 li
232.5 219.75 li
236.25 219.75 li
236.25 223 li
240 223 li
240 219.25 li
243.75 219.25 li
243.75 219 li
247.5 219 li
247.5 219.75 li
251.25 219.75 li
251.25 218.25 li
255 218.25 li
255 219.75 li
259 219.75 li
259 220 li
262.75 220 li
262.75 218 li
266.5 218 li
266.5 217.25 li
270.25 217.25 li
270.25 216.75 li
274 216.75 li
274 217.25 li
277.75 217.25 li
277.75 216.5 li
281.5 216.5 li
281.5 214.75 li
285.25 214.75 li
285.25 213.75 li
289.25 213.75 li
289.25 213.25 li
293 213.25 li
293 210.25 li
296.75 210.25 li
296.75 208 li
300.5 208 li
300.5 208.5 li
304.25 208.5 li
304.25 206.25 li
308 206.25 li
308 225.75 li
311.75 225.75 li
311.75 222.25 li
315.5 222.25 li
315.5 180.25 li
319.25 180.25 li
319.25 164.75 li
323.25 164.75 li
323.25 152 li
327 152 li
327 142.75 li
330.75 142.75 li
330.75 141.75 li
334.5 141.75 li
334.5 138.75 li
338.25 138.75 li
338.25 138.25 li
342 138.25 li
342 135.75 li
345.75 135.75 li
345.75 134.75 li
349.5 134.75 li
349.5 132.5 li
353.5 132.5 li
353.5 136.75 li
357.25 136.75 li
357.25 145.75 li
361 145.75 li
361 150.25 li
364.75 150.25 li
364.75 161 li
368.5 161 li
368.5 174.75 li
372.25 174.75 li
372.25 188.5 li
376 188.5 li
376 204.5 li
379.75 204.5 li
379.75 221.75 li
383.5 221.75 li
383.5 232 li
387.5 232 li
387.5 227.25 li
391.25 227.25 li
391.25 214 li
395 214 li
395 207.25 li
398.75 207.25 li
398.75 207 li
406.25 207 li
406.25 206.25 li
410 206.25 li
410 206.5 li
413.75 206.5 li
413.75 208 li
417.75 208 li
417.75 205.75 li
421.5 205.75 li
421.5 206.25 li
425.25 206.25 li
425.25 201.25 li
429 201.25 li
429 203 li
432.75 203 li
432.75 203.75 li
436.5 203.75 li
436.5 204.75 li
440.25 204.75 li
440.25 206.25 li
444 206.25 li
444 207.75 li
447.75 207.75 li
447.75 207.5 li
451.75 207.5 li
451.75 209 li
455.5 209 li
455.5 217.25 li
459.25 217.25 li
459.25 231.25 li
463 231.25 li
463 229.25 li
466.75 229.25 li
466.75 224.5 li
470.5 224.5 li
470.5 222.5 li
474.25 222.5 li
474.25 221.5 li
478 221.5 li
478 222.5 li
482 222.5 li
482 220.75 li
485.75 220.75 li
485.75 218.75 li
489.5 218.75 li
489.5 219.5 li
493.25 219.5 li
493.25 219.25 li
497 219.25 li
497 217.75 li
500.75 217.75 li
500.75 217.5 li
504.5 217.5 li
504.5 218.5 li
512.25 218.5 li
512.25 218 li
516 218 li
516 217.75 li
519.75 217.75 li
519.75 217.5 li
523.5 217.5 li
523.5 218.25 li
527.25 218.25 li
527.25 217.25 li
531 217.25 li
531 220.5 li
534.75 220.5 li
534.75 230.5 li
538.5 230.5 li
538.5 232.75 li
1 0 0 rgb
ef
85 129.25 mo
88.75 129.25 li
88.75 95.75 li
92.5 95.75 li
92.5 87.5 li
96.5 87.5 li
96.5 85.25 li
100.25 85.25 li
100.25 77.5 li
104 77.5 li
104 78 li
107.75 78 li
107.75 79 li
111.5 79 li
111.5 77.5 li
115.25 77.5 li
115.25 81.5 li
119 81.5 li
119 83.5 li
122.75 83.5 li
122.75 97.75 li
126.5 97.75 li
126.5 100.75 li
130.5 100.75 li
130.5 110.5 li
134.25 110.5 li
134.25 126.25 li
138 126.25 li
138 138.5 li
141.75 138.5 li
141.75 158.25 li
145.5 158.25 li
145.5 172.5 li
149.25 172.5 li
149.25 194.25 li
153 194.25 li
153 218 li
156.75 218 li
156.75 231.5 li
160.75 231.5 li
160.75 215 li
164.5 215 li
164.5 197.25 li
168.25 197.25 li
168.25 194.25 li
172 194.25 li
172 192.75 li
175.75 192.75 li
175.75 195.75 li
179.5 195.75 li
179.5 196 li
183.25 196 li
183.25 202.25 li
187 202.25 li
187 201.25 li
190.75 201.25 li
190.75 202 li
194.75 202 li
194.75 204.25 li
198.5 204.25 li
198.5 207 li
202.25 207 li
202.25 209 li
206 209 li
206 213 li
209.75 213 li
209.75 212.25 li
213.5 212.25 li
213.5 213 li
217.25 213 li
217.25 215.75 li
221 215.75 li
221 217 li
225 217 li
225 218.5 li
228.75 218.5 li
228.75 222 li
232.5 222 li
232.5 230.5 li
236.25 230.5 li
236.25 225 li
240 225 li
240 223 li
243.75 223 li
243.75 224 li
247.5 224 li
247.5 226.75 li
251.25 226.75 li
251.25 224.75 li
255 224.75 li
255 225.75 li
259 225.75 li
259 226.75 li
262.75 226.75 li
262.75 226.5 li
266.5 226.5 li
266.5 225.5 li
270.25 225.5 li
270.25 226.25 li
277.75 226.25 li
277.75 227 li
281.5 227 li
281.5 226.25 li
285.25 226.25 li
285.25 226 li
289.25 226 li
289.25 226.5 li
293 226.5 li
293 226.75 li
296.75 226.75 li
296.75 225.75 li
300.5 225.75 li
300.5 227.5 li
304.25 227.5 li
304.25 228.5 li
308 228.5 li
308 231.75 li
311.75 231.75 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
85 129.25 mo
88.75 129.25 li
88.75 95.75 li
92.5 95.75 li
92.5 87.5 li
96.5 87.5 li
96.5 85.25 li
100.25 85.25 li
100.25 77.5 li
104 77.5 li
104 78 li
107.75 78 li
107.75 79 li
111.5 79 li
111.5 77.5 li
115.25 77.5 li
115.25 81.5 li
119 81.5 li
119 83.5 li
122.75 83.5 li
122.75 97.75 li
126.5 97.75 li
126.5 100.75 li
130.5 100.75 li
130.5 110.5 li
134.25 110.5 li
134.25 126.25 li
138 126.25 li
138 138.5 li
141.75 138.5 li
141.75 158.25 li
145.5 158.25 li
145.5 172.5 li
149.25 172.5 li
149.25 194.25 li
153 194.25 li
153 218 li
156.75 218 li
156.75 231.5 li
160.75 231.5 li
160.75 215 li
164.5 215 li
164.5 197.25 li
168.25 197.25 li
168.25 194.25 li
172 194.25 li
172 192.75 li
175.75 192.75 li
175.75 195.75 li
179.5 195.75 li
179.5 196 li
183.25 196 li
183.25 202.25 li
187 202.25 li
187 201.25 li
190.75 201.25 li
190.75 202 li
194.75 202 li
194.75 204.25 li
198.5 204.25 li
198.5 207 li
202.25 207 li
202.25 209 li
206 209 li
206 213 li
209.75 213 li
209.75 212.25 li
213.5 212.25 li
213.5 213 li
217.25 213 li
217.25 215.75 li
221 215.75 li
221 217 li
225 217 li
225 218.5 li
228.75 218.5 li
228.75 222 li
232.5 222 li
232.5 230.5 li
236.25 230.5 li
236.25 225 li
240 225 li
240 223 li
243.75 223 li
243.75 224 li
247.5 224 li
247.5 226.75 li
251.25 226.75 li
251.25 224.75 li
255 224.75 li
255 225.75 li
259 225.75 li
259 226.75 li
262.75 226.75 li
262.75 226.5 li
266.5 226.5 li
266.5 225.5 li
270.25 225.5 li
270.25 226.25 li
277.75 226.25 li
277.75 227 li
281.5 227 li
281.5 226.25 li
285.25 226.25 li
285.25 226 li
289.25 226 li
289.25 226.5 li
293 226.5 li
293 226.75 li
296.75 226.75 li
296.75 225.75 li
300.5 225.75 li
300.5 227.5 li
304.25 227.5 li
304.25 228.5 li
308 228.5 li
308 231.75 li
311.75 231.75 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
85 128.5 mo
88.75 128.5 li
88.75 94.25 li
92.5 94.25 li
92.5 85.25 li
96.5 85.25 li
96.5 81 li
100.25 81 li
100.25 73 li
104 73 li
104 70.75 li
107.75 70.75 li
107.75 69 li
111.5 69 li
111.5 66 li
115.25 66 li
115.25 68 li
122.75 68 li
122.75 80.5 li
126.5 80.5 li
126.5 81 li
130.5 81 li
130.5 90.25 li
134.25 90.25 li
134.25 104.25 li
138 104.25 li
138 116 li
141.75 116 li
141.75 135 li
145.5 135 li
145.5 150.25 li
149.25 150.25 li
149.25 172.75 li
153 172.75 li
153 206.25 li
156.75 206.25 li
156.75 229.25 li
160.75 229.25 li
160.75 214 li
164.5 214 li
164.5 194.25 li
168.25 194.25 li
168.25 188.5 li
172 188.5 li
172 185 li
175.75 185 li
175.75 186.5 li
179.5 186.5 li
179.5 185.75 li
183.25 185.75 li
183.25 191.25 li
187 191.25 li
187 190.5 li
190.75 190.5 li
190.75 188 li
194.75 188 li
194.75 191 li
198.5 191 li
198.5 194 li
202.25 194 li
202.25 193.75 li
206 193.75 li
206 198.5 li
209.75 198.5 li
209.75 198 li
213.5 198 li
213.5 197 li
217.25 197 li
217.25 199 li
221 199 li
221 196.75 li
225 196.75 li
225 197.25 li
228.75 197.25 li
228.75 195 li
232.5 195 li
232.5 219.75 li
236.25 219.75 li
236.25 223 li
240 223 li
240 219.25 li
243.75 219.25 li
243.75 219 li
247.5 219 li
247.5 219.75 li
251.25 219.75 li
251.25 218.25 li
255 218.25 li
255 219.75 li
259 219.75 li
259 220 li
262.75 220 li
262.75 218 li
266.5 218 li
266.5 217.25 li
270.25 217.25 li
270.25 216.75 li
274 216.75 li
274 217.25 li
277.75 217.25 li
277.75 216.5 li
281.5 216.5 li
281.5 214.75 li
285.25 214.75 li
285.25 213.75 li
289.25 213.75 li
289.25 213.25 li
293 213.25 li
293 210.25 li
296.75 210.25 li
296.75 208 li
300.5 208 li
300.5 208.5 li
304.25 208.5 li
304.25 206.25 li
308 206.25 li
308 225.75 li
311.75 225.75 li
311.75 222.25 li
315.5 222.25 li
315.5 180.25 li
319.25 180.25 li
319.25 164.75 li
323.25 164.75 li
323.25 152 li
327 152 li
327 142.75 li
330.75 142.75 li
330.75 141.75 li
334.5 141.75 li
334.5 138.75 li
338.25 138.75 li
338.25 138.25 li
342 138.25 li
342 135.75 li
345.75 135.75 li
345.75 134.75 li
349.5 134.75 li
349.5 132.5 li
353.5 132.5 li
353.5 136.75 li
357.25 136.75 li
357.25 145.75 li
361 145.75 li
361 150.25 li
364.75 150.25 li
364.75 161 li
368.5 161 li
368.5 174.75 li
372.25 174.75 li
372.25 188.5 li
376 188.5 li
376 204.5 li
379.75 204.5 li
379.75 221.75 li
383.5 221.75 li
383.5 232 li
387.5 232 li
387.5 227.25 li
391.25 227.25 li
391.25 214 li
395 214 li
395 207.25 li
398.75 207.25 li
398.75 207 li
406.25 207 li
406.25 206.25 li
410 206.25 li
410 206.5 li
413.75 206.5 li
413.75 208 li
417.75 208 li
417.75 205.75 li
421.5 205.75 li
421.5 206.25 li
425.25 206.25 li
425.25 201.25 li
429 201.25 li
429 203 li
432.75 203 li
432.75 203.75 li
436.5 203.75 li
436.5 204.75 li
440.25 204.75 li
440.25 206.25 li
444 206.25 li
444 207.75 li
447.75 207.75 li
447.75 207.5 li
451.75 207.5 li
451.75 209 li
455.5 209 li
455.5 217.25 li
459.25 217.25 li
459.25 231.25 li
463 231.25 li
463 229.25 li
466.75 229.25 li
466.75 224.5 li
470.5 224.5 li
470.5 222.5 li
474.25 222.5 li
474.25 221.5 li
478 221.5 li
478 222.5 li
482 222.5 li
482 220.75 li
485.75 220.75 li
485.75 218.75 li
489.5 218.75 li
489.5 219.5 li
493.25 219.5 li
493.25 219.25 li
497 219.25 li
497 217.75 li
500.75 217.75 li
500.75 217.5 li
504.5 217.5 li
504.5 218.5 li
512.25 218.5 li
512.25 218 li
516 218 li
516 217.75 li
519.75 217.75 li
519.75 217.5 li
523.5 217.5 li
523.5 218.25 li
527.25 218.25 li
527.25 217.25 li
531 217.25 li
531 220.5 li
534.75 220.5 li
534.75 230.5 li
538.5 230.5 li
0 0 0 rgb
@
85 232.75 mo
85 129.25 li
88.75 129.25 li
88.75 95.75 li
92.5 95.75 li
92.5 87.5 li
96.5 87.5 li
96.5 85.25 li
100.25 85.25 li
100.25 77.5 li
104 77.5 li
104 78 li
107.75 78 li
107.75 79 li
111.5 79 li
111.5 77.5 li
115.25 77.5 li
115.25 81.5 li
119 81.5 li
119 83.5 li
122.75 83.5 li
122.75 97.75 li
126.5 97.75 li
126.5 100.75 li
130.5 100.75 li
130.5 110.5 li
134.25 110.5 li
134.25 126.25 li
138 126.25 li
138 138.5 li
141.75 138.5 li
141.75 158.25 li
145.5 158.25 li
145.5 172.5 li
149.25 172.5 li
149.25 194.25 li
153 194.25 li
153 218 li
156.75 218 li
156.75 231.5 li
160.75 231.5 li
160.75 215 li
164.5 215 li
164.5 197.25 li
168.25 197.25 li
168.25 194.25 li
172 194.25 li
172 192.75 li
175.75 192.75 li
175.75 195.75 li
179.5 195.75 li
179.5 196 li
183.25 196 li
183.25 202.25 li
187 202.25 li
187 201.25 li
190.75 201.25 li
190.75 202 li
194.75 202 li
194.75 204.25 li
198.5 204.25 li
198.5 207 li
202.25 207 li
202.25 209 li
206 209 li
206 213 li
209.75 213 li
209.75 212.25 li
213.5 212.25 li
213.5 213 li
217.25 213 li
217.25 215.75 li
221 215.75 li
221 217 li
225 217 li
225 218.5 li
228.75 218.5 li
228.75 222 li
232.5 222 li
232.5 230.5 li
236.25 230.5 li
236.25 225 li
240 225 li
240 223 li
243.75 223 li
243.75 224 li
247.5 224 li
247.5 226.75 li
251.25 226.75 li
251.25 224.75 li
255 224.75 li
255 225.75 li
259 225.75 li
259 226.75 li
262.75 226.75 li
262.75 226.5 li
266.5 226.5 li
266.5 225.5 li
270.25 225.5 li
270.25 226.25 li
277.75 226.25 li
277.75 227 li
281.5 227 li
281.5 226.25 li
285.25 226.25 li
285.25 226 li
289.25 226 li
289.25 226.5 li
293 226.5 li
293 226.75 li
296.75 226.75 li
296.75 225.75 li
300.5 225.75 li
300.5 227.5 li
304.25 227.5 li
304.25 228.5 li
308 228.5 li
308 231.75 li
311.75 231.75 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
538.5 232.75 li
1 0.745098 0 rgb
ef
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 215 li
164.5 215 li
164.5 197.25 li
168.25 197.25 li
168.25 194.25 li
172 194.25 li
172 192.75 li
175.75 192.75 li
175.75 195.75 li
179.5 195.75 li
179.5 196 li
183.25 196 li
183.25 202.25 li
187 202.25 li
187 201.25 li
190.75 201.25 li
190.75 202 li
194.75 202 li
194.75 204.25 li
198.5 204.25 li
198.5 207 li
202.25 207 li
202.25 209 li
206 209 li
206 213 li
209.75 213 li
209.75 212.25 li
213.5 212.25 li
213.5 213 li
217.25 213 li
217.25 215.75 li
221 215.75 li
221 217 li
225 217 li
225 218.5 li
228.75 218.5 li
228.75 222 li
232.5 222 li
232.5 230.5 li
236.25 230.5 li
236.25 225 li
240 225 li
240 223 li
243.75 223 li
243.75 224 li
247.5 224 li
247.5 226.75 li
251.25 226.75 li
251.25 224.75 li
255 224.75 li
255 225.75 li
259 225.75 li
259 226.75 li
262.75 226.75 li
262.75 226.5 li
266.5 226.5 li
266.5 225.5 li
270.25 225.5 li
270.25 226.25 li
277.75 226.25 li
277.75 227 li
281.5 227 li
281.5 226.25 li
285.25 226.25 li
285.25 226 li
289.25 226 li
289.25 226.5 li
293 226.5 li
293 226.75 li
296.75 226.75 li
296.75 225.75 li
300.5 225.75 li
300.5 227.5 li
304.25 227.5 li
304.25 228.5 li
308 228.5 li
308 231.75 li
311.75 231.75 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 215 li
164.5 215 li
164.5 197.25 li
168.25 197.25 li
168.25 194.25 li
172 194.25 li
172 192.75 li
175.75 192.75 li
175.75 195.75 li
179.5 195.75 li
179.5 196 li
183.25 196 li
183.25 202.25 li
187 202.25 li
187 201.25 li
190.75 201.25 li
190.75 202 li
194.75 202 li
194.75 204.25 li
198.5 204.25 li
198.5 207 li
202.25 207 li
202.25 209 li
206 209 li
206 213 li
209.75 213 li
209.75 212.25 li
213.5 212.25 li
213.5 213 li
217.25 213 li
217.25 215.75 li
221 215.75 li
221 217 li
225 217 li
225 218.5 li
228.75 218.5 li
228.75 222 li
232.5 222 li
232.5 230.5 li
236.25 230.5 li
236.25 225 li
240 225 li
240 223 li
243.75 223 li
243.75 224 li
247.5 224 li
247.5 226.75 li
251.25 226.75 li
251.25 224.75 li
255 224.75 li
255 225.75 li
259 225.75 li
259 226.75 li
262.75 226.75 li
262.75 226.5 li
266.5 226.5 li
266.5 225.5 li
270.25 225.5 li
270.25 226.25 li
277.75 226.25 li
277.75 227 li
281.5 227 li
281.5 226.25 li
285.25 226.25 li
285.25 226 li
289.25 226 li
289.25 226.5 li
293 226.5 li
293 226.75 li
296.75 226.75 li
296.75 225.75 li
300.5 225.75 li
300.5 227.5 li
304.25 227.5 li
304.25 228.5 li
308 228.5 li
308 231.75 li
311.75 231.75 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
85 129.25 mo
88.75 129.25 li
88.75 95.75 li
92.5 95.75 li
92.5 87.5 li
96.5 87.5 li
96.5 85.25 li
100.25 85.25 li
100.25 77.5 li
104 77.5 li
104 78 li
107.75 78 li
107.75 79 li
111.5 79 li
111.5 77.5 li
115.25 77.5 li
115.25 81.5 li
119 81.5 li
119 83.5 li
122.75 83.5 li
122.75 97.75 li
126.5 97.75 li
126.5 100.75 li
130.5 100.75 li
130.5 110.5 li
134.25 110.5 li
134.25 126.25 li
138 126.25 li
138 138.5 li
141.75 138.5 li
141.75 158.25 li
145.5 158.25 li
145.5 172.5 li
149.25 172.5 li
149.25 194.25 li
153 194.25 li
153 218 li
156.75 218 li
156.75 231.5 li
160.75 231.5 li
160.75 215 li
164.5 215 li
164.5 197.25 li
168.25 197.25 li
168.25 194.25 li
172 194.25 li
172 192.75 li
175.75 192.75 li
175.75 195.75 li
179.5 195.75 li
179.5 196 li
183.25 196 li
183.25 202.25 li
187 202.25 li
187 201.25 li
190.75 201.25 li
190.75 202 li
194.75 202 li
194.75 204.25 li
198.5 204.25 li
198.5 207 li
202.25 207 li
202.25 209 li
206 209 li
206 213 li
209.75 213 li
209.75 212.25 li
213.5 212.25 li
213.5 213 li
217.25 213 li
217.25 215.75 li
221 215.75 li
221 217 li
225 217 li
225 218.5 li
228.75 218.5 li
228.75 222 li
232.5 222 li
232.5 230.5 li
236.25 230.5 li
236.25 225 li
240 225 li
240 223 li
243.75 223 li
243.75 224 li
247.5 224 li
247.5 226.75 li
251.25 226.75 li
251.25 224.75 li
255 224.75 li
255 225.75 li
259 225.75 li
259 226.75 li
262.75 226.75 li
262.75 226.5 li
266.5 226.5 li
266.5 225.5 li
270.25 225.5 li
270.25 226.25 li
277.75 226.25 li
277.75 227 li
281.5 227 li
281.5 226.25 li
285.25 226.25 li
285.25 226 li
289.25 226 li
289.25 226.5 li
293 226.5 li
293 226.75 li
296.75 226.75 li
296.75 225.75 li
300.5 225.75 li
300.5 227.5 li
304.25 227.5 li
304.25 228.5 li
308 228.5 li
308 231.75 li
311.75 231.75 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
0 0 0 rgb
@
85 232.75 mo
85 206.5 li
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 215 li
164.5 215 li
164.5 197.25 li
168.25 197.25 li
168.25 194.25 li
172 194.25 li
172 192.75 li
175.75 192.75 li
175.75 195.75 li
179.5 195.75 li
179.5 196 li
183.25 196 li
183.25 202.25 li
187 202.25 li
187 201.25 li
190.75 201.25 li
190.75 202 li
194.75 202 li
194.75 204.25 li
198.5 204.25 li
198.5 207 li
202.25 207 li
202.25 209 li
206 209 li
206 213 li
209.75 213 li
209.75 212.25 li
213.5 212.25 li
213.5 213 li
217.25 213 li
217.25 215.75 li
221 215.75 li
221 217 li
225 217 li
225 218.5 li
228.75 218.5 li
228.75 222 li
232.5 222 li
232.5 230.5 li
236.25 230.5 li
236.25 225 li
240 225 li
240 223 li
243.75 223 li
243.75 224 li
247.5 224 li
247.5 226.75 li
251.25 226.75 li
251.25 224.75 li
255 224.75 li
255 225.75 li
259 225.75 li
259 226.75 li
262.75 226.75 li
262.75 226.5 li
266.5 226.5 li
266.5 225.5 li
270.25 225.5 li
270.25 226.25 li
277.75 226.25 li
277.75 227 li
281.5 227 li
281.5 226.25 li
285.25 226.25 li
285.25 226 li
289.25 226 li
289.25 226.5 li
293 226.5 li
293 226.75 li
296.75 226.75 li
296.75 225.75 li
300.5 225.75 li
300.5 227.5 li
304.25 227.5 li
304.25 228.5 li
308 228.5 li
308 231.75 li
311.75 231.75 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
538.5 232.75 li
1 0.745098 0 rgb
ef
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 225 li
240 225 li
240 223 li
243.75 223 li
243.75 224 li
247.5 224 li
247.5 226.75 li
251.25 226.75 li
251.25 224.75 li
255 224.75 li
255 225.75 li
259 225.75 li
259 226.75 li
262.75 226.75 li
262.75 226.5 li
266.5 226.5 li
266.5 225.5 li
270.25 225.5 li
270.25 226.25 li
277.75 226.25 li
277.75 227 li
281.5 227 li
281.5 226.25 li
285.25 226.25 li
285.25 226 li
289.25 226 li
289.25 226.5 li
293 226.5 li
293 226.75 li
296.75 226.75 li
296.75 225.75 li
300.5 225.75 li
300.5 227.5 li
304.25 227.5 li
304.25 228.5 li
308 228.5 li
308 231.75 li
311.75 231.75 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 225 li
240 225 li
240 223 li
243.75 223 li
243.75 224 li
247.5 224 li
247.5 226.75 li
251.25 226.75 li
251.25 224.75 li
255 224.75 li
255 225.75 li
259 225.75 li
259 226.75 li
262.75 226.75 li
262.75 226.5 li
266.5 226.5 li
266.5 225.5 li
270.25 225.5 li
270.25 226.25 li
277.75 226.25 li
277.75 227 li
281.5 227 li
281.5 226.25 li
285.25 226.25 li
285.25 226 li
289.25 226 li
289.25 226.5 li
293 226.5 li
293 226.75 li
296.75 226.75 li
296.75 225.75 li
300.5 225.75 li
300.5 227.5 li
304.25 227.5 li
304.25 228.5 li
308 228.5 li
308 231.75 li
311.75 231.75 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 215 li
164.5 215 li
164.5 197.25 li
168.25 197.25 li
168.25 194.25 li
172 194.25 li
172 192.75 li
175.75 192.75 li
175.75 195.75 li
179.5 195.75 li
179.5 196 li
183.25 196 li
183.25 202.25 li
187 202.25 li
187 201.25 li
190.75 201.25 li
190.75 202 li
194.75 202 li
194.75 204.25 li
198.5 204.25 li
198.5 207 li
202.25 207 li
202.25 209 li
206 209 li
206 213 li
209.75 213 li
209.75 212.25 li
213.5 212.25 li
213.5 213 li
217.25 213 li
217.25 215.75 li
221 215.75 li
221 217 li
225 217 li
225 218.5 li
228.75 218.5 li
228.75 222 li
232.5 222 li
232.5 230.5 li
236.25 230.5 li
236.25 225 li
240 225 li
240 223 li
243.75 223 li
243.75 224 li
247.5 224 li
247.5 226.75 li
251.25 226.75 li
251.25 224.75 li
255 224.75 li
255 225.75 li
259 225.75 li
259 226.75 li
262.75 226.75 li
262.75 226.5 li
266.5 226.5 li
266.5 225.5 li
270.25 225.5 li
270.25 226.25 li
277.75 226.25 li
277.75 227 li
281.5 227 li
281.5 226.25 li
285.25 226.25 li
285.25 226 li
289.25 226 li
289.25 226.5 li
293 226.5 li
293 226.75 li
296.75 226.75 li
296.75 225.75 li
300.5 225.75 li
300.5 227.5 li
304.25 227.5 li
304.25 228.5 li
308 228.5 li
308 231.75 li
311.75 231.75 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
0 0 0 rgb
@
85 232.75 mo
85 206.5 li
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 225 li
240 225 li
240 223 li
243.75 223 li
243.75 224 li
247.5 224 li
247.5 226.75 li
251.25 226.75 li
251.25 224.75 li
255 224.75 li
255 225.75 li
259 225.75 li
259 226.75 li
262.75 226.75 li
262.75 226.5 li
266.5 226.5 li
266.5 225.5 li
270.25 225.5 li
270.25 226.25 li
277.75 226.25 li
277.75 227 li
281.5 227 li
281.5 226.25 li
285.25 226.25 li
285.25 226 li
289.25 226 li
289.25 226.5 li
293 226.5 li
293 226.75 li
296.75 226.75 li
296.75 225.75 li
300.5 225.75 li
300.5 227.5 li
304.25 227.5 li
304.25 228.5 li
308 228.5 li
308 231.75 li
311.75 231.75 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
538.5 232.75 li
1 0.745098 0 rgb
ef
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 225 li
240 225 li
240 223 li
243.75 223 li
243.75 224 li
247.5 224 li
247.5 226.75 li
251.25 226.75 li
251.25 224.75 li
255 224.75 li
255 225.75 li
259 225.75 li
259 226.75 li
262.75 226.75 li
262.75 226.5 li
266.5 226.5 li
266.5 225.5 li
270.25 225.5 li
270.25 226.25 li
277.75 226.25 li
277.75 227 li
281.5 227 li
281.5 226.25 li
285.25 226.25 li
285.25 226 li
289.25 226 li
289.25 226.5 li
293 226.5 li
293 226.75 li
296.75 226.75 li
296.75 225.75 li
300.5 225.75 li
300.5 227.5 li
304.25 227.5 li
304.25 228.5 li
308 228.5 li
308 231.75 li
311.75 231.75 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
0 0 0 rgb
@
85 232.75 mo
85 206.5 li
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
538.5 232.75 li
1 0.745098 0 rgb
ef
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 231.25 li
315.5 231.25 li
315.5 222 li
319.25 222 li
319.25 220.75 li
323.25 220.75 li
323.25 217.25 li
327 217.25 li
327 218.25 li
330.75 218.25 li
330.75 218 li
334.5 218 li
334.5 216.5 li
338.25 216.5 li
338.25 217.25 li
342 217.25 li
342 217.75 li
345.75 217.75 li
345.75 216.25 li
349.5 216.25 li
349.5 217.5 li
357.25 217.5 li
357.25 218 li
361 218 li
361 220.75 li
364.75 220.75 li
364.75 222 li
368.5 222 li
368.5 224.5 li
372.25 224.5 li
372.25 227 li
376 227 li
376 229.75 li
379.75 229.75 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 231.25 li
315.5 231.25 li
315.5 222 li
319.25 222 li
319.25 220.75 li
323.25 220.75 li
323.25 217.25 li
327 217.25 li
327 218.25 li
330.75 218.25 li
330.75 218 li
334.5 218 li
334.5 216.5 li
338.25 216.5 li
338.25 217.25 li
342 217.25 li
342 217.75 li
345.75 217.75 li
345.75 216.25 li
349.5 216.25 li
349.5 217.5 li
357.25 217.5 li
357.25 218 li
361 218 li
361 220.75 li
364.75 220.75 li
364.75 222 li
368.5 222 li
368.5 224.5 li
372.25 224.5 li
372.25 227 li
376 227 li
376 229.75 li
379.75 229.75 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 222.5 li
315.5 222.5 li
315.5 181.25 li
319.25 181.25 li
319.25 166.75 li
323.25 166.75 li
323.25 155 li
327 155 li
327 146.75 li
330.75 146.75 li
330.75 148.5 li
334.5 148.5 li
334.5 145.25 li
338.25 145.25 li
338.25 146.5 li
342 146.5 li
342 145.5 li
345.75 145.5 li
345.75 147 li
349.5 147 li
349.5 146 li
353.5 146 li
353.5 151.5 li
357.25 151.5 li
357.25 161.5 li
361 161.5 li
361 167.25 li
364.75 167.25 li
364.75 176.25 li
368.5 176.25 li
368.5 190.5 li
372.25 190.5 li
372.25 203 li
376 203 li
376 216 li
379.75 216 li
379.75 227.25 li
383.5 227.25 li
383.5 232.5 li
387.5 232.5 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
0 0 0 rgb
@
85 232.75 mo
85 206.5 li
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 231.25 li
315.5 231.25 li
315.5 222 li
319.25 222 li
319.25 220.75 li
323.25 220.75 li
323.25 217.25 li
327 217.25 li
327 218.25 li
330.75 218.25 li
330.75 218 li
334.5 218 li
334.5 216.5 li
338.25 216.5 li
338.25 217.25 li
342 217.25 li
342 217.75 li
345.75 217.75 li
345.75 216.25 li
349.5 216.25 li
349.5 217.5 li
357.25 217.5 li
357.25 218 li
361 218 li
361 220.75 li
364.75 220.75 li
364.75 222 li
368.5 222 li
368.5 224.5 li
372.25 224.5 li
372.25 227 li
376 227 li
376 229.75 li
379.75 229.75 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
538.5 232.75 li
1 0.745098 0 rgb
ef
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 231.25 li
315.5 231.25 li
315.5 222 li
319.25 222 li
319.25 220.75 li
323.25 220.75 li
323.25 217.25 li
327 217.25 li
327 218.25 li
330.75 218.25 li
330.75 218 li
334.5 218 li
334.5 216.5 li
338.25 216.5 li
338.25 217.25 li
342 217.25 li
342 217.75 li
345.75 217.75 li
345.75 216.25 li
349.5 216.25 li
349.5 217.5 li
357.25 217.5 li
357.25 218 li
361 218 li
361 220.75 li
364.75 220.75 li
364.75 222 li
368.5 222 li
368.5 224.5 li
372.25 224.5 li
372.25 227 li
376 227 li
376 229.75 li
379.75 229.75 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 231.75 li
391.25 231.75 li
391.25 229.75 li
395 229.75 li
395 227 li
398.75 227 li
398.75 227.25 li
402.5 227.25 li
402.5 227.75 li
413.75 227.75 li
413.75 228.75 li
417.75 228.75 li
417.75 229 li
421.5 229 li
421.5 228.5 li
425.25 228.5 li
425.25 228 li
429 228 li
429 228.25 li
432.75 228.25 li
432.75 228.75 li
440.25 228.75 li
440.25 229.5 li
447.75 229.5 li
447.75 230 li
451.75 230 li
451.75 230.5 li
455.5 230.5 li
455.5 231.5 li
459.25 231.5 li
459.25 232.75 li
463 232.75 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 231.25 li
315.5 231.25 li
315.5 222 li
319.25 222 li
319.25 220.75 li
323.25 220.75 li
323.25 217.25 li
327 217.25 li
327 218.25 li
330.75 218.25 li
330.75 218 li
334.5 218 li
334.5 216.5 li
338.25 216.5 li
338.25 217.25 li
342 217.25 li
342 217.75 li
345.75 217.75 li
345.75 216.25 li
349.5 216.25 li
349.5 217.5 li
357.25 217.5 li
357.25 218 li
361 218 li
361 220.75 li
364.75 220.75 li
364.75 222 li
368.5 222 li
368.5 224.5 li
372.25 224.5 li
372.25 227 li
376 227 li
376 229.75 li
379.75 229.75 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 231.75 li
391.25 231.75 li
391.25 229.75 li
395 229.75 li
395 227 li
398.75 227 li
398.75 227.25 li
402.5 227.25 li
402.5 227.75 li
413.75 227.75 li
413.75 228.75 li
417.75 228.75 li
417.75 229 li
421.5 229 li
421.5 228.5 li
425.25 228.5 li
425.25 228 li
429 228 li
429 228.25 li
432.75 228.25 li
432.75 228.75 li
440.25 228.75 li
440.25 229.5 li
447.75 229.5 li
447.75 230 li
451.75 230 li
451.75 230.5 li
455.5 230.5 li
455.5 231.5 li
459.25 231.5 li
459.25 232.75 li
463 232.75 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 231.25 li
315.5 231.25 li
315.5 222 li
319.25 222 li
319.25 220.75 li
323.25 220.75 li
323.25 217.25 li
327 217.25 li
327 218.25 li
330.75 218.25 li
330.75 218 li
334.5 218 li
334.5 216.5 li
338.25 216.5 li
338.25 217.25 li
342 217.25 li
342 217.75 li
345.75 217.75 li
345.75 216.25 li
349.5 216.25 li
349.5 217.5 li
357.25 217.5 li
357.25 218 li
361 218 li
361 220.75 li
364.75 220.75 li
364.75 222 li
368.5 222 li
368.5 224.5 li
372.25 224.5 li
372.25 227 li
376 227 li
376 229.75 li
379.75 229.75 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 227.75 li
391.25 227.75 li
391.25 216 li
395 216 li
395 211 li
398.75 211 li
398.75 211.75 li
402.5 211.75 li
402.5 213.75 li
413.75 213.75 li
413.75 215.25 li
417.75 215.25 li
417.75 214 li
421.5 214 li
421.5 214.5 li
425.25 214.5 li
425.25 212 li
429 212 li
429 214.75 li
432.75 214.75 li
432.75 216.25 li
436.5 216.25 li
436.5 217 li
440.25 217 li
440.25 219.25 li
444 219.25 li
444 220.5 li
447.75 220.5 li
447.75 221.75 li
451.75 221.75 li
451.75 225 li
455.5 225 li
455.5 228.75 li
459.25 228.75 li
459.25 232.5 li
463 232.5 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
0 0 0 rgb
@
85 232.75 mo
85 206.5 li
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 231.25 li
315.5 231.25 li
315.5 222 li
319.25 222 li
319.25 220.75 li
323.25 220.75 li
323.25 217.25 li
327 217.25 li
327 218.25 li
330.75 218.25 li
330.75 218 li
334.5 218 li
334.5 216.5 li
338.25 216.5 li
338.25 217.25 li
342 217.25 li
342 217.75 li
345.75 217.75 li
345.75 216.25 li
349.5 216.25 li
349.5 217.5 li
357.25 217.5 li
357.25 218 li
361 218 li
361 220.75 li
364.75 220.75 li
364.75 222 li
368.5 222 li
368.5 224.5 li
372.25 224.5 li
372.25 227 li
376 227 li
376 229.75 li
379.75 229.75 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 231.75 li
391.25 231.75 li
391.25 229.75 li
395 229.75 li
395 227 li
398.75 227 li
398.75 227.25 li
402.5 227.25 li
402.5 227.75 li
413.75 227.75 li
413.75 228.75 li
417.75 228.75 li
417.75 229 li
421.5 229 li
421.5 228.5 li
425.25 228.5 li
425.25 228 li
429 228 li
429 228.25 li
432.75 228.25 li
432.75 228.75 li
440.25 228.75 li
440.25 229.5 li
447.75 229.5 li
447.75 230 li
451.75 230 li
451.75 230.5 li
455.5 230.5 li
455.5 231.5 li
459.25 231.5 li
459.25 232.75 li
463 232.75 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
538.5 232.75 li
1 0.745098 0 rgb
ef
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 231.25 li
315.5 231.25 li
315.5 222 li
319.25 222 li
319.25 220.75 li
323.25 220.75 li
323.25 217.25 li
327 217.25 li
327 218.25 li
330.75 218.25 li
330.75 218 li
334.5 218 li
334.5 216.5 li
338.25 216.5 li
338.25 217.25 li
342 217.25 li
342 217.75 li
345.75 217.75 li
345.75 216.25 li
349.5 216.25 li
349.5 217.5 li
357.25 217.5 li
357.25 218 li
361 218 li
361 220.75 li
364.75 220.75 li
364.75 222 li
368.5 222 li
368.5 224.5 li
372.25 224.5 li
372.25 227 li
376 227 li
376 229.75 li
379.75 229.75 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 231.75 li
391.25 231.75 li
391.25 229.75 li
395 229.75 li
395 227 li
398.75 227 li
398.75 227.25 li
402.5 227.25 li
402.5 227.75 li
413.75 227.75 li
413.75 228.75 li
417.75 228.75 li
417.75 229 li
421.5 229 li
421.5 228.5 li
425.25 228.5 li
425.25 228 li
429 228 li
429 228.25 li
432.75 228.25 li
432.75 228.75 li
440.25 228.75 li
440.25 229.5 li
447.75 229.5 li
447.75 230 li
451.75 230 li
451.75 230.5 li
455.5 230.5 li
455.5 231.5 li
459.25 231.5 li
459.25 232.75 li
463 232.75 li
463 232 li
466.75 232 li
466.75 231.25 li
474.25 231.25 li
474.25 231 li
482 231 li
482 231.25 li
489.5 231.25 li
489.5 231.5 li
493.25 231.5 li
493.25 231.25 li
500.75 231.25 li
500.75 231.5 li
504.5 231.5 li
504.5 231.25 li
508.25 231.25 li
508.25 231.5 li
512.25 231.5 li
512.25 231.75 li
519.75 231.75 li
519.75 231.5 li
527.25 231.5 li
527.25 231.75 li
531 231.75 li
531 232.25 li
534.75 232.25 li
534.75 232.75 li
538.5 232.75 li
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 231.25 li
315.5 231.25 li
315.5 222 li
319.25 222 li
319.25 220.75 li
323.25 220.75 li
323.25 217.25 li
327 217.25 li
327 218.25 li
330.75 218.25 li
330.75 218 li
334.5 218 li
334.5 216.5 li
338.25 216.5 li
338.25 217.25 li
342 217.25 li
342 217.75 li
345.75 217.75 li
345.75 216.25 li
349.5 216.25 li
349.5 217.5 li
357.25 217.5 li
357.25 218 li
361 218 li
361 220.75 li
364.75 220.75 li
364.75 222 li
368.5 222 li
368.5 224.5 li
372.25 224.5 li
372.25 227 li
376 227 li
376 229.75 li
379.75 229.75 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 231.75 li
391.25 231.75 li
391.25 229.75 li
395 229.75 li
395 227 li
398.75 227 li
398.75 227.25 li
402.5 227.25 li
402.5 227.75 li
413.75 227.75 li
413.75 228.75 li
417.75 228.75 li
417.75 229 li
421.5 229 li
421.5 228.5 li
425.25 228.5 li
425.25 228 li
429 228 li
429 228.25 li
432.75 228.25 li
432.75 228.75 li
440.25 228.75 li
440.25 229.5 li
447.75 229.5 li
447.75 230 li
451.75 230 li
451.75 230.5 li
455.5 230.5 li
455.5 231.5 li
459.25 231.5 li
459.25 232.75 li
463 232.75 li
463 232 li
466.75 232 li
466.75 231.25 li
474.25 231.25 li
474.25 231 li
482 231 li
482 231.25 li
489.5 231.25 li
489.5 231.5 li
493.25 231.5 li
493.25 231.25 li
500.75 231.25 li
500.75 231.5 li
504.5 231.5 li
504.5 231.25 li
508.25 231.25 li
508.25 231.5 li
512.25 231.5 li
512.25 231.75 li
519.75 231.75 li
519.75 231.5 li
527.25 231.5 li
527.25 231.75 li
531 231.75 li
531 232.25 li
534.75 232.25 li
534.75 232.75 li
538.5 232.75 li
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 231.25 li
315.5 231.25 li
315.5 222 li
319.25 222 li
319.25 220.75 li
323.25 220.75 li
323.25 217.25 li
327 217.25 li
327 218.25 li
330.75 218.25 li
330.75 218 li
334.5 218 li
334.5 216.5 li
338.25 216.5 li
338.25 217.25 li
342 217.25 li
342 217.75 li
345.75 217.75 li
345.75 216.25 li
349.5 216.25 li
349.5 217.5 li
357.25 217.5 li
357.25 218 li
361 218 li
361 220.75 li
364.75 220.75 li
364.75 222 li
368.5 222 li
368.5 224.5 li
372.25 224.5 li
372.25 227 li
376 227 li
376 229.75 li
379.75 229.75 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 231.75 li
391.25 231.75 li
391.25 229.75 li
395 229.75 li
395 227 li
398.75 227 li
398.75 227.25 li
402.5 227.25 li
402.5 227.75 li
413.75 227.75 li
413.75 228.75 li
417.75 228.75 li
417.75 229 li
421.5 229 li
421.5 228.5 li
425.25 228.5 li
425.25 228 li
429 228 li
429 228.25 li
432.75 228.25 li
432.75 228.75 li
440.25 228.75 li
440.25 229.5 li
447.75 229.5 li
447.75 230 li
451.75 230 li
451.75 230.5 li
455.5 230.5 li
455.5 231.5 li
459.25 231.5 li
459.25 232.75 li
463 232.75 li
463 230.5 li
466.75 230.5 li
466.75 226.75 li
470.5 226.75 li
470.5 225.75 li
474.25 225.75 li
474.25 225 li
478 225 li
478 226.25 li
482 226.25 li
482 226 li
489.5 226 li
489.5 227.25 li
493.25 227.25 li
493.25 226.75 li
497 226.75 li
497 226.25 li
500.75 226.25 li
500.75 226.75 li
504.5 226.75 li
504.5 227 li
508.25 227 li
508.25 228.25 li
516 228.25 li
516 227.75 li
519.75 227.75 li
519.75 228.5 li
523.5 228.5 li
523.5 229.5 li
527.25 229.5 li
527.25 229.25 li
531 229.25 li
531 230.75 li
534.75 230.75 li
534.75 232.5 li
538.5 232.5 li
0 0 0 rgb
@
85 232.75 mo
85 206.5 li
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 231.25 li
315.5 231.25 li
315.5 222 li
319.25 222 li
319.25 220.75 li
323.25 220.75 li
323.25 217.25 li
327 217.25 li
327 218.25 li
330.75 218.25 li
330.75 218 li
334.5 218 li
334.5 216.5 li
338.25 216.5 li
338.25 217.25 li
342 217.25 li
342 217.75 li
345.75 217.75 li
345.75 216.25 li
349.5 216.25 li
349.5 217.5 li
357.25 217.5 li
357.25 218 li
361 218 li
361 220.75 li
364.75 220.75 li
364.75 222 li
368.5 222 li
368.5 224.5 li
372.25 224.5 li
372.25 227 li
376 227 li
376 229.75 li
379.75 229.75 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 231.75 li
391.25 231.75 li
391.25 229.75 li
395 229.75 li
395 227 li
398.75 227 li
398.75 227.25 li
402.5 227.25 li
402.5 227.75 li
413.75 227.75 li
413.75 228.75 li
417.75 228.75 li
417.75 229 li
421.5 229 li
421.5 228.5 li
425.25 228.5 li
425.25 228 li
429 228 li
429 228.25 li
432.75 228.25 li
432.75 228.75 li
440.25 228.75 li
440.25 229.5 li
447.75 229.5 li
447.75 230 li
451.75 230 li
451.75 230.5 li
455.5 230.5 li
455.5 231.5 li
459.25 231.5 li
459.25 232.75 li
463 232.75 li
463 232 li
466.75 232 li
466.75 231.25 li
474.25 231.25 li
474.25 231 li
482 231 li
482 231.25 li
489.5 231.25 li
489.5 231.5 li
493.25 231.5 li
493.25 231.25 li
500.75 231.25 li
500.75 231.5 li
504.5 231.5 li
504.5 231.25 li
508.25 231.25 li
508.25 231.5 li
512.25 231.5 li
512.25 231.75 li
519.75 231.75 li
519.75 231.5 li
527.25 231.5 li
527.25 231.75 li
531 231.75 li
531 232.25 li
534.75 232.25 li
534.75 232.75 li
538.5 232.75 li
0.4 0 0.4 rgb
ef
85 224.75 mo
88.75 224.75 li
88.75 222.5 li
92.5 222.5 li
92.5 221.5 li
96.5 221.5 li
96.5 221.75 li
100.25 221.75 li
100.25 220.25 li
104 220.25 li
104 220 li
107.75 220 li
107.75 218.75 li
111.5 218.75 li
111.5 219.75 li
115.25 219.75 li
115.25 218.25 li
119 218.25 li
119 219 li
122.75 219 li
122.75 219.75 li
126.5 219.75 li
126.5 219.5 li
130.5 219.5 li
130.5 220.25 li
134.25 220.25 li
134.25 221 li
138 221 li
138 222.75 li
141.75 222.75 li
141.75 224.25 li
145.5 224.25 li
145.5 225.5 li
149.25 225.5 li
149.25 227.25 li
153 227.25 li
153 230.5 li
156.75 230.5 li
156.75 232.5 li
160.75 232.5 li
160.75 230.75 li
164.5 230.75 li
164.5 229.25 li
168.25 229.25 li
168.25 228.5 li
172 228.5 li
172 228.75 li
175.75 228.75 li
175.75 228.25 li
179.5 228.25 li
179.5 229.25 li
183.25 229.25 li
183.25 229 li
187 229 li
187 229.25 li
190.75 229.25 li
190.75 229 li
194.75 229 li
194.75 230 li
198.5 230 li
198.5 229.5 li
206 229.5 li
206 230 li
209.75 230 li
209.75 230.25 li
213.5 230.25 li
213.5 230 li
221 230 li
221 230.25 li
225 230.25 li
225 230.75 li
228.75 230.75 li
228.75 230.5 li
232.5 230.5 li
232.5 232.25 li
236.25 232.25 li
236.25 232 li
240 232 li
240 231.5 li
243.75 231.5 li
243.75 231.25 li
247.5 231.25 li
247.5 231.75 li
259 231.75 li
259 232 li
262.75 232 li
262.75 231.75 li
266.5 231.75 li
266.5 231.5 li
270.25 231.5 li
270.25 231.75 li
274 231.75 li
274 231.5 li
277.75 231.5 li
277.75 231.75 li
293 231.75 li
293 231.5 li
304.25 231.5 li
304.25 231.75 li
308 231.75 li
308 232.5 li
311.75 232.5 li
311.75 232.25 li
315.5 232.25 li
315.5 229.5 li
319.25 229.5 li
319.25 228.25 li
323.25 228.25 li
323.25 226 li
327 226 li
327 225.5 li
330.75 225.5 li
330.75 225 li
334.5 225 li
334.5 224 li
338.25 224 li
338.25 223.75 li
342 223.75 li
342 222.75 li
345.75 222.75 li
345.75 221.5 li
349.5 221.5 li
349.5 222.25 li
353.5 222.25 li
353.5 221.5 li
357.25 221.5 li
357.25 222.5 li
361 222.5 li
361 223.5 li
364.75 223.5 li
364.75 224.75 li
368.5 224.75 li
368.5 225.75 li
372.25 225.75 li
372.25 227.75 li
376 227.75 li
376 230.25 li
379.75 230.25 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 232 li
391.25 232 li
391.25 231.25 li
395 231.25 li
395 230.25 li
398.75 230.25 li
398.75 230 li
402.5 230 li
402.5 230.25 li
406.25 230.25 li
406.25 229.75 li
410 229.75 li
410 230 li
413.75 230 li
413.75 230.75 li
417.75 230.75 li
417.75 230.25 li
421.5 230.25 li
421.5 230 li
425.25 230 li
425.25 229.5 li
432.75 229.5 li
432.75 230 li
440.25 230 li
440.25 230.25 li
444 230.25 li
444 230 li
447.75 230 li
447.75 230.75 li
455.5 230.75 li
455.5 231.75 li
459.25 231.75 li
459.25 232.75 li
463 232.75 li
463 232.25 li
466.75 232.25 li
466.75 232 li
470.5 232 li
470.5 231.75 li
474.25 231.75 li
474.25 231.5 li
482 231.5 li
482 232 li
485.75 232 li
485.75 231.5 li
489.5 231.5 li
489.5 231.75 li
493.25 231.75 li
493.25 231.5 li
500.75 231.5 li
500.75 231.75 li
512.25 231.75 li
512.25 232 li
519.75 232 li
519.75 231.75 li
531 231.75 li
531 232.25 li
534.75 232.25 li
534.75 232.75 li
538.5 232.75 li
85 224.75 mo
88.75 224.75 li
88.75 222.5 li
92.5 222.5 li
92.5 221.5 li
96.5 221.5 li
96.5 221.75 li
100.25 221.75 li
100.25 220.25 li
104 220.25 li
104 220 li
107.75 220 li
107.75 218.75 li
111.5 218.75 li
111.5 219.75 li
115.25 219.75 li
115.25 218.25 li
119 218.25 li
119 219 li
122.75 219 li
122.75 219.75 li
126.5 219.75 li
126.5 219.5 li
130.5 219.5 li
130.5 220.25 li
134.25 220.25 li
134.25 221 li
138 221 li
138 222.75 li
141.75 222.75 li
141.75 224.25 li
145.5 224.25 li
145.5 225.5 li
149.25 225.5 li
149.25 227.25 li
153 227.25 li
153 230.5 li
156.75 230.5 li
156.75 232.5 li
160.75 232.5 li
160.75 230.75 li
164.5 230.75 li
164.5 229.25 li
168.25 229.25 li
168.25 228.5 li
172 228.5 li
172 228.75 li
175.75 228.75 li
175.75 228.25 li
179.5 228.25 li
179.5 229.25 li
183.25 229.25 li
183.25 229 li
187 229 li
187 229.25 li
190.75 229.25 li
190.75 229 li
194.75 229 li
194.75 230 li
198.5 230 li
198.5 229.5 li
206 229.5 li
206 230 li
209.75 230 li
209.75 230.25 li
213.5 230.25 li
213.5 230 li
221 230 li
221 230.25 li
225 230.25 li
225 230.75 li
228.75 230.75 li
228.75 230.5 li
232.5 230.5 li
232.5 232.25 li
236.25 232.25 li
236.25 232 li
240 232 li
240 231.5 li
243.75 231.5 li
243.75 231.25 li
247.5 231.25 li
247.5 231.75 li
259 231.75 li
259 232 li
262.75 232 li
262.75 231.75 li
266.5 231.75 li
266.5 231.5 li
270.25 231.5 li
270.25 231.75 li
274 231.75 li
274 231.5 li
277.75 231.5 li
277.75 231.75 li
293 231.75 li
293 231.5 li
304.25 231.5 li
304.25 231.75 li
308 231.75 li
308 232.5 li
311.75 232.5 li
311.75 232.25 li
315.5 232.25 li
315.5 229.5 li
319.25 229.5 li
319.25 228.25 li
323.25 228.25 li
323.25 226 li
327 226 li
327 225.5 li
330.75 225.5 li
330.75 225 li
334.5 225 li
334.5 224 li
338.25 224 li
338.25 223.75 li
342 223.75 li
342 222.75 li
345.75 222.75 li
345.75 221.5 li
349.5 221.5 li
349.5 222.25 li
353.5 222.25 li
353.5 221.5 li
357.25 221.5 li
357.25 222.5 li
361 222.5 li
361 223.5 li
364.75 223.5 li
364.75 224.75 li
368.5 224.75 li
368.5 225.75 li
372.25 225.75 li
372.25 227.75 li
376 227.75 li
376 230.25 li
379.75 230.25 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 232 li
391.25 232 li
391.25 231.25 li
395 231.25 li
395 230.25 li
398.75 230.25 li
398.75 230 li
402.5 230 li
402.5 230.25 li
406.25 230.25 li
406.25 229.75 li
410 229.75 li
410 230 li
413.75 230 li
413.75 230.75 li
417.75 230.75 li
417.75 230.25 li
421.5 230.25 li
421.5 230 li
425.25 230 li
425.25 229.5 li
432.75 229.5 li
432.75 230 li
440.25 230 li
440.25 230.25 li
444 230.25 li
444 230 li
447.75 230 li
447.75 230.75 li
455.5 230.75 li
455.5 231.75 li
459.25 231.75 li
459.25 232.75 li
463 232.75 li
463 232.25 li
466.75 232.25 li
466.75 232 li
470.5 232 li
470.5 231.75 li
474.25 231.75 li
474.25 231.5 li
482 231.5 li
482 232 li
485.75 232 li
485.75 231.5 li
489.5 231.5 li
489.5 231.75 li
493.25 231.75 li
493.25 231.5 li
500.75 231.5 li
500.75 231.75 li
512.25 231.75 li
512.25 232 li
519.75 232 li
519.75 231.75 li
531 231.75 li
531 232.25 li
534.75 232.25 li
534.75 232.75 li
538.5 232.75 li
85 206.5 mo
88.75 206.5 li
88.75 197.75 li
92.5 197.75 li
92.5 193 li
96.5 193 li
96.5 197.25 li
100.25 197.25 li
100.25 193.5 li
104 193.5 li
104 195.5 li
107.75 195.5 li
107.75 193.75 li
111.5 193.75 li
111.5 196 li
115.25 196 li
115.25 195.25 li
119 195.25 li
119 197.25 li
122.75 197.25 li
122.75 199 li
126.5 199 li
126.5 201.5 li
130.5 201.5 li
130.5 202.75 li
134.25 202.75 li
134.25 206.25 li
138 206.25 li
138 212 li
141.75 212 li
141.75 216 li
145.5 216 li
145.5 221.25 li
149.25 221.25 li
149.25 225 li
153 225 li
153 229.75 li
156.75 229.75 li
156.75 232.25 li
160.75 232.25 li
160.75 228 li
164.5 228 li
164.5 222.75 li
168.25 222.75 li
168.25 221 li
172 221 li
172 220.25 li
179.5 220.25 li
179.5 222.5 li
183.25 222.5 li
183.25 222.25 li
187 222.25 li
187 222.5 li
190.75 222.5 li
190.75 222 li
194.75 222 li
194.75 224.5 li
198.5 224.5 li
198.5 223.75 li
202.25 223.75 li
202.25 224.5 li
206 224.5 li
206 226.25 li
209.75 226.25 li
209.75 227 li
213.5 227 li
213.5 226.75 li
221 226.75 li
221 227.75 li
225 227.75 li
225 228.5 li
228.75 228.5 li
228.75 229.5 li
232.5 229.5 li
232.5 231.75 li
236.25 231.75 li
236.25 231 li
240 231 li
240 230 li
247.5 230 li
247.5 231 li
251.25 231 li
251.25 229.75 li
255 229.75 li
255 230.75 li
266.5 230.75 li
266.5 230.5 li
270.25 230.5 li
270.25 230.25 li
274 230.25 li
274 230.75 li
277.75 230.75 li
277.75 230.5 li
293 230.5 li
293 230.25 li
300.5 230.25 li
300.5 230.75 li
304.25 230.75 li
304.25 231.25 li
308 231.25 li
308 232.25 li
311.75 232.25 li
311.75 231.25 li
315.5 231.25 li
315.5 222 li
319.25 222 li
319.25 220.75 li
323.25 220.75 li
323.25 217.25 li
327 217.25 li
327 218.25 li
330.75 218.25 li
330.75 218 li
334.5 218 li
334.5 216.5 li
338.25 216.5 li
338.25 217.25 li
342 217.25 li
342 217.75 li
345.75 217.75 li
345.75 216.25 li
349.5 216.25 li
349.5 217.5 li
357.25 217.5 li
357.25 218 li
361 218 li
361 220.75 li
364.75 220.75 li
364.75 222 li
368.5 222 li
368.5 224.5 li
372.25 224.5 li
372.25 227 li
376 227 li
376 229.75 li
379.75 229.75 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 231.75 li
391.25 231.75 li
391.25 229.75 li
395 229.75 li
395 227 li
398.75 227 li
398.75 227.25 li
402.5 227.25 li
402.5 227.75 li
413.75 227.75 li
413.75 228.75 li
417.75 228.75 li
417.75 229 li
421.5 229 li
421.5 228.5 li
425.25 228.5 li
425.25 228 li
429 228 li
429 228.25 li
432.75 228.25 li
432.75 228.75 li
440.25 228.75 li
440.25 229.5 li
447.75 229.5 li
447.75 230 li
451.75 230 li
451.75 230.5 li
455.5 230.5 li
455.5 231.5 li
459.25 231.5 li
459.25 232.75 li
463 232.75 li
463 232 li
466.75 232 li
466.75 231.25 li
474.25 231.25 li
474.25 231 li
482 231 li
482 231.25 li
489.5 231.25 li
489.5 231.5 li
493.25 231.5 li
493.25 231.25 li
500.75 231.25 li
500.75 231.5 li
504.5 231.5 li
504.5 231.25 li
508.25 231.25 li
508.25 231.5 li
512.25 231.5 li
512.25 231.75 li
519.75 231.75 li
519.75 231.5 li
527.25 231.5 li
527.25 231.75 li
531 231.75 li
531 232.25 li
534.75 232.25 li
534.75 232.75 li
538.5 232.75 li
0 0 0 rgb
@
85 232.75 mo
85 224.75 li
88.75 224.75 li
88.75 222.5 li
92.5 222.5 li
92.5 221.5 li
96.5 221.5 li
96.5 221.75 li
100.25 221.75 li
100.25 220.25 li
104 220.25 li
104 220 li
107.75 220 li
107.75 218.75 li
111.5 218.75 li
111.5 219.75 li
115.25 219.75 li
115.25 218.25 li
119 218.25 li
119 219 li
122.75 219 li
122.75 219.75 li
126.5 219.75 li
126.5 219.5 li
130.5 219.5 li
130.5 220.25 li
134.25 220.25 li
134.25 221 li
138 221 li
138 222.75 li
141.75 222.75 li
141.75 224.25 li
145.5 224.25 li
145.5 225.5 li
149.25 225.5 li
149.25 227.25 li
153 227.25 li
153 230.5 li
156.75 230.5 li
156.75 232.5 li
160.75 232.5 li
160.75 230.75 li
164.5 230.75 li
164.5 229.25 li
168.25 229.25 li
168.25 228.5 li
172 228.5 li
172 228.75 li
175.75 228.75 li
175.75 228.25 li
179.5 228.25 li
179.5 229.25 li
183.25 229.25 li
183.25 229 li
187 229 li
187 229.25 li
190.75 229.25 li
190.75 229 li
194.75 229 li
194.75 230 li
198.5 230 li
198.5 229.5 li
206 229.5 li
206 230 li
209.75 230 li
209.75 230.25 li
213.5 230.25 li
213.5 230 li
221 230 li
221 230.25 li
225 230.25 li
225 230.75 li
228.75 230.75 li
228.75 230.5 li
232.5 230.5 li
232.5 232.25 li
236.25 232.25 li
236.25 232 li
240 232 li
240 231.5 li
243.75 231.5 li
243.75 231.25 li
247.5 231.25 li
247.5 231.75 li
259 231.75 li
259 232 li
262.75 232 li
262.75 231.75 li
266.5 231.75 li
266.5 231.5 li
270.25 231.5 li
270.25 231.75 li
274 231.75 li
274 231.5 li
277.75 231.5 li
277.75 231.75 li
293 231.75 li
293 231.5 li
304.25 231.5 li
304.25 231.75 li
308 231.75 li
308 232.5 li
311.75 232.5 li
311.75 232.25 li
315.5 232.25 li
315.5 229.5 li
319.25 229.5 li
319.25 228.25 li
323.25 228.25 li
323.25 226 li
327 226 li
327 225.5 li
330.75 225.5 li
330.75 225 li
334.5 225 li
334.5 224 li
338.25 224 li
338.25 223.75 li
342 223.75 li
342 222.75 li
345.75 222.75 li
345.75 221.5 li
349.5 221.5 li
349.5 222.25 li
353.5 222.25 li
353.5 221.5 li
357.25 221.5 li
357.25 222.5 li
361 222.5 li
361 223.5 li
364.75 223.5 li
364.75 224.75 li
368.5 224.75 li
368.5 225.75 li
372.25 225.75 li
372.25 227.75 li
376 227.75 li
376 230.25 li
379.75 230.25 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 232 li
391.25 232 li
391.25 231.25 li
395 231.25 li
395 230.25 li
398.75 230.25 li
398.75 230 li
402.5 230 li
402.5 230.25 li
406.25 230.25 li
406.25 229.75 li
410 229.75 li
410 230 li
413.75 230 li
413.75 230.75 li
417.75 230.75 li
417.75 230.25 li
421.5 230.25 li
421.5 230 li
425.25 230 li
425.25 229.5 li
432.75 229.5 li
432.75 230 li
440.25 230 li
440.25 230.25 li
444 230.25 li
444 230 li
447.75 230 li
447.75 230.75 li
455.5 230.75 li
455.5 231.75 li
459.25 231.75 li
459.25 232.75 li
463 232.75 li
463 232.25 li
466.75 232.25 li
466.75 232 li
470.5 232 li
470.5 231.75 li
474.25 231.75 li
474.25 231.5 li
482 231.5 li
482 232 li
485.75 232 li
485.75 231.5 li
489.5 231.5 li
489.5 231.75 li
493.25 231.75 li
493.25 231.5 li
500.75 231.5 li
500.75 231.75 li
512.25 231.75 li
512.25 232 li
519.75 232 li
519.75 231.75 li
531 231.75 li
531 232.25 li
534.75 232.25 li
534.75 232.75 li
538.5 232.75 li
0 0.454902 1 rgb
ef
88 132 mo
88.75 132 li
85 132 mo
86 132 li
87 131 mo
87 129 li
87 135 mo
87 133 li
524.75 24.75 mo
538.5 24.75 li
524.75 24.75 mo
538.5 24.75 li
531.5 29 mo
538.5 29 li
531.5 33.25 mo
538.5 33.25 li
531.5 37.75 mo
538.5 37.75 li
524.75 42 mo
538.5 42 li
531.5 46.25 mo
538.5 46.25 li
531.5 50.75 mo
538.5 50.75 li
531.5 55 mo
538.5 55 li
524.75 59.25 mo
538.5 59.25 li
531.5 63.75 mo
538.5 63.75 li
531.5 68 mo
538.5 68 li
531.5 72.5 mo
538.5 72.5 li
524.75 76.75 mo
538.5 76.75 li
531.5 81 mo
538.5 81 li
531.5 85.5 mo
538.5 85.5 li
531.5 89.75 mo
538.5 89.75 li
524.75 94 mo
538.5 94 li
531.5 98.5 mo
538.5 98.5 li
531.5 102.75 mo
538.5 102.75 li
531.5 107 mo
538.5 107 li
524.75 111.5 mo
538.5 111.5 li
531.5 115.75 mo
538.5 115.75 li
531.5 120 mo
538.5 120 li
531.5 124.5 mo
538.5 124.5 li
524.75 128.75 mo
538.5 128.75 li
531.5 133 mo
538.5 133 li
531.5 137.5 mo
538.5 137.5 li
531.5 141.75 mo
538.5 141.75 li
524.75 146 mo
538.5 146 li
531.5 150.5 mo
538.5 150.5 li
531.5 154.75 mo
538.5 154.75 li
531.5 159 mo
538.5 159 li
524.75 163.5 mo
538.5 163.5 li
531.5 167.75 mo
538.5 167.75 li
531.5 172 mo
538.5 172 li
531.5 176.5 mo
538.5 176.5 li
524.75 180.75 mo
538.5 180.75 li
531.5 185 mo
538.5 185 li
531.5 189.5 mo
538.5 189.5 li
531.5 193.75 mo
538.5 193.75 li
524.75 198 mo
538.5 198 li
531.5 202.5 mo
538.5 202.5 li
531.5 206.75 mo
538.5 206.75 li
531.5 211 mo
538.5 211 li
524.75 215.5 mo
538.5 215.5 li
531.5 219.75 mo
538.5 219.75 li
531.5 224 mo
538.5 224 li
531.5 228.5 mo
538.5 228.5 li
524.75 232.75 mo
538.5 232.75 li
538.5 232.75 mo
538.5 22.75 li
99 24.75 mo
85 24.75 li
99 24.75 mo
85 24.75 li
92 29 mo
85 29 li
92 33.25 mo
85 33.25 li
92 37.75 mo
85 37.75 li
99 42 mo
85 42 li
92 46.25 mo
85 46.25 li
92 50.75 mo
85 50.75 li
92 55 mo
85 55 li
99 59.25 mo
85 59.25 li
92 63.75 mo
85 63.75 li
92 68 mo
85 68 li
92 72.5 mo
85 72.5 li
99 76.75 mo
85 76.75 li
92 81 mo
85 81 li
92 85.5 mo
85 85.5 li
92 89.75 mo
85 89.75 li
99 94 mo
85 94 li
92 98.5 mo
85 98.5 li
92 102.75 mo
85 102.75 li
92 107 mo
85 107 li
99 111.5 mo
85 111.5 li
92 115.75 mo
85 115.75 li
92 120 mo
85 120 li
92 124.5 mo
85 124.5 li
99 128.75 mo
85 128.75 li
92 133 mo
85 133 li
92 137.5 mo
85 137.5 li
92 141.75 mo
85 141.75 li
99 146 mo
85 146 li
92 150.5 mo
85 150.5 li
92 154.75 mo
85 154.75 li
92 159 mo
85 159 li
99 163.5 mo
85 163.5 li
92 167.75 mo
85 167.75 li
92 172 mo
85 172 li
92 176.5 mo
85 176.5 li
99 180.75 mo
85 180.75 li
92 185 mo
85 185 li
92 189.5 mo
85 189.5 li
92 193.75 mo
85 193.75 li
99 198 mo
85 198 li
92 202.5 mo
85 202.5 li
92 206.75 mo
85 206.75 li
92 211 mo
85 211 li
99 215.5 mo
85 215.5 li
92 219.75 mo
85 219.75 li
92 224 mo
85 224 li
92 228.5 mo
85 228.5 li
99 232.75 mo
85 232.75 li
85 232.75 mo
85 22.75 li
521.5 25.75 mo
521.5 22.75 li
502.75 25.75 mo
502.75 22.75 li
483.75 25.75 mo
483.75 22.75 li
465 29 mo
465 22.75 li
87 29 mo
87 22.75 li
465 29 mo
465 22.75 li
446 25.75 mo
446 22.75 li
427 25.75 mo
427 22.75 li
408.25 25.75 mo
408.25 22.75 li
389.25 29 mo
389.25 22.75 li
370.5 25.75 mo
370.5 22.75 li
351.5 25.75 mo
351.5 22.75 li
332.5 25.75 mo
332.5 22.75 li
313.75 29 mo
313.75 22.75 li
294.75 25.75 mo
294.75 22.75 li
276 25.75 mo
276 22.75 li
257 25.75 mo
257 22.75 li
238 29 mo
238 22.75 li
219.25 25.75 mo
219.25 22.75 li
200.25 25.75 mo
200.25 22.75 li
181.5 25.75 mo
181.5 22.75 li
162.5 29 mo
162.5 22.75 li
143.5 25.75 mo
143.5 22.75 li
124.75 25.75 mo
124.75 22.75 li
105.75 25.75 mo
105.75 22.75 li
87 29 mo
87 22.75 li
85 22.75 mo
538.5 22.75 li
521.5 229.75 mo
521.5 232.75 li
502.75 229.75 mo
502.75 232.75 li
483.75 229.75 mo
483.75 232.75 li
465 226.75 mo
465 232.75 li
87 226.75 mo
87 232.75 li
465 226.75 mo
465 232.75 li
446 229.75 mo
446 232.75 li
427 229.75 mo
427 232.75 li
408.25 229.75 mo
408.25 232.75 li
389.25 226.75 mo
389.25 232.75 li
370.5 229.75 mo
370.5 232.75 li
351.5 229.75 mo
351.5 232.75 li
332.5 229.75 mo
332.5 232.75 li
313.75 226.75 mo
313.75 232.75 li
294.75 229.75 mo
294.75 232.75 li
276 229.75 mo
276 232.75 li
257 229.75 mo
257 232.75 li
238 226.75 mo
238 232.75 li
219.25 229.75 mo
219.25 232.75 li
200.25 229.75 mo
200.25 232.75 li
181.5 229.75 mo
181.5 232.75 li
162.5 226.75 mo
162.5 232.75 li
143.5 229.75 mo
143.5 232.75 li
124.75 229.75 mo
124.75 232.75 li
105.75 229.75 mo
105.75 232.75 li
87 226.75 mo
87 232.75 li
85 232.75 mo
538.5 232.75 li
85 224.75 mo
88.75 224.75 li
88.75 222.5 li
92.5 222.5 li
92.5 221.5 li
96.5 221.5 li
96.5 221.75 li
100.25 221.75 li
100.25 220.25 li
104 220.25 li
104 220 li
107.75 220 li
107.75 218.75 li
111.5 218.75 li
111.5 219.75 li
115.25 219.75 li
115.25 218.25 li
119 218.25 li
119 219 li
122.75 219 li
122.75 219.75 li
126.5 219.75 li
126.5 219.5 li
130.5 219.5 li
130.5 220.25 li
134.25 220.25 li
134.25 221 li
138 221 li
138 222.75 li
141.75 222.75 li
141.75 224.25 li
145.5 224.25 li
145.5 225.5 li
149.25 225.5 li
149.25 227.25 li
153 227.25 li
153 230.5 li
156.75 230.5 li
156.75 232.5 li
160.75 232.5 li
160.75 230.75 li
164.5 230.75 li
164.5 229.25 li
168.25 229.25 li
168.25 228.5 li
172 228.5 li
172 228.75 li
175.75 228.75 li
175.75 228.25 li
179.5 228.25 li
179.5 229.25 li
183.25 229.25 li
183.25 229 li
187 229 li
187 229.25 li
190.75 229.25 li
190.75 229 li
194.75 229 li
194.75 230 li
198.5 230 li
198.5 229.5 li
206 229.5 li
206 230 li
209.75 230 li
209.75 230.25 li
213.5 230.25 li
213.5 230 li
221 230 li
221 230.25 li
225 230.25 li
225 230.75 li
228.75 230.75 li
228.75 230.5 li
232.5 230.5 li
232.5 232.25 li
236.25 232.25 li
236.25 232 li
240 232 li
240 231.5 li
243.75 231.5 li
243.75 231.25 li
247.5 231.25 li
247.5 231.75 li
259 231.75 li
259 232 li
262.75 232 li
262.75 231.75 li
266.5 231.75 li
266.5 231.5 li
270.25 231.5 li
270.25 231.75 li
274 231.75 li
274 231.5 li
277.75 231.5 li
277.75 231.75 li
293 231.75 li
293 231.5 li
304.25 231.5 li
304.25 231.75 li
308 231.75 li
308 232.5 li
311.75 232.5 li
311.75 232.25 li
315.5 232.25 li
315.5 229.5 li
319.25 229.5 li
319.25 228.25 li
323.25 228.25 li
323.25 226 li
327 226 li
327 225.5 li
330.75 225.5 li
330.75 225 li
334.5 225 li
334.5 224 li
338.25 224 li
338.25 223.75 li
342 223.75 li
342 222.75 li
345.75 222.75 li
345.75 221.5 li
349.5 221.5 li
349.5 222.25 li
353.5 222.25 li
353.5 221.5 li
357.25 221.5 li
357.25 222.5 li
361 222.5 li
361 223.5 li
364.75 223.5 li
364.75 224.75 li
368.5 224.75 li
368.5 225.75 li
372.25 225.75 li
372.25 227.75 li
376 227.75 li
376 230.25 li
379.75 230.25 li
379.75 231.25 li
383.5 231.25 li
383.5 232.75 li
387.5 232.75 li
387.5 232 li
391.25 232 li
391.25 231.25 li
395 231.25 li
395 230.25 li
398.75 230.25 li
398.75 230 li
402.5 230 li
402.5 230.25 li
406.25 230.25 li
406.25 229.75 li
410 229.75 li
410 230 li
413.75 230 li
413.75 230.75 li
417.75 230.75 li
417.75 230.25 li
421.5 230.25 li
421.5 230 li
425.25 230 li
425.25 229.5 li
432.75 229.5 li
432.75 230 li
440.25 230 li
440.25 230.25 li
444 230.25 li
444 230 li
447.75 230 li
447.75 230.75 li
455.5 230.75 li
455.5 231.75 li
459.25 231.75 li
459.25 232.75 li
463 232.75 li
463 232.25 li
466.75 232.25 li
466.75 232 li
470.5 232 li
470.5 231.75 li
474.25 231.75 li
474.25 231.5 li
482 231.5 li
482 232 li
485.75 232 li
485.75 231.5 li
489.5 231.5 li
489.5 231.75 li
493.25 231.75 li
493.25 231.5 li
500.75 231.5 li
500.75 231.75 li
512.25 231.75 li
512.25 232 li
519.75 232 li
519.75 231.75 li
531 231.75 li
531 232.25 li
534.75 232.25 li
534.75 232.75 li
538.5 232.75 li
0 0 0 rgb
@
88.375 132 mo
88.375 131.242 87.7588 130.625 87 130.625 cv
86.2412 130.625 85.625 131.242 85.625 132 cv
85.625 132.759 86.2412 133.375 87 133.375 cv
87.7588 133.375 88.375 132.759 88.375 132 cv
ef
91.75 98.75 mo
92.5 98.75 li
88.75 98.75 mo
89.75 98.75 li
90.75 97.75 mo
90.75 95.25 li
90.75 102 mo
90.75 99.5 li
@
92.0952 98.7598 mo
92.0952 98.001 91.479 97.3848 90.7202 97.3848 cv
89.9609 97.3848 89.3452 98.001 89.3452 98.7598 cv
89.3452 99.52 89.9609 100.135 90.7202 100.135 cv
91.479 100.135 92.0952 99.52 92.0952 98.7598 cv
ef
95.5 82.5 mo
96.5 82.5 li
92.5 82.5 mo
93.5 82.5 li
94.5 81.5 mo
94.5 79 li
94.5 86.25 mo
94.5 83.5 li
@
95.9351 82.4399 mo
95.9351 81.6821 95.3188 81.0649 94.5601 81.0649 cv
93.8008 81.0649 93.1851 81.6821 93.1851 82.4399 cv
93.1851 83.2002 93.8008 83.8149 94.5601 83.8149 cv
95.3188 83.8149 95.9351 83.2002 95.9351 82.4399 cv
ef
99.25 79.25 mo
100.25 79.25 li
96.5 79.25 mo
97.25 79.25 li
98.25 78.25 mo
98.25 75.75 li
98.25 83 mo
98.25 80.25 li
@
99.6548 79.2012 mo
99.6548 78.4409 99.0391 77.8262 98.2798 77.8262 cv
97.521 77.8262 96.9048 78.4409 96.9048 79.2012 cv
96.9048 79.959 97.521 80.5762 98.2798 80.5762 cv
99.0391 80.5762 99.6548 79.959 99.6548 79.2012 cv
ef
103 68 mo
104 68 li
100.25 68 mo
101 68 li
102 67 mo
102 64.25 li
102 71.75 mo
102 69 li
@
103.375 68.04 mo
103.375 67.2822 102.759 66.665 102 66.665 cv
101.241 66.665 100.625 67.2822 100.625 68.04 cv
100.625 68.7988 101.241 69.415 102 69.415 cv
102.759 69.415 103.375 68.7988 103.375 68.04 cv
ef
106.75 69 mo
107.75 69 li
104 69 mo
105 69 li
105.75 68.25 mo
105.75 65.25 li
105.75 72.75 mo
105.75 70 li
@
107.095 69 mo
107.095 68.2422 106.479 67.625 105.72 67.625 cv
104.961 67.625 104.345 68.2422 104.345 69 cv
104.345 69.7588 104.961 70.375 105.72 70.375 cv
106.479 70.375 107.095 69.7588 107.095 69 cv
ef
110.5 71.5 mo
111.5 71.5 li
107.75 71.5 mo
108.75 71.5 li
109.5 70.5 mo
109.5 67.75 li
109.5 75.25 mo
109.5 72.25 li
@
110.815 71.521 mo
110.815 70.7607 110.199 70.146 109.44 70.146 cv
108.681 70.146 108.065 70.7607 108.065 71.521 cv
108.065 72.2788 108.681 72.896 109.44 72.896 cv
110.199 72.896 110.815 72.2788 110.815 71.521 cv
ef
114.25 67.25 mo
115.25 67.25 li
111.5 67.25 mo
112.5 67.25 li
113.5 66.25 mo
113.5 63.5 li
113.5 71 mo
113.5 68.25 li
@
114.895 67.2012 mo
114.895 66.4409 114.279 65.8262 113.52 65.8262 cv
112.761 65.8262 112.145 66.4409 112.145 67.2012 cv
112.145 67.96 112.761 68.5762 113.52 68.5762 cv
114.279 68.5762 114.895 67.96 114.895 67.2012 cv
ef
118 68 mo
119 68 li
115.25 68 mo
116.25 68 li
117.25 67 mo
117.25 64.25 li
117.25 71.75 mo
117.25 69 li
@
118.615 68.04 mo
118.615 67.2822 117.999 66.665 117.24 66.665 cv
116.481 66.665 115.865 67.2822 115.865 68.04 cv
115.865 68.7988 116.481 69.415 117.24 69.415 cv
117.999 69.415 118.615 68.7988 118.615 68.04 cv
ef
122 70.5 mo
122.75 70.5 li
119 70.5 mo
120 70.5 li
121 69.5 mo
121 66.75 li
121 74.25 mo
121 71.5 li
@
122.335 70.4399 mo
122.335 69.6821 121.719 69.0649 120.96 69.0649 cv
120.201 69.0649 119.585 69.6821 119.585 70.4399 cv
119.585 71.2002 120.201 71.8149 120.96 71.8149 cv
121.719 71.8149 122.335 71.2002 122.335 70.4399 cv
ef
125.75 79 mo
126.5 79 li
122.75 79 mo
123.75 79 li
124.75 78 mo
124.75 75.25 li
124.75 82.5 mo
124.75 80 li
@
126.175 78.96 mo
126.175 78.2021 125.559 77.5859 124.8 77.5859 cv
124.041 77.5859 123.425 78.2021 123.425 78.96 cv
123.425 79.7188 124.041 80.335 124.8 80.335 cv
125.559 80.335 126.175 79.7188 126.175 78.96 cv
ef
129.5 76.75 mo
130.5 76.75 li
126.5 76.75 mo
127.5 76.75 li
128.5 75.75 mo
128.5 73 li
128.5 80.5 mo
128.5 77.75 li
@
129.895 76.7998 mo
129.895 76.042 129.279 75.4248 128.52 75.4248 cv
127.761 75.4248 127.145 76.042 127.145 76.7998 cv
127.145 77.5601 127.761 78.1748 128.52 78.1748 cv
129.279 78.1748 129.895 77.5601 129.895 76.7998 cv
ef
133.25 90.5 mo
134.25 90.5 li
130.5 90.5 mo
131.25 90.5 li
132.25 89.75 mo
132.25 87 li
132.25 94 mo
132.25 91.5 li
@
133.615 90.48 mo
133.615 89.7222 132.999 89.105 132.24 89.105 cv
131.481 89.105 130.865 89.7222 130.865 90.48 cv
130.865 91.2393 131.481 91.855 132.24 91.855 cv
132.999 91.855 133.615 91.2393 133.615 90.48 cv
ef
137 107.5 mo
138 107.5 li
134.25 107.5 mo
135 107.5 li
136 106.5 mo
136 104 li
136 110.75 mo
136 108.25 li
@
137.335 107.521 mo
137.335 106.761 136.719 106.146 135.96 106.146 cv
135.201 106.146 134.585 106.761 134.585 107.521 cv
134.585 108.279 135.201 108.896 135.96 108.896 cv
136.719 108.896 137.335 108.279 137.335 107.521 cv
ef
140.75 120.25 mo
141.75 120.25 li
138 120.25 mo
139 120.25 li
139.75 119.25 mo
139.75 117 li
139.75 123.25 mo
139.75 121 li
@
141.175 120.241 mo
141.175 119.481 140.559 118.866 139.8 118.866 cv
139.041 118.866 138.425 119.481 138.425 120.241 cv
138.425 121 139.041 121.616 139.8 121.616 cv
140.559 121.616 141.175 121 141.175 120.241 cv
ef
144.5 134 mo
145.5 134 li
141.75 134 mo
142.75 134 li
143.5 133 mo
143.5 131 li
143.5 136.75 mo
143.5 135 li
@
144.895 134.041 mo
144.895 133.281 144.279 132.666 143.52 132.666 cv
142.761 132.666 142.145 133.281 142.145 134.041 cv
142.145 134.799 142.761 135.416 143.52 135.416 cv
144.279 135.416 144.895 134.799 144.895 134.041 cv
ef
148.25 150.75 mo
149.25 150.75 li
145.5 150.75 mo
146.5 150.75 li
147.5 150 mo
147.5 148.25 li
147.5 153.5 mo
147.5 151.75 li
@
148.855 150.72 mo
148.855 149.961 148.239 149.345 147.48 149.345 cv
146.721 149.345 146.105 149.961 146.105 150.72 cv
146.105 151.48 146.721 152.095 147.48 152.095 cv
148.239 152.095 148.855 151.48 148.855 150.72 cv
ef
152.25 169.25 mo
153 169.25 li
149.25 169.25 mo
150.25 169.25 li
151.25 168.25 mo
151.25 166.75 li
151.25 171.5 mo
151.25 170 li
@
152.575 169.201 mo
152.575 168.441 151.959 167.826 151.2 167.826 cv
150.441 167.826 149.825 168.441 149.825 169.201 cv
149.825 169.959 150.441 170.576 151.2 170.576 cv
151.959 170.576 152.575 169.959 152.575 169.201 cv
ef
156 208.25 mo
156.75 208.25 li
153 208.25 mo
154 208.25 li
155 207.5 mo
155 207 li
155 209.75 mo
155 209.25 li
@
156.415 208.201 mo
156.415 207.442 155.799 206.826 155.04 206.826 cv
154.281 206.826 153.665 207.442 153.665 208.201 cv
153.665 208.959 154.281 209.576 155.04 209.576 cv
155.799 209.576 156.415 208.959 156.415 208.201 cv
ef
159.75 229.25 mo
160.75 229.25 li
156.75 229.25 mo
157.75 229.25 li
@
160.135 229.201 mo
160.135 228.442 159.519 227.826 158.76 227.826 cv
158.001 227.826 157.385 228.442 157.385 229.201 cv
157.385 229.959 158.001 230.576 158.76 230.576 cv
159.519 230.576 160.135 229.959 160.135 229.201 cv
ef
163.5 213.5 mo
164.5 213.5 li
160.75 213.5 mo
161.5 213.5 li
162.5 212.5 mo
162.5 212.25 li
162.5 214.75 mo
162.5 214.5 li
@
163.855 213.481 mo
163.855 212.721 163.239 212.106 162.48 212.106 cv
161.721 212.106 161.105 212.721 161.105 213.481 cv
161.105 214.24 161.721 214.856 162.48 214.856 cv
163.239 214.856 163.855 214.24 163.855 213.481 cv
ef
167.25 195 mo
168.25 195 li
164.5 195 mo
165.25 195 li
166.25 194 mo
166.25 193 li
166.25 196.75 mo
166.25 195.75 li
@
167.575 195 mo
167.575 194.242 166.959 193.625 166.2 193.625 cv
165.441 193.625 164.825 194.242 164.825 195 cv
164.825 195.759 165.441 196.375 166.2 196.375 cv
166.959 196.375 167.575 195.759 167.575 195 cv
ef
171 186 mo
172 186 li
168.25 186 mo
169.25 186 li
170 185 mo
170 184 li
170 188 mo
170 187 li
@
171.415 186 mo
171.415 185.242 170.799 184.625 170.04 184.625 cv
169.281 184.625 168.665 185.242 168.665 186 cv
168.665 186.759 169.281 187.375 170.04 187.375 cv
170.799 187.375 171.415 186.759 171.415 186 cv
ef
174.75 189.25 mo
175.75 189.25 li
172 189.25 mo
173 189.25 li
173.75 188.5 mo
173.75 187.5 li
173.75 191.25 mo
173.75 190.25 li
@
175.135 189.241 mo
175.135 188.481 174.519 187.866 173.76 187.866 cv
173.001 187.866 172.385 188.481 172.385 189.241 cv
172.385 190 173.001 190.616 173.76 190.616 cv
174.519 190.616 175.135 190 175.135 189.241 cv
ef
178.5 189.75 mo
179.5 189.75 li
175.75 189.75 mo
176.75 189.75 li
177.75 188.75 mo
177.75 187.75 li
177.75 191.75 mo
177.75 190.75 li
@
179.095 189.72 mo
179.095 188.961 178.479 188.345 177.72 188.345 cv
176.961 188.345 176.345 188.961 176.345 189.72 cv
176.345 190.48 176.961 191.095 177.72 191.095 cv
178.479 191.095 179.095 190.48 179.095 189.72 cv
ef
182.25 184.75 mo
183.25 184.75 li
179.5 184.75 mo
180.5 184.75 li
181.5 183.75 mo
181.5 182.75 li
181.5 186.75 mo
181.5 185.75 li
@
182.815 184.8 mo
182.815 184.042 182.199 183.425 181.44 183.425 cv
180.681 183.425 180.065 184.042 180.065 184.8 cv
180.065 185.56 180.681 186.175 181.44 186.175 cv
182.199 186.175 182.815 185.56 182.815 184.8 cv
ef
186.25 190 mo
187 190 li
183.25 190 mo
184.25 190 li
185.25 189 mo
185.25 188 li
185.25 192 mo
185.25 191 li
@
186.655 189.96 mo
186.655 189.202 186.039 188.585 185.28 188.585 cv
184.521 188.585 183.905 189.202 183.905 189.96 cv
183.905 190.719 184.521 191.335 185.28 191.335 cv
186.039 191.335 186.655 190.719 186.655 189.96 cv
ef
190 188.75 mo
190.75 188.75 li
187 188.75 mo
188 188.75 li
189 188 mo
189 187 li
189 190.75 mo
189 189.75 li
@
190.375 188.76 mo
190.375 188.001 189.759 187.385 189 187.385 cv
188.241 187.385 187.625 188.001 187.625 188.76 cv
187.625 189.52 188.241 190.135 189 190.135 cv
189.759 190.135 190.375 189.52 190.375 188.76 cv
ef
193.75 185 mo
194.75 185 li
190.75 185 mo
191.75 185 li
192.75 184.25 mo
192.75 183 li
192.75 187.25 mo
192.75 186 li
@
194.095 185.041 mo
194.095 184.282 193.479 183.666 192.72 183.666 cv
191.961 183.666 191.345 184.282 191.345 185.041 cv
191.345 185.799 191.961 186.416 192.72 186.416 cv
193.479 186.416 194.095 185.799 194.095 185.041 cv
ef
197.5 195.5 mo
198.5 195.5 li
194.75 195.5 mo
195.5 195.5 li
196.5 194.75 mo
196.5 193.75 li
196.5 197.5 mo
196.5 196.5 li
@
197.935 195.48 mo
197.935 194.722 197.319 194.105 196.56 194.105 cv
195.801 194.105 195.185 194.722 195.185 195.48 cv
195.185 196.239 195.801 196.855 196.56 196.855 cv
197.319 196.855 197.935 196.239 197.935 195.48 cv
ef
201.25 190.5 mo
202.25 190.5 li
198.5 190.5 mo
199.25 190.5 li
200.25 189.5 mo
200.25 188.75 li
200.25 192.5 mo
200.25 191.5 li
@
201.655 190.44 mo
201.655 189.682 201.039 189.065 200.28 189.065 cv
199.521 189.065 198.905 189.682 198.905 190.44 cv
198.905 191.2 199.521 191.815 200.28 191.815 cv
201.039 191.815 201.655 191.2 201.655 190.44 cv
ef
205 195.25 mo
206 195.25 li
202.25 195.25 mo
203.25 195.25 li
204 194.25 mo
204 193.25 li
204 197 mo
204 196 li
@
205.375 195.241 mo
205.375 194.481 204.759 193.866 204 193.866 cv
203.241 193.866 202.625 194.481 202.625 195.241 cv
202.625 196 203.241 196.616 204 196.616 cv
204.759 196.616 205.375 196 205.375 195.241 cv
ef
208.75 195.25 mo
209.75 195.25 li
206 195.25 mo
207 195.25 li
207.75 194.5 mo
207.75 193.5 li
207.75 197.25 mo
207.75 196.25 li
@
209.095 195.241 mo
209.095 194.481 208.479 193.866 207.72 193.866 cv
206.961 193.866 206.345 194.481 206.345 195.241 cv
206.345 196 206.961 196.616 207.72 196.616 cv
208.479 196.616 209.095 196 209.095 195.241 cv
ef
212.5 197.5 mo
213.5 197.5 li
209.75 197.5 mo
210.75 197.5 li
211.75 196.5 mo
211.75 195.75 li
211.75 199.25 mo
211.75 198.25 li
@
213.175 197.521 mo
213.175 196.761 212.559 196.146 211.8 196.146 cv
211.041 196.146 210.425 196.761 210.425 197.521 cv
210.425 198.28 211.041 198.895 211.8 198.895 cv
212.559 198.895 213.175 198.28 213.175 197.521 cv
ef
216.5 199.75 mo
217.25 199.75 li
213.5 199.75 mo
214.5 199.75 li
215.5 199 mo
215.5 198.25 li
215.5 201.5 mo
215.5 200.75 li
@
216.895 199.8 mo
216.895 199.042 216.279 198.425 215.52 198.425 cv
214.761 198.425 214.145 199.042 214.145 199.8 cv
214.145 200.559 214.761 201.175 215.52 201.175 cv
216.279 201.175 216.895 200.559 216.895 199.8 cv
ef
220.25 199 mo
221 199 li
217.25 199 mo
218.25 199 li
219.25 198 mo
219.25 197.25 li
219.25 200.75 mo
219.25 200 li
@
220.615 198.96 mo
220.615 198.202 219.999 197.585 219.24 197.585 cv
218.481 197.585 217.865 198.202 217.865 198.96 cv
217.865 199.719 218.481 200.335 219.24 200.335 cv
219.999 200.335 220.615 199.719 220.615 198.96 cv
ef
224 196.25 mo
225 196.25 li
221 196.25 mo
222 196.25 li
223 195.25 mo
223 194.5 li
223 198 mo
223 197.25 li
@
224.335 196.201 mo
224.335 195.441 223.719 194.826 222.96 194.826 cv
222.201 194.826 221.585 195.441 221.585 196.201 cv
221.585 196.959 222.201 197.576 222.96 197.576 cv
223.719 197.576 224.335 196.959 224.335 196.201 cv
ef
227.75 198 mo
228.75 198 li
225 198 mo
225.75 198 li
226.75 197 mo
226.75 196.25 li
226.75 199.75 mo
226.75 199 li
@
228.175 198 mo
228.175 197.242 227.559 196.625 226.8 196.625 cv
226.041 196.625 225.425 197.242 225.425 198 cv
225.425 198.759 226.041 199.375 226.8 199.375 cv
227.559 199.375 228.175 198.759 228.175 198 cv
ef
231.5 195 mo
232.5 195 li
228.75 195 mo
229.5 195 li
230.5 194 mo
230.5 193.25 li
230.5 196.75 mo
230.5 196 li
@
231.895 195 mo
231.895 194.242 231.279 193.625 230.52 193.625 cv
229.761 193.625 229.145 194.242 229.145 195 cv
229.145 195.759 229.761 196.375 230.52 196.375 cv
231.279 196.375 231.895 195.759 231.895 195 cv
ef
235.25 219 mo
236.25 219 li
232.5 219 mo
233.5 219 li
234.25 218 mo
234.25 217.75 li
234.25 220 mo
234.25 219.75 li
@
235.615 219 mo
235.615 218.242 234.999 217.625 234.24 217.625 cv
233.481 217.625 232.865 218.242 232.865 219 cv
232.865 219.759 233.481 220.375 234.24 220.375 cv
234.999 220.375 235.615 219.759 235.615 219 cv
ef
239 223.5 mo
240 223.5 li
236.25 223.5 mo
237.25 223.5 li
@
239.335 223.56 mo
239.335 222.801 238.719 222.185 237.96 222.185 cv
237.201 222.185 236.585 222.801 236.585 223.56 cv
236.585 224.32 237.201 224.935 237.96 224.935 cv
238.719 224.935 239.335 224.32 239.335 223.56 cv
ef
242.75 219.25 mo
243.75 219.25 li
240 219.25 mo
241 219.25 li
@
243.415 219.241 mo
243.415 218.482 242.799 217.866 242.04 217.866 cv
241.281 217.866 240.665 218.482 240.665 219.241 cv
240.665 220 241.281 220.616 242.04 220.616 cv
242.799 220.616 243.415 220 243.415 219.241 cv
ef
246.5 219.75 mo
247.5 219.75 li
243.75 219.75 mo
244.75 219.75 li
@
247.135 219.72 mo
247.135 218.961 246.519 218.345 245.76 218.345 cv
245.001 218.345 244.385 218.961 244.385 219.72 cv
244.385 220.479 245.001 221.095 245.76 221.095 cv
246.519 221.095 247.135 220.479 247.135 219.72 cv
ef
250.5 218.25 mo
251.25 218.25 li
247.5 218.25 mo
248.5 218.25 li
249.5 217.25 mo
249.5 217 li
249.5 219.25 mo
249.5 219 li
@
250.855 218.281 mo
250.855 217.522 250.239 216.906 249.48 216.906 cv
248.721 216.906 248.105 217.522 248.105 218.281 cv
248.105 219.04 248.721 219.656 249.48 219.656 cv
250.239 219.656 250.855 219.04 250.855 218.281 cv
ef
254.25 218 mo
255 218 li
251.25 218 mo
252.25 218 li
253.25 219.25 mo
253.25 219 li
@
254.575 218.041 mo
254.575 217.282 253.959 216.666 253.2 216.666 cv
252.441 216.666 251.825 217.282 251.825 218.041 cv
251.825 218.799 252.441 219.416 253.2 219.416 cv
253.959 219.416 254.575 218.799 254.575 218.041 cv
ef
258 218 mo
259 218 li
255 218 mo
256 218 li
257 217 mo
257 216.75 li
@
258.415 218.041 mo
258.415 217.282 257.799 216.666 257.04 216.666 cv
256.281 216.666 255.665 217.282 255.665 218.041 cv
255.665 218.799 256.281 219.416 257.04 219.416 cv
257.799 219.416 258.415 218.799 258.415 218.041 cv
ef
261.75 220.25 mo
262.75 220.25 li
259 220.25 mo
259.75 220.25 li
@
262.135 220.201 mo
262.135 219.442 261.519 218.826 260.76 218.826 cv
260.001 218.826 259.385 219.442 259.385 220.201 cv
259.385 220.959 260.001 221.576 260.76 221.576 cv
261.519 221.576 262.135 220.959 262.135 220.201 cv
ef
265.5 217.5 mo
266.5 217.5 li
262.75 217.5 mo
263.5 217.5 li
264.5 216.5 mo
264.5 216.25 li
@
265.855 217.56 mo
265.855 216.801 265.239 216.185 264.48 216.185 cv
263.721 216.185 263.105 216.801 263.105 217.56 cv
263.105 218.32 263.721 218.935 264.48 218.935 cv
265.239 218.935 265.855 218.32 265.855 217.56 cv
ef
269.25 218.75 mo
270.25 218.75 li
266.5 218.75 mo
267.5 218.75 li
@
269.575 218.76 mo
269.575 218.001 268.959 217.385 268.2 217.385 cv
267.441 217.385 266.825 218.001 266.825 218.76 cv
266.825 219.519 267.441 220.135 268.2 220.135 cv
268.959 220.135 269.575 219.519 269.575 218.76 cv
ef
273 216.75 mo
274 216.75 li
270.25 216.75 mo
271.25 216.75 li
272.25 216 mo
272.25 215.75 li
272.25 218 mo
272.25 217.75 li
@
273.655 216.72 mo
273.655 215.961 273.039 215.345 272.28 215.345 cv
271.521 215.345 270.905 215.961 270.905 216.72 cv
270.905 217.479 271.521 218.095 272.28 218.095 cv
273.039 218.095 273.655 217.479 273.655 216.72 cv
ef
276.75 217 mo
277.75 217 li
274 217 mo
275 217 li
276 216 mo
276 215.75 li
276 218.25 mo
276 218 li
@
277.375 216.96 mo
277.375 216.202 276.759 215.585 276 215.585 cv
275.241 215.585 274.625 216.202 274.625 216.96 cv
274.625 217.719 275.241 218.335 276 218.335 cv
276.759 218.335 277.375 217.719 277.375 216.96 cv
ef
280.75 215.75 mo
281.5 215.75 li
277.75 215.75 mo
278.75 215.75 li
279.75 214.75 mo
279.75 214.5 li
279.75 217 mo
279.75 216.75 li
@
281.095 215.76 mo
281.095 215.001 280.479 214.385 279.72 214.385 cv
278.961 214.385 278.345 215.001 278.345 215.76 cv
278.345 216.519 278.961 217.135 279.72 217.135 cv
280.479 217.135 281.095 216.519 281.095 215.76 cv
ef
284.5 215.75 mo
285.25 215.75 li
281.5 215.75 mo
282.5 215.75 li
283.5 214.75 mo
283.5 214.5 li
283.5 217 mo
283.5 216.75 li
@
284.815 215.76 mo
284.815 215.001 284.199 214.385 283.44 214.385 cv
282.681 214.385 282.065 215.001 282.065 215.76 cv
282.065 216.519 282.681 217.135 283.44 217.135 cv
284.199 217.135 284.815 216.519 284.815 215.76 cv
ef
288.25 213 mo
289.25 213 li
285.25 213 mo
286.25 213 li
287.25 212.25 mo
287.25 211.75 li
287.25 214.5 mo
287.25 214 li
@
288.655 213 mo
288.655 212.242 288.039 211.625 287.28 211.625 cv
286.521 211.625 285.905 212.242 285.905 213 cv
285.905 213.759 286.521 214.375 287.28 214.375 cv
288.039 214.375 288.655 213.759 288.655 213 cv
ef
292 213.75 mo
293 213.75 li
289.25 213.75 mo
290 213.75 li
291 212.75 mo
291 212.5 li
291 215 mo
291 214.75 li
@
292.375 213.72 mo
292.375 212.961 291.759 212.345 291 212.345 cv
290.241 212.345 289.625 212.961 289.625 213.72 cv
289.625 214.479 290.241 215.095 291 215.095 cv
291.759 215.095 292.375 214.479 292.375 213.72 cv
ef
295.75 212 mo
296.75 212 li
293 212 mo
293.75 212 li
294.75 211 mo
294.75 210.75 li
294.75 213.5 mo
294.75 213 li
@
296.095 212.041 mo
296.095 211.282 295.479 210.666 294.72 210.666 cv
293.961 210.666 293.345 211.282 293.345 212.041 cv
293.345 212.799 293.961 213.416 294.72 213.416 cv
295.479 213.416 296.095 212.799 296.095 212.041 cv
ef
299.5 209 mo
300.5 209 li
296.75 209 mo
297.75 209 li
298.5 208 mo
298.5 207.5 li
298.5 210.5 mo
298.5 210 li
@
299.935 209.041 mo
299.935 208.282 299.319 207.666 298.56 207.666 cv
297.801 207.666 297.185 208.282 297.185 209.041 cv
297.185 209.799 297.801 210.416 298.56 210.416 cv
299.319 210.416 299.935 209.799 299.935 209.041 cv
ef
303.25 205.25 mo
304.25 205.25 li
300.5 205.25 mo
301.5 205.25 li
302.25 204.25 mo
302.25 203.75 li
302.25 206.75 mo
302.25 206.25 li
@
303.655 205.201 mo
303.655 204.442 303.039 203.826 302.28 203.826 cv
301.521 203.826 300.905 204.442 300.905 205.201 cv
300.905 205.959 301.521 206.576 302.28 206.576 cv
303.039 206.576 303.655 205.959 303.655 205.201 cv
ef
307 207.5 mo
308 207.5 li
304.25 207.5 mo
305.25 207.5 li
306.25 206.5 mo
306.25 206 li
306.25 209 mo
306.25 208.5 li
@
307.615 207.481 mo
307.615 206.721 306.999 206.106 306.24 206.106 cv
305.481 206.106 304.865 206.721 304.865 207.481 cv
304.865 208.24 305.481 208.856 306.24 208.856 cv
306.999 208.856 307.615 208.24 307.615 207.481 cv
ef
310.75 225.75 mo
311.75 225.75 li
308 225.75 mo
309 225.75 li
@
311.335 225.72 mo
311.335 224.961 310.719 224.345 309.96 224.345 cv
309.201 224.345 308.585 224.961 308.585 225.72 cv
308.585 226.479 309.201 227.095 309.96 227.095 cv
310.719 227.095 311.335 226.479 311.335 225.72 cv
ef
314.75 223 mo
315.5 223 li
311.75 223 mo
312.75 223 li
@
315.175 222.96 mo
315.175 222.202 314.559 221.585 313.8 221.585 cv
313.041 221.585 312.425 222.202 312.425 222.96 cv
312.425 223.719 313.041 224.335 313.8 224.335 cv
314.559 224.335 315.175 223.719 315.175 222.96 cv
ef
318.5 183 mo
319.25 183 li
315.5 183 mo
316.5 183 li
317.5 182 mo
317.5 181 li
317.5 185 mo
317.5 184 li
@
318.895 183 mo
318.895 182.242 318.279 181.625 317.52 181.625 cv
316.761 181.625 316.145 182.242 316.145 183 cv
316.145 183.759 316.761 184.375 317.52 184.375 cv
318.279 184.375 318.895 183.759 318.895 183 cv
ef
322.25 161.75 mo
323.25 161.75 li
319.25 161.75 mo
320.25 161.75 li
321.25 161 mo
321.25 159.5 li
321.25 164.25 mo
321.25 162.75 li
@
322.615 161.76 mo
322.615 161.001 321.999 160.385 321.24 160.385 cv
320.481 160.385 319.865 161.001 319.865 161.76 cv
319.865 162.52 320.481 163.135 321.24 163.135 cv
321.999 163.135 322.615 162.52 322.615 161.76 cv
ef
326 154.25 mo
327 154.25 li
323.25 154.25 mo
324 154.25 li
325 153.25 mo
325 151.5 li
325 156.75 mo
325 155 li
@
326.335 154.201 mo
326.335 153.441 325.719 152.826 324.96 152.826 cv
324.201 152.826 323.585 153.441 323.585 154.201 cv
323.585 154.959 324.201 155.576 324.96 155.576 cv
325.719 155.576 326.335 154.959 326.335 154.201 cv
ef
329.75 147.25 mo
330.75 147.25 li
327 147.25 mo
327.75 147.25 li
328.75 146.25 mo
328.75 144.5 li
328.75 150 mo
328.75 148.25 li
@
330.175 147.241 mo
330.175 146.481 329.559 145.866 328.8 145.866 cv
328.041 145.866 327.425 146.481 327.425 147.241 cv
327.425 148 328.041 148.616 328.8 148.616 cv
329.559 148.616 330.175 148 330.175 147.241 cv
ef
333.5 139.75 mo
334.5 139.75 li
330.75 139.75 mo
331.75 139.75 li
332.5 138.75 mo
332.5 136.75 li
332.5 142.5 mo
332.5 140.5 li
@
333.895 139.8 mo
333.895 139.042 333.279 138.425 332.52 138.425 cv
331.761 138.425 331.145 139.042 331.145 139.8 cv
331.145 140.56 331.761 141.175 332.52 141.175 cv
333.279 141.175 333.895 140.56 333.895 139.8 cv
ef
337.25 136 mo
338.25 136 li
334.5 136 mo
335.5 136 li
336.5 135 mo
336.5 133 li
336.5 138.75 mo
336.5 137 li
@
337.855 135.96 mo
337.855 135.202 337.239 134.585 336.48 134.585 cv
335.721 134.585 335.105 135.202 335.105 135.96 cv
335.105 136.719 335.721 137.335 336.48 137.335 cv
337.239 137.335 337.855 136.719 337.855 135.96 cv
ef
341 133 mo
342 133 li
338.25 133 mo
339.25 133 li
340.25 132.25 mo
340.25 130.25 li
340.25 136 mo
340.25 134 li
@
341.575 132.96 mo
341.575 132.202 340.959 131.585 340.2 131.585 cv
339.441 131.585 338.825 132.202 338.825 132.96 cv
338.825 133.719 339.441 134.335 340.2 134.335 cv
340.959 134.335 341.575 133.719 341.575 132.96 cv
ef
345 133.25 mo
345.75 133.25 li
342 133.25 mo
343 133.25 li
344 132.25 mo
344 130.25 li
344 136.25 mo
344 134.25 li
@
345.415 133.201 mo
345.415 132.441 344.799 131.826 344.04 131.826 cv
343.281 131.826 342.665 132.441 342.665 133.201 cv
342.665 133.959 343.281 134.576 344.04 134.576 cv
344.799 134.576 345.415 133.959 345.415 133.201 cv
ef
348.75 134.75 mo
349.5 134.75 li
345.75 134.75 mo
346.75 134.75 li
347.75 133.75 mo
347.75 131.75 li
347.75 137.75 mo
347.75 135.75 li
@
349.135 134.76 mo
349.135 134.001 348.519 133.385 347.76 133.385 cv
347.001 133.385 346.385 134.001 346.385 134.76 cv
346.385 135.52 347.001 136.135 347.76 136.135 cv
348.519 136.135 349.135 135.52 349.135 134.76 cv
ef
352.5 136 mo
353.5 136 li
349.5 136 mo
350.5 136 li
351.5 135 mo
351.5 133 li
351.5 138.75 mo
351.5 137 li
@
352.855 135.96 mo
352.855 135.202 352.239 134.585 351.48 134.585 cv
350.721 134.585 350.105 135.202 350.105 135.96 cv
350.105 136.719 350.721 137.335 351.48 137.335 cv
352.239 137.335 352.855 136.719 352.855 135.96 cv
ef
356.25 137.75 mo
357.25 137.75 li
353.5 137.75 mo
354.25 137.75 li
355.25 137 mo
355.25 135 li
355.25 140.75 mo
355.25 138.75 li
@
356.575 137.76 mo
356.575 137.001 355.959 136.385 355.2 136.385 cv
354.441 136.385 353.825 137.001 353.825 137.76 cv
353.825 138.52 354.441 139.135 355.2 139.135 cv
355.959 139.135 356.575 138.52 356.575 137.76 cv
ef
360 146.75 mo
361 146.75 li
357.25 146.75 mo
358 146.75 li
359 145.75 mo
359 144 li
359 149.5 mo
359 147.75 li
@
360.415 146.76 mo
360.415 146.001 359.799 145.385 359.04 145.385 cv
358.281 145.385 357.665 146.001 357.665 146.76 cv
357.665 147.52 358.281 148.135 359.04 148.135 cv
359.799 148.135 360.415 147.52 360.415 146.76 cv
ef
363.75 147.5 mo
364.75 147.5 li
361 147.5 mo
362 147.5 li
362.75 146.5 mo
362.75 144.75 li
362.75 150.25 mo
362.75 148.5 li
@
364.135 147.48 mo
364.135 146.722 363.519 146.105 362.76 146.105 cv
362.001 146.105 361.385 146.722 361.385 147.48 cv
361.385 148.239 362.001 148.855 362.76 148.855 cv
363.519 148.855 364.135 148.239 364.135 147.48 cv
ef
367.5 165 mo
368.5 165 li
364.75 165 mo
365.75 165 li
366.5 164 mo
366.5 162.5 li
366.5 167.5 mo
366.5 166 li
@
367.855 165 mo
367.855 164.242 367.239 163.625 366.48 163.625 cv
365.721 163.625 365.105 164.242 365.105 165 cv
365.105 165.759 365.721 166.375 366.48 166.375 cv
367.239 166.375 367.855 165.759 367.855 165 cv
ef
371.25 172.5 mo
372.25 172.5 li
368.5 172.5 mo
369.5 172.5 li
370.5 171.5 mo
370.5 170.25 li
370.5 174.75 mo
370.5 173.5 li
@
371.935 172.44 mo
371.935 171.682 371.319 171.065 370.56 171.065 cv
369.801 171.065 369.185 171.682 369.185 172.44 cv
369.185 173.2 369.801 173.815 370.56 173.815 cv
371.319 173.815 371.935 173.2 371.935 172.44 cv
ef
375 190.75 mo
376 190.75 li
372.25 190.75 mo
373.25 190.75 li
374.25 189.75 mo
374.25 188.75 li
374.25 192.75 mo
374.25 191.75 li
@
375.655 190.8 mo
375.655 190.042 375.039 189.425 374.28 189.425 cv
373.521 189.425 372.905 190.042 372.905 190.8 cv
372.905 191.56 373.521 192.175 374.28 192.175 cv
375.039 192.175 375.655 191.56 375.655 190.8 cv
ef
379 206 mo
379.75 206 li
376 206 mo
377 206 li
378 205 mo
378 204.5 li
378 207.5 mo
378 206.75 li
@
379.375 206.041 mo
379.375 205.282 378.759 204.666 378 204.666 cv
377.241 204.666 376.625 205.282 376.625 206.041 cv
376.625 206.799 377.241 207.416 378 207.416 cv
378.759 207.416 379.375 206.799 379.375 206.041 cv
ef
382.75 222.25 mo
383.5 222.25 li
379.75 222.25 mo
380.75 222.25 li
@
383.095 222.241 mo
383.095 221.482 382.479 220.866 381.72 220.866 cv
380.961 220.866 380.345 221.482 380.345 222.241 cv
380.345 223 380.961 223.616 381.72 223.616 cv
382.479 223.616 383.095 223 383.095 222.241 cv
ef
386.5 231.5 mo
387.5 231.5 li
383.5 231.5 mo
384.5 231.5 li
@
386.815 231.481 mo
386.815 230.721 386.199 230.106 385.44 230.106 cv
384.681 230.106 384.065 230.721 384.065 231.481 cv
384.065 232.24 384.681 232.856 385.44 232.856 cv
386.199 232.856 386.815 232.24 386.815 231.481 cv
ef
390.25 227.25 mo
391.25 227.25 li
387.5 227.25 mo
388.25 227.25 li
@
390.655 227.281 mo
390.655 226.522 390.039 225.906 389.28 225.906 cv
388.521 225.906 387.905 226.522 387.905 227.281 cv
387.905 228.04 388.521 228.656 389.28 228.656 cv
390.039 228.656 390.655 228.04 390.655 227.281 cv
ef
394 212.25 mo
395 212.25 li
391.25 212.25 mo
392 212.25 li
393 211.5 mo
393 211 li
393 213.75 mo
393 213.25 li
@
394.375 212.281 mo
394.375 211.522 393.759 210.906 393 210.906 cv
392.241 210.906 391.625 211.522 391.625 212.281 cv
391.625 213.04 392.241 213.656 393 213.656 cv
393.759 213.656 394.375 213.04 394.375 212.281 cv
ef
397.75 210.5 mo
398.75 210.5 li
395 210.5 mo
396 210.5 li
396.75 209.5 mo
396.75 209 li
396.75 212 mo
396.75 211.5 li
@
398.095 210.481 mo
398.095 209.721 397.479 209.106 396.72 209.106 cv
395.961 209.106 395.345 209.721 395.345 210.481 cv
395.345 211.24 395.961 211.856 396.72 211.856 cv
397.479 211.856 398.095 211.24 398.095 210.481 cv
ef
401.5 204.75 mo
402.5 204.75 li
398.75 204.75 mo
399.75 204.75 li
400.75 203.75 mo
400.75 203.25 li
400.75 206.25 mo
400.75 205.75 li
@
402.175 204.72 mo
402.175 203.961 401.559 203.345 400.8 203.345 cv
400.041 203.345 399.425 203.961 399.425 204.72 cv
399.425 205.479 400.041 206.095 400.8 206.095 cv
401.559 206.095 402.175 205.479 402.175 204.72 cv
ef
405.25 207.5 mo
406.25 207.5 li
402.5 207.5 mo
403.5 207.5 li
404.5 206.5 mo
404.5 206 li
404.5 209 mo
404.5 208.5 li
@
405.895 207.481 mo
405.895 206.721 405.279 206.106 404.52 206.106 cv
403.761 206.106 403.145 206.721 403.145 207.481 cv
403.145 208.24 403.761 208.856 404.52 208.856 cv
405.279 208.856 405.895 208.24 405.895 207.481 cv
ef
409.25 205.5 mo
410 205.5 li
406.25 205.5 mo
407.25 205.5 li
408.25 204.5 mo
408.25 203.75 li
408.25 207 mo
408.25 206.25 li
@
409.615 205.56 mo
409.615 204.801 408.999 204.185 408.24 204.185 cv
407.481 204.185 406.865 204.801 406.865 205.56 cv
406.865 206.32 407.481 206.935 408.24 206.935 cv
408.999 206.935 409.615 206.32 409.615 205.56 cv
ef
413 207 mo
413.75 207 li
410 207 mo
411 207 li
412 206 mo
412 205.5 li
412 208.5 mo
412 208 li
@
413.335 207 mo
413.335 206.242 412.719 205.625 411.96 205.625 cv
411.201 205.625 410.585 206.242 410.585 207 cv
410.585 207.759 411.201 208.375 411.96 208.375 cv
412.719 208.375 413.335 207.759 413.335 207 cv
ef
416.75 206.75 mo
417.75 206.75 li
413.75 206.75 mo
414.75 206.75 li
415.75 206 mo
415.75 205.25 li
415.75 208.25 mo
415.75 207.75 li
@
417.175 206.76 mo
417.175 206.001 416.559 205.385 415.8 205.385 cv
415.041 205.385 414.425 206.001 414.425 206.76 cv
414.425 207.519 415.041 208.135 415.8 208.135 cv
416.559 208.135 417.175 207.519 417.175 206.76 cv
ef
420.5 204.25 mo
421.5 204.25 li
417.75 204.25 mo
418.5 204.25 li
419.5 203.25 mo
419.5 202.75 li
419.5 205.75 mo
419.5 205.25 li
@
420.895 204.241 mo
420.895 203.482 420.279 202.866 419.52 202.866 cv
418.761 202.866 418.145 203.482 418.145 204.241 cv
418.145 205 418.761 205.616 419.52 205.616 cv
420.279 205.616 420.895 205 420.895 204.241 cv
ef
424.25 207.5 mo
425.25 207.5 li
421.5 207.5 mo
422.25 207.5 li
423.25 206.5 mo
423.25 206 li
423.25 209 mo
423.25 208.5 li
@
424.615 207.481 mo
424.615 206.721 423.999 206.106 423.24 206.106 cv
422.481 206.106 421.865 206.721 421.865 207.481 cv
421.865 208.24 422.481 208.856 423.24 208.856 cv
423.999 208.856 424.615 208.24 424.615 207.481 cv
ef
428 204 mo
429 204 li
425.25 204 mo
426.25 204 li
427 203.25 mo
427 202.5 li
427 205.75 mo
427 205 li
@
428.335 204 mo
428.335 203.242 427.719 202.625 426.96 202.625 cv
426.201 202.625 425.585 203.242 425.585 204 cv
425.585 204.759 426.201 205.375 426.96 205.375 cv
427.719 205.375 428.335 204.759 428.335 204 cv
ef
431.75 204.25 mo
432.75 204.25 li
429 204.25 mo
430 204.25 li
430.75 203.25 mo
430.75 202.75 li
430.75 205.75 mo
430.75 205.25 li
@
432.175 204.241 mo
432.175 203.482 431.559 202.866 430.8 202.866 cv
430.041 202.866 429.425 203.482 429.425 204.241 cv
429.425 205 430.041 205.616 430.8 205.616 cv
431.559 205.616 432.175 205 432.175 204.241 cv
ef
435.5 202.75 mo
436.5 202.75 li
432.75 202.75 mo
433.75 202.75 li
434.75 201.75 mo
434.75 201.25 li
434.75 204.5 mo
434.75 203.75 li
@
436.135 202.8 mo
436.135 202.042 435.519 201.425 434.76 201.425 cv
434.001 201.425 433.385 202.042 433.385 202.8 cv
433.385 203.559 434.001 204.175 434.76 204.175 cv
435.519 204.175 436.135 203.559 436.135 202.8 cv
ef
439.25 203.25 mo
440.25 203.25 li
436.5 203.25 mo
437.5 203.25 li
438.5 202.25 mo
438.5 201.5 li
438.5 204.75 mo
438.5 204.25 li
@
439.855 203.281 mo
439.855 202.522 439.239 201.906 438.48 201.906 cv
437.721 201.906 437.105 202.522 437.105 203.281 cv
437.105 204.04 437.721 204.656 438.48 204.656 cv
439.239 204.656 439.855 204.04 439.855 203.281 cv
ef
443.25 208.25 mo
444 208.25 li
440.25 208.25 mo
441.25 208.25 li
442.25 207.5 mo
442.25 207 li
442.25 209.75 mo
442.25 209.25 li
@
443.575 208.201 mo
443.575 207.442 442.959 206.826 442.2 206.826 cv
441.441 206.826 440.825 207.442 440.825 208.201 cv
440.825 208.959 441.441 209.576 442.2 209.576 cv
442.959 209.576 443.575 208.959 443.575 208.201 cv
ef
447 207.25 mo
447.75 207.25 li
444 207.25 mo
445 207.25 li
446 206.25 mo
446 205.75 li
446 208.75 mo
446 208.25 li
@
447.415 207.241 mo
447.415 206.482 446.799 205.866 446.04 205.866 cv
445.281 205.866 444.665 206.482 444.665 207.241 cv
444.665 208 445.281 208.616 446.04 208.616 cv
446.799 208.616 447.415 208 447.415 207.241 cv
ef
450.75 208.25 mo
451.75 208.25 li
447.75 208.25 mo
448.75 208.25 li
449.75 207.5 mo
449.75 207 li
449.75 209.75 mo
449.75 209.25 li
@
451.135 208.201 mo
451.135 207.442 450.519 206.826 449.76 206.826 cv
449.001 206.826 448.385 207.442 448.385 208.201 cv
448.385 208.959 449.001 209.576 449.76 209.576 cv
450.519 209.576 451.135 208.959 451.135 208.201 cv
ef
454.5 209.75 mo
455.5 209.75 li
451.75 209.75 mo
452.5 209.75 li
453.5 208.75 mo
453.5 208.5 li
453.5 211.25 mo
453.5 210.75 li
@
454.855 209.76 mo
454.855 209.001 454.239 208.385 453.48 208.385 cv
452.721 208.385 452.105 209.001 452.105 209.76 cv
452.105 210.519 452.721 211.135 453.48 211.135 cv
454.239 211.135 454.855 210.519 454.855 209.76 cv
ef
458.25 215.75 mo
459.25 215.75 li
455.5 215.75 mo
456.25 215.75 li
457.25 214.75 mo
457.25 214.5 li
457.25 217 mo
457.25 216.75 li
@
458.575 215.76 mo
458.575 215.001 457.959 214.385 457.2 214.385 cv
456.441 214.385 455.825 215.001 455.825 215.76 cv
455.825 216.519 456.441 217.135 457.2 217.135 cv
457.959 217.135 458.575 216.519 458.575 215.76 cv
ef
462 231 mo
463 231 li
459.25 231 mo
460.25 231 li
@
462.415 231 mo
462.415 230.242 461.799 229.625 461.04 229.625 cv
460.281 229.625 459.665 230.242 459.665 231 cv
459.665 231.759 460.281 232.375 461.04 232.375 cv
461.799 232.375 462.415 231.759 462.415 231 cv
ef
465.75 230 mo
466.75 230 li
463 230 mo
464 230 li
@
466.375 230.041 mo
466.375 229.282 465.759 228.666 465 228.666 cv
464.241 228.666 463.625 229.282 463.625 230.041 cv
463.625 230.799 464.241 231.416 465 231.416 cv
465.759 231.416 466.375 230.799 466.375 230.041 cv
ef
469.5 224.75 mo
470.5 224.75 li
466.75 224.75 mo
467.75 224.75 li
@
470.095 224.76 mo
470.095 224.001 469.479 223.385 468.72 223.385 cv
467.961 223.385 467.345 224.001 467.345 224.76 cv
467.345 225.519 467.961 226.135 468.72 226.135 cv
469.479 226.135 470.095 225.519 470.095 224.76 cv
ef
473.5 222.75 mo
474.25 222.75 li
470.5 222.75 mo
471.5 222.75 li
@
473.935 222.72 mo
473.935 221.961 473.319 221.345 472.56 221.345 cv
471.801 221.345 471.185 221.961 471.185 222.72 cv
471.185 223.479 471.801 224.095 472.56 224.095 cv
473.319 224.095 473.935 223.479 473.935 222.72 cv
ef
477.25 223.25 mo
478 223.25 li
474.25 223.25 mo
475.25 223.25 li
@
477.655 223.201 mo
477.655 222.442 477.039 221.826 476.28 221.826 cv
475.521 221.826 474.905 222.442 474.905 223.201 cv
474.905 223.959 475.521 224.576 476.28 224.576 cv
477.039 224.576 477.655 223.959 477.655 223.201 cv
ef
481 220 mo
482 220 li
478 220 mo
479 220 li
@
481.375 219.96 mo
481.375 219.202 480.759 218.585 480 218.585 cv
479.241 218.585 478.625 219.202 478.625 219.96 cv
478.625 220.719 479.241 221.335 480 221.335 cv
480.759 221.335 481.375 220.719 481.375 219.96 cv
ef
484.75 221.25 mo
485.75 221.25 li
482 221.25 mo
482.75 221.25 li
@
485.095 221.281 mo
485.095 220.522 484.479 219.906 483.72 219.906 cv
482.961 219.906 482.345 220.522 482.345 221.281 cv
482.345 222.04 482.961 222.656 483.72 222.656 cv
484.479 222.656 485.095 222.04 485.095 221.281 cv
ef
488.5 219 mo
489.5 219 li
485.75 219 mo
486.5 219 li
487.5 218.25 mo
487.5 218 li
487.5 220.25 mo
487.5 220 li
@
488.815 219 mo
488.815 218.242 488.199 217.625 487.44 217.625 cv
486.681 217.625 486.065 218.242 486.065 219 cv
486.065 219.759 486.681 220.375 487.44 220.375 cv
488.199 220.375 488.815 219.759 488.815 219 cv
ef
492.25 219.5 mo
493.25 219.5 li
489.5 219.5 mo
490.5 219.5 li
491.25 218.5 mo
491.25 218.25 li
@
492.655 219.481 mo
492.655 218.721 492.039 218.106 491.28 218.106 cv
490.521 218.106 489.905 218.721 489.905 219.481 cv
489.905 220.24 490.521 220.856 491.28 220.856 cv
492.039 220.856 492.655 220.24 492.655 219.481 cv
ef
496 218.75 mo
497 218.75 li
493.25 218.75 mo
494.25 218.75 li
495 218 mo
495 217.75 li
495 220 mo
495 219.75 li
@
496.375 218.76 mo
496.375 218.001 495.759 217.385 495 217.385 cv
494.241 217.385 493.625 218.001 493.625 218.76 cv
493.625 219.519 494.241 220.135 495 220.135 cv
495.759 220.135 496.375 219.519 496.375 218.76 cv
ef
499.75 216.75 mo
500.75 216.75 li
497 216.75 mo
498 216.75 li
499 215.75 mo
499 215.5 li
499 218 mo
499 217.75 li
@
500.335 216.72 mo
500.335 215.961 499.719 215.345 498.96 215.345 cv
498.201 215.345 497.585 215.961 497.585 216.72 cv
497.585 217.479 498.201 218.095 498.96 218.095 cv
499.719 218.095 500.335 217.479 500.335 216.72 cv
ef
503.75 217.5 mo
504.5 217.5 li
500.75 217.5 mo
501.75 217.5 li
502.75 218.75 mo
502.75 218.5 li
@
504.175 217.56 mo
504.175 216.801 503.559 216.185 502.8 216.185 cv
502.041 216.185 501.425 216.801 501.425 217.56 cv
501.425 218.32 502.041 218.935 502.8 218.935 cv
503.559 218.935 504.175 218.32 504.175 217.56 cv
ef
507.5 218 mo
508.25 218 li
504.5 218 mo
505.5 218 li
506.5 217 mo
506.5 216.75 li
506.5 219 mo
506.5 218.75 li
@
507.895 218.041 mo
507.895 217.282 507.279 216.666 506.52 216.666 cv
505.761 216.666 505.145 217.282 505.145 218.041 cv
505.145 218.799 505.761 219.416 506.52 219.416 cv
507.279 219.416 507.895 218.799 507.895 218.041 cv
ef
511.25 219 mo
512.25 219 li
508.25 219 mo
509.25 219 li
510.25 218 mo
510.25 217.75 li
510.25 220 mo
510.25 219.75 li
@
511.615 219 mo
511.615 218.242 510.999 217.625 510.24 217.625 cv
509.481 217.625 508.865 218.242 508.865 219 cv
508.865 219.759 509.481 220.375 510.24 220.375 cv
510.999 220.375 511.615 219.759 511.615 219 cv
ef
515 217.5 mo
516 217.5 li
512.25 217.5 mo
513 217.5 li
514 216.75 mo
514 216.5 li
514 218.75 mo
514 218.5 li
@
515.335 217.56 mo
515.335 216.801 514.719 216.185 513.96 216.185 cv
513.201 216.185 512.585 216.801 512.585 217.56 cv
512.585 218.32 513.201 218.935 513.96 218.935 cv
514.719 218.935 515.335 218.32 515.335 217.56 cv
ef
518.75 218.75 mo
519.75 218.75 li
516 218.75 mo
516.75 218.75 li
517.75 217.75 mo
517.75 217.5 li
517.75 219.75 mo
517.75 219.5 li
@
519.175 218.76 mo
519.175 218.001 518.559 217.385 517.8 217.385 cv
517.041 217.385 516.425 218.001 516.425 218.76 cv
516.425 219.519 517.041 220.135 517.8 220.135 cv
518.559 220.135 519.175 219.519 519.175 218.76 cv
ef
522.5 219.5 mo
523.5 219.5 li
519.75 219.5 mo
520.75 219.5 li
521.5 218.5 mo
521.5 218.25 li
@
522.895 219.481 mo
522.895 218.721 522.279 218.106 521.52 218.106 cv
520.761 218.106 520.145 218.721 520.145 219.481 cv
520.145 220.24 520.761 220.856 521.52 220.856 cv
522.279 220.856 522.895 220.24 522.895 219.481 cv
ef
526.25 218.5 mo
527.25 218.5 li
523.5 218.5 mo
524.5 218.5 li
525.25 217.5 mo
525.25 217.25 li
525.25 219.5 mo
525.25 219.25 li
@
526.615 218.52 mo
526.615 217.761 525.999 217.145 525.24 217.145 cv
524.481 217.145 523.865 217.761 523.865 218.52 cv
523.865 219.28 524.481 219.895 525.24 219.895 cv
525.999 219.895 526.615 219.28 526.615 218.52 cv
ef
530 216.5 mo
531 216.5 li
527.25 216.5 mo
528.25 216.5 li
529.25 215.75 mo
529.25 215.5 li
529.25 217.75 mo
529.25 217.5 li
@
530.575 216.481 mo
530.575 215.721 529.959 215.106 529.2 215.106 cv
528.441 215.106 527.825 215.721 527.825 216.481 cv
527.825 217.24 528.441 217.856 529.2 217.856 cv
529.959 217.856 530.575 217.24 530.575 216.481 cv
ef
533.75 219.75 mo
534.75 219.75 li
531 219.75 mo
532 219.75 li
533 219 mo
533 218.75 li
533 221 mo
533 220.75 li
@
534.415 219.72 mo
534.415 218.961 533.799 218.345 533.04 218.345 cv
532.281 218.345 531.665 218.961 531.665 219.72 cv
531.665 220.479 532.281 221.095 533.04 221.095 cv
533.799 221.095 534.415 220.479 534.415 219.72 cv
ef
537.75 231 mo
538.5 231 li
534.75 231 mo
535.75 231 li
@
538.135 231 mo
538.135 230.242 537.519 229.625 536.76 229.625 cv
536.001 229.625 535.385 230.242 535.385 231 cv
535.385 231.759 536.001 232.375 536.76 232.375 cv
537.519 232.375 538.135 231.759 538.135 231 cv
ef
1 lw
[6 6 ] 0 dsh
463 232.75 mo
463 133 li
387.5 232.75 mo
387.5 133 li
236.25 232.75 mo
236.25 133 li
160.75 232.75 mo
160.75 133 li
@
0.101961 0.0901961 0.105882 rgb
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginHLSMFT+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-/five <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-/J <1C60D8A8C9B7A73DB6FA483A9791C1A03FDD99DE37EC702CFAA41FFB6235ABBC533B771F9FC9FF7FE3EF943DDF6A0978C6221B723344AE5D5FF65442A5B18CBDAF7665324680F19176D0D766874FD5E0E907> |-/greaterequal <1C60D8A8C9B79676BBE44FF31262548ECF7A7FD23200F5CFA81621F6794F78B85F65A24FF1A18B5AFF6208EE8856A99C7B> |-/mu <1C60D8A8C9B7FBE1C17CB70F9603039897BC7A53A62385A98C51696AFE99BB8643667C20FF42A28C219528D0B9AADC956D5470690FE22E2AFD8CB6133AE25101D7B68FAED2C859053134BF2EFC17AB7D8144A539932C14179950F4BE183E96AB59F2B881AC471E06969886F180AF506B51B986A5> |-systemdict /gcheck known {setglobal} if end {end} ifendHLSMFT+Helvetica /Encoding getdup 32 /space putdup 51 /three putdup 53 /five putdup 74 /J putdup 179 /greaterequal putdup 181 /mu putpop%ADOEndSubsetFont
/HLSMFT+Helvetica*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four /five /six /.notdef /eight 12{/.notdef}rp /E 4{/.notdef}rp /J 26{/.notdef}rp /e 8{/.notdef}rp /n 4{/.notdef}rp /s /t /.notdef /v 60{/.notdef}rp /greaterequal /.notdef /mu 74{/.notdef}rp]HLSMFT+Helvetica nfHLSMFT+Helvetica*1 [14 0 0 -14 0 0 ]msf330.459 125.616 mo(3 Jets)[7.78613 3.88965 7 7.78613 3.88965 0 ]xsh406.729 145.845 mo(4 Jets)[7.78613 3.88965 7 7.78613 3.88965 0 ]xsh104.073 52.9395 mo(3 Jets)[7.78613 3.88965 7 7.78613 3.88965 0 ]xsh179.668 145.845 mo(4 Jet)[7.78613 3.88965 7 7.78613 0 ]xsh210.02 145.845 mo(s)sh251.529 145.845 mo( )sh251.429 145.845 mo(\263)sh259.115 145.845 mo(5 Jets)[7.78613 3.88965 7 7.78564 3.89063 0 ]xsh%ADOBeginSubsetFont: Helvetica-Oblique Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica-Oblique def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 43 /plus putdup 74 /J putdup 101 /e putdup 115 /s putdup 116 /t putdef/FontBBox {-933 -481 1571 1138} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings7 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/space <1C60D8A8C9B854D00D> |-/plus <1C60D8A8C9B7F3748960D40153C1E20CADDE861EE9E3A88C8165BB8573D77DACBC13DEE13F0D084605E72775208E995B240D> |-/J <1C60D8A8C9B7A73DB66317A07011CB47A9764DEEE873397336EB3D36F74648B80145B7FB98A389D4D6EF968E61DDC7880BCE6D7E228397379A9F1DD9E3FCDA245C648AC4AD29DD6263C6C97518C262FE84C7D688D2> |-/e <1C60D8A8C9B7EF3224F670FA38A1BB4E90223B6A6298634446E63C8919CE3C115A06C150CF8C57A88CFAE23A2E8EDF85D74BC61BAB37C5EDB8BF8F7018E84799BDCFBD9072B11894C7F22DBF3C8A6B3DDD8F6C2990E6156A4BC103E12DB037F0C6BE9E4B1CFC9B0EF894C6A7F8ADB8204808E3684247344FE20EB6AF7E77BF7290E1451C84B79B45526E2AA9CB51A3FAFF2A0EFC6CCD416A60FB5BFFFCED1AEE1809A0CC6AC7> |-/s <1C60D8A8C9B7A73D80D88CC8ABD4B7B256BAA7C5827B6D7C090B0C0449AF20AC79C615738052BCE22F5BAAC8F1ED27D4ACA2A38E608D3EA89BBCC33271E1B824DE4796973C53A66D43930B7794C03F206048666CE7950EBC5EBD480E829349D2A5692F864381A8138C4A9033A4F97B87FE001F78C9DA14B4CC73775B9038AC38A52E55C4BBA984CAA055AAC6EBD23860D2233ACD17BFA7F268AC6039F39F7D1011F8E40A54A6A4017C67685520D9AD218189112E96BD24CE8CAC077ACC37> |-/t <1C60D8A8C9B854D0F466C9B078C420BB17D4FCFE61BBA93567EF97A20D8C93FD069C274C4FA15213AC5433646C8E62C97B61CBE191DE0A9E2169165CA8B8FFE74BB0545D27FA56F9C902842DFB070A38F960A9945AD9F602A6487D33B924D4AD335B9A065D41> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/HLSMFU+Helvetica-Oblique /Helvetica-Oblique findfont ct_VMDictPut/HLSMFU+Helvetica-Oblique*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus 30{/.notdef}rp /J 26{/.notdef}rp /e 13{/.notdef}rp /s /t 139{/.notdef}rp]HLSMFU+Helvetica-Oblique nfHLSMFU+Helvetica-Oblique*1 [16 0 0 -16 0 0 ]msf397.347 118.866 mo(e + Jets)[8.89844 4.44531 9.34375 4.44531 8 8.89844 4.44531 0 ]xshHLSMFT+Helvetica*1 [16 0 0 -16 0 0 ]msf166.707 118.866 mo( \265)[4.44531 0 ]xshHLSMFU+Helvetica-Oblique*1 [16 0 0 -16 0 0 ]msf180.371 118.866 mo( + Jets)[4.44531 9.34375 4.44531 8 8.89844 4.44531 0 ]xsh85 301 mo
538.5 301 li
538.5 233.5 li
85 233.5 li
85 301 li
cp
1 1 1 rgb
f
0.75 lw
[] 0 dsh
85 233.5 mo
538.5 233.5 li
538.5 304.5 li
85 304.5 li
85 233.5 li
cp
88 274.75 mo
88.75 274.75 li
85 274.75 mo
86 274.75 li
87 273.75 mo
87 272 li
87 277.5 mo
87 275.75 li
85 233.5 mo
538.5 233.5 li
538.5 304.5 li
85 304.5 li
85 233.5 li
cp
0 0 0 rgb
@
88.375 274.72 mo
88.375 273.961 87.7588 273.345 87 273.345 cv
86.2412 273.345 85.625 273.961 85.625 274.72 cv
85.625 275.479 86.2412 276.095 87 276.095 cv
87.7588 276.095 88.375 275.479 88.375 274.72 cv
ef
91.75 274.75 mo
92.5 274.75 li
88.75 274.75 mo
89.75 274.75 li
90.75 273.75 mo
90.75 272.25 li
90.75 277.25 mo
90.75 275.5 li
@
92.0952 274.72 mo
92.0952 273.961 91.479 273.345 90.7202 273.345 cv
89.9609 273.345 89.3452 273.961 89.3452 274.72 cv
89.3452 275.479 89.9609 276.095 90.7202 276.095 cv
91.479 276.095 92.0952 275.479 92.0952 274.72 cv
ef
95.5 271.75 mo
96.5 271.75 li
92.5 271.75 mo
93.5 271.75 li
94.5 271 mo
94.5 269.5 li
94.5 274 mo
94.5 272.75 li
@
95.9351 271.72 mo
95.9351 270.961 95.3188 270.345 94.5601 270.345 cv
93.8008 270.345 93.1851 270.961 93.1851 271.72 cv
93.1851 272.479 93.8008 273.095 94.5601 273.095 cv
95.3188 273.095 95.9351 272.479 95.9351 271.72 cv
ef
99.25 272.25 mo
100.25 272.25 li
96.5 272.25 mo
97.25 272.25 li
98.25 271.25 mo
98.25 270 li
98.25 274.75 mo
98.25 273.25 li
@
99.6548 272.201 mo
99.6548 271.442 99.0391 270.826 98.2798 270.826 cv
97.521 270.826 96.9048 271.442 96.9048 272.201 cv
96.9048 272.959 97.521 273.576 98.2798 273.576 cv
99.0391 273.576 99.6548 272.959 99.6548 272.201 cv
ef
103 271.25 mo
104 271.25 li
100.25 271.25 mo
101 271.25 li
102 270.25 mo
102 269 li
102 273.25 mo
102 272 li
@
103.375 271.241 mo
103.375 270.482 102.759 269.866 102 269.866 cv
101.241 269.866 100.625 270.482 100.625 271.241 cv
100.625 272 101.241 272.616 102 272.616 cv
102.759 272.616 103.375 272 103.375 271.241 cv
ef
106.75 272.25 mo
107.75 272.25 li
104 272.25 mo
105 272.25 li
105.75 271.25 mo
105.75 270.25 li
105.75 274.25 mo
105.75 273.25 li
@
107.095 272.201 mo
107.095 271.442 106.479 270.826 105.72 270.826 cv
104.961 270.826 104.345 271.442 104.345 272.201 cv
104.345 272.959 104.961 273.576 105.72 273.576 cv
106.479 273.576 107.095 272.959 107.095 272.201 cv
ef
110.5 273.75 mo
111.5 273.75 li
107.75 273.75 mo
108.75 273.75 li
109.5 272.75 mo
109.5 271.75 li
109.5 275.5 mo
109.5 274.75 li
@
110.815 273.76 mo
110.815 273.001 110.199 272.385 109.44 272.385 cv
108.681 272.385 108.065 273.001 108.065 273.76 cv
108.065 274.519 108.681 275.135 109.44 275.135 cv
110.199 275.135 110.815 274.519 110.815 273.76 cv
ef
114.25 273.25 mo
115.25 273.25 li
111.5 273.25 mo
112.5 273.25 li
113.5 272.25 mo
113.5 271.5 li
113.5 275.25 mo
113.5 274.25 li
@
114.895 273.281 mo
114.895 272.522 114.279 271.906 113.52 271.906 cv
112.761 271.906 112.145 272.522 112.145 273.281 cv
112.145 274.04 112.761 274.656 113.52 274.656 cv
114.279 274.656 114.895 274.04 114.895 273.281 cv
ef
118 273 mo
119 273 li
115.25 273 mo
116.25 273 li
117.25 272 mo
117.25 271 li
117.25 274.75 mo
117.25 274 li
@
118.615 273.041 mo
118.615 272.282 117.999 271.666 117.24 271.666 cv
116.481 271.666 115.865 272.282 115.865 273.041 cv
115.865 273.799 116.481 274.416 117.24 274.416 cv
117.999 274.416 118.615 273.799 118.615 273.041 cv
ef
122 273.75 mo
122.75 273.75 li
119 273.75 mo
120 273.75 li
121 272.75 mo
121 272 li
121 275.75 mo
121 274.75 li
@
122.335 273.76 mo
122.335 273.001 121.719 272.385 120.96 272.385 cv
120.201 272.385 119.585 273.001 119.585 273.76 cv
119.585 274.519 120.201 275.135 120.96 275.135 cv
121.719 275.135 122.335 274.519 122.335 273.76 cv
ef
125.75 272.25 mo
126.5 272.25 li
122.75 272.25 mo
123.75 272.25 li
124.75 271.25 mo
124.75 270.5 li
124.75 274.25 mo
124.75 273.25 li
@
126.175 272.201 mo
126.175 271.442 125.559 270.826 124.8 270.826 cv
124.041 270.826 123.425 271.442 123.425 272.201 cv
123.425 272.959 124.041 273.576 124.8 273.576 cv
125.559 273.576 126.175 272.959 126.175 272.201 cv
ef
129.5 271.25 mo
130.5 271.25 li
126.5 271.25 mo
127.5 271.25 li
128.5 270.25 mo
128.5 269.5 li
128.5 273.25 mo
128.5 272.25 li
@
129.895 271.241 mo
129.895 270.482 129.279 269.866 128.52 269.866 cv
127.761 269.866 127.145 270.482 127.145 271.241 cv
127.145 272 127.761 272.616 128.52 272.616 cv
129.279 272.616 129.895 272 129.895 271.241 cv
ef
133.25 273 mo
134.25 273 li
130.5 273 mo
131.25 273 li
132.25 272 mo
132.25 271.25 li
132.25 275 mo
132.25 274 li
@
133.615 273.041 mo
133.615 272.282 132.999 271.666 132.24 271.666 cv
131.481 271.666 130.865 272.282 130.865 273.041 cv
130.865 273.799 131.481 274.416 132.24 274.416 cv
132.999 274.416 133.615 273.799 133.615 273.041 cv
ef
137 274.25 mo
138 274.25 li
134.25 274.25 mo
135 274.25 li
136 273.25 mo
136 272.25 li
136 276.25 mo
136 275.25 li
@
137.335 274.241 mo
137.335 273.482 136.719 272.866 135.96 272.866 cv
135.201 272.866 134.585 273.482 134.585 274.241 cv
134.585 275 135.201 275.616 135.96 275.616 cv
136.719 275.616 137.335 275 137.335 274.241 cv
ef
140.75 275 mo
141.75 275 li
138 275 mo
139 275 li
139.75 274 mo
139.75 273 li
139.75 277 mo
139.75 276 li
@
141.175 274.96 mo
141.175 274.202 140.559 273.585 139.8 273.585 cv
139.041 273.585 138.425 274.202 138.425 274.96 cv
138.425 275.719 139.041 276.335 139.8 276.335 cv
140.559 276.335 141.175 275.719 141.175 274.96 cv
ef
144.5 272.25 mo
145.5 272.25 li
141.75 272.25 mo
142.75 272.25 li
143.5 271.5 mo
143.5 270 li
143.5 274.5 mo
143.5 273.25 li
@
144.895 272.201 mo
144.895 271.442 144.279 270.826 143.52 270.826 cv
142.761 270.826 142.145 271.442 142.145 272.201 cv
142.145 272.959 142.761 273.576 143.52 273.576 cv
144.279 273.576 144.895 272.959 144.895 272.201 cv
ef
148.25 273.25 mo
149.25 273.25 li
145.5 273.25 mo
146.5 273.25 li
147.5 272.25 mo
147.5 270.75 li
147.5 275.75 mo
147.5 274.25 li
@
148.855 273.281 mo
148.855 272.522 148.239 271.906 147.48 271.906 cv
146.721 271.906 146.105 272.522 146.105 273.281 cv
146.105 274.04 146.721 274.656 147.48 274.656 cv
148.239 274.656 148.855 274.04 148.855 273.281 cv
ef
152.25 269.5 mo
153 269.5 li
149.25 269.5 mo
150.25 269.5 li
151.25 268.5 mo
151.25 266.75 li
151.25 272.25 mo
151.25 270.25 li
@
152.575 269.441 mo
152.575 268.681 151.959 268.066 151.2 268.066 cv
150.441 268.066 149.825 268.681 149.825 269.441 cv
149.825 270.2 150.441 270.816 151.2 270.816 cv
151.959 270.816 152.575 270.2 152.575 269.441 cv
ef
156 277.5 mo
156.75 277.5 li
153 277.5 mo
154 277.5 li
155 276.5 mo
155 273.25 li
155 281.5 mo
155 278.25 li
@
156.415 277.481 mo
156.415 276.721 155.799 276.106 155.04 276.106 cv
154.281 276.106 153.665 276.721 153.665 277.481 cv
153.665 278.24 154.281 278.856 155.04 278.856 cv
155.799 278.856 156.415 278.24 156.415 277.481 cv
ef
159.75 274.25 mo
160.75 274.25 li
156.75 274.25 mo
157.75 274.25 li
158.75 273.25 mo
158.75 263.75 li
158.75 284.5 mo
158.75 275 li
@
160.135 274.241 mo
160.135 273.482 159.519 272.866 158.76 272.866 cv
158.001 272.866 157.385 273.482 157.385 274.241 cv
157.385 275 158.001 275.616 158.76 275.616 cv
159.519 275.616 160.135 275 160.135 274.241 cv
ef
163.5 271.25 mo
164.5 271.25 li
160.75 271.25 mo
161.5 271.25 li
162.5 270.25 mo
162.5 265.25 li
162.5 277 mo
162.5 272 li
@
163.855 271.241 mo
163.855 270.482 163.239 269.866 162.48 269.866 cv
161.721 269.866 161.105 270.482 161.105 271.241 cv
161.105 272 161.721 272.616 162.48 272.616 cv
163.239 272.616 163.855 272 163.855 271.241 cv
ef
167.25 274 mo
168.25 274 li
164.5 274 mo
165.25 274 li
166.25 273 mo
166.25 269.75 li
166.25 278 mo
166.25 274.75 li
@
167.575 274 mo
167.575 273.242 166.959 272.625 166.2 272.625 cv
165.441 272.625 164.825 273.242 164.825 274 cv
164.825 274.759 165.441 275.375 166.2 275.375 cv
166.959 275.375 167.575 274.759 167.575 274 cv
ef
171 269.75 mo
172 269.75 li
168.25 269.75 mo
169.25 269.75 li
170 269 mo
170 266.5 li
170 273.25 mo
170 270.75 li
@
171.415 269.8 mo
171.415 269.042 170.799 268.425 170.04 268.425 cv
169.281 268.425 168.665 269.042 168.665 269.8 cv
168.665 270.559 169.281 271.175 170.04 271.175 cv
170.799 271.175 171.415 270.559 171.415 269.8 cv
ef
174.75 278 mo
175.75 278 li
172 278 mo
173 278 li
173.75 277 mo
173.75 275 li
173.75 281.25 mo
173.75 279 li
@
175.135 277.96 mo
175.135 277.202 174.519 276.585 173.76 276.585 cv
173.001 276.585 172.385 277.202 172.385 277.96 cv
172.385 278.719 173.001 279.335 173.76 279.335 cv
174.519 279.335 175.135 278.719 175.135 277.96 cv
ef
178.5 277 mo
179.5 277 li
175.75 277 mo
176.75 277 li
177.75 276 mo
177.75 273.75 li
177.75 280 mo
177.75 277.75 li
@
179.095 277 mo
179.095 276.242 178.479 275.625 177.72 275.625 cv
176.961 275.625 176.345 276.242 176.345 277 cv
176.345 277.759 176.961 278.375 177.72 278.375 cv
178.479 278.375 179.095 277.759 179.095 277 cv
ef
182.25 271.75 mo
183.25 271.75 li
179.5 271.75 mo
180.5 271.75 li
181.5 271 mo
181.5 268.5 li
181.5 275 mo
181.5 272.75 li
@
182.815 271.72 mo
182.815 270.961 182.199 270.345 181.44 270.345 cv
180.681 270.345 180.065 270.961 180.065 271.72 cv
180.065 272.479 180.681 273.095 181.44 273.095 cv
182.199 273.095 182.815 272.479 182.815 271.72 cv
ef
186.25 271.25 mo
187 271.25 li
183.25 271.25 mo
184.25 271.25 li
185.25 270.25 mo
185.25 267.5 li
185.25 274.75 mo
185.25 272 li
@
186.655 271.241 mo
186.655 270.482 186.039 269.866 185.28 269.866 cv
184.521 269.866 183.905 270.482 183.905 271.241 cv
183.905 272 184.521 272.616 185.28 272.616 cv
186.039 272.616 186.655 272 186.655 271.241 cv
ef
190 270.75 mo
190.75 270.75 li
187 270.75 mo
188 270.75 li
189 269.75 mo
189 267.25 li
189 274 mo
189 271.5 li
@
190.375 270.76 mo
190.375 270.001 189.759 269.385 189 269.385 cv
188.241 269.385 187.625 270.001 187.625 270.76 cv
187.625 271.519 188.241 272.135 189 272.135 cv
189.759 272.135 190.375 271.519 190.375 270.76 cv
ef
193.75 269.25 mo
194.75 269.25 li
190.75 269.25 mo
191.75 269.25 li
192.75 268.25 mo
192.75 266 li
192.75 272.5 mo
192.75 270 li
@
194.095 269.201 mo
194.095 268.442 193.479 267.826 192.72 267.826 cv
191.961 267.826 191.345 268.442 191.345 269.201 cv
191.345 269.959 191.961 270.576 192.72 270.576 cv
193.479 270.576 194.095 269.959 194.095 269.201 cv
ef
197.5 279 mo
198.5 279 li
194.75 279 mo
195.5 279 li
196.5 278 mo
196.5 275.75 li
196.5 282.25 mo
196.5 280 li
@
197.935 279.041 mo
197.935 278.282 197.319 277.666 196.56 277.666 cv
195.801 277.666 195.185 278.282 195.185 279.041 cv
195.185 279.799 195.801 280.416 196.56 280.416 cv
197.319 280.416 197.935 279.799 197.935 279.041 cv
ef
201.25 268 mo
202.25 268 li
198.5 268 mo
199.25 268 li
200.25 267 mo
200.25 264.25 li
200.25 271.75 mo
200.25 269 li
@
201.655 268 mo
201.655 267.242 201.039 266.625 200.28 266.625 cv
199.521 266.625 198.905 267.242 198.905 268 cv
198.905 268.759 199.521 269.375 200.28 269.375 cv
201.039 269.375 201.655 268.759 201.655 268 cv
ef
205 275 mo
206 275 li
202.25 275 mo
203.25 275 li
204 274 mo
204 271.5 li
204 278.25 mo
204 276 li
@
205.375 274.96 mo
205.375 274.202 204.759 273.585 204 273.585 cv
203.241 273.585 202.625 274.202 202.625 274.96 cv
202.625 275.719 203.241 276.335 204 276.335 cv
204.759 276.335 205.375 275.719 205.375 274.96 cv
ef
208.75 267.75 mo
209.75 267.75 li
206 267.75 mo
207 267.75 li
207.75 266.75 mo
207.75 264 li
207.75 271.5 mo
207.75 268.5 li
@
209.095 267.76 mo
209.095 267.001 208.479 266.385 207.72 266.385 cv
206.961 266.385 206.345 267.001 206.345 267.76 cv
206.345 268.519 206.961 269.135 207.72 269.135 cv
208.479 269.135 209.095 268.519 209.095 267.76 cv
ef
212.5 272 mo
213.5 272 li
209.75 272 mo
210.75 272 li
211.75 271 mo
211.75 268.5 li
211.75 275.75 mo
211.75 273 li
@
213.175 271.96 mo
213.175 271.202 212.559 270.585 211.8 270.585 cv
211.041 270.585 210.425 271.202 210.425 271.96 cv
210.425 272.719 211.041 273.335 211.8 273.335 cv
212.559 273.335 213.175 272.719 213.175 271.96 cv
ef
216.5 277.5 mo
217.25 277.5 li
213.5 277.5 mo
214.5 277.5 li
215.5 276.5 mo
215.5 274 li
215.5 281 mo
215.5 278.5 li
@
216.895 277.481 mo
216.895 276.721 216.279 276.106 215.52 276.106 cv
214.761 276.106 214.145 276.721 214.145 277.481 cv
214.145 278.24 214.761 278.856 215.52 278.856 cv
216.279 278.856 216.895 278.24 216.895 277.481 cv
ef
220.25 273.25 mo
221 273.25 li
217.25 273.25 mo
218.25 273.25 li
219.25 272.25 mo
219.25 269.75 li
219.25 276.75 mo
219.25 274 li
@
220.615 273.281 mo
220.615 272.522 219.999 271.906 219.24 271.906 cv
218.481 271.906 217.865 272.522 217.865 273.281 cv
217.865 274.04 218.481 274.656 219.24 274.656 cv
219.999 274.656 220.615 274.04 220.615 273.281 cv
ef
224 272 mo
225 272 li
221 272 mo
222 272 li
223 271 mo
223 268.5 li
223 275.5 mo
223 273 li
@
224.335 271.96 mo
224.335 271.202 223.719 270.585 222.96 270.585 cv
222.201 270.585 221.585 271.202 221.585 271.96 cv
221.585 272.719 222.201 273.335 222.96 273.335 cv
223.719 273.335 224.335 272.719 224.335 271.96 cv
ef
227.75 274 mo
228.75 274 li
225 274 mo
225.75 274 li
226.75 273 mo
226.75 270.75 li
226.75 277.5 mo
226.75 275 li
@
228.175 274 mo
228.175 273.242 227.559 272.625 226.8 272.625 cv
226.041 272.625 225.425 273.242 225.425 274 cv
225.425 274.759 226.041 275.375 226.8 275.375 cv
227.559 275.375 228.175 274.759 228.175 274 cv
ef
231.5 273 mo
232.5 273 li
228.75 273 mo
229.5 273 li
230.5 272 mo
230.5 269.75 li
230.5 276.25 mo
230.5 274 li
@
231.895 273.041 mo
231.895 272.282 231.279 271.666 230.52 271.666 cv
229.761 271.666 229.145 272.282 229.145 273.041 cv
229.145 273.799 229.761 274.416 230.52 274.416 cv
231.279 274.416 231.895 273.799 231.895 273.041 cv
ef
235.25 269.5 mo
236.25 269.5 li
232.5 269.5 mo
233.5 269.5 li
234.25 268.75 mo
234.25 263.75 li
234.25 275.5 mo
234.25 270.5 li
@
235.615 269.441 mo
235.615 268.681 234.999 268.066 234.24 268.066 cv
233.481 268.066 232.865 268.681 232.865 269.441 cv
232.865 270.2 233.481 270.816 234.24 270.816 cv
234.999 270.816 235.615 270.2 235.615 269.441 cv
ef
239 277 mo
240 277 li
236.25 277 mo
237.25 277 li
238 276 mo
238 271 li
238 283 mo
238 278 li
@
239.335 277 mo
239.335 276.242 238.719 275.625 237.96 275.625 cv
237.201 275.625 236.585 276.242 236.585 277 cv
236.585 277.759 237.201 278.375 237.96 278.375 cv
238.719 278.375 239.335 277.759 239.335 277 cv
ef
242.75 273.25 mo
243.75 273.25 li
240 273.25 mo
241 273.25 li
242 272.25 mo
242 267.75 li
242 278.75 mo
242 274.25 li
@
243.415 273.281 mo
243.415 272.522 242.799 271.906 242.04 271.906 cv
241.281 271.906 240.665 272.522 240.665 273.281 cv
240.665 274.04 241.281 274.656 242.04 274.656 cv
242.799 274.656 243.415 274.04 243.415 273.281 cv
ef
246.5 276.25 mo
247.5 276.25 li
243.75 276.25 mo
244.75 276.25 li
245.75 275.25 mo
245.75 271 li
245.75 281.25 mo
245.75 277 li
@
247.135 276.281 mo
247.135 275.522 246.519 274.906 245.76 274.906 cv
245.001 274.906 244.385 275.522 244.385 276.281 cv
244.385 277.04 245.001 277.656 245.76 277.656 cv
246.519 277.656 247.135 277.04 247.135 276.281 cv
ef
250.5 266 mo
251.25 266 li
247.5 266 mo
248.5 266 li
249.5 265.25 mo
249.5 259.75 li
249.5 272.5 mo
249.5 267 li
@
250.855 265.96 mo
250.855 265.202 250.239 264.585 249.48 264.585 cv
248.721 264.585 248.105 265.202 248.105 265.96 cv
248.105 266.719 248.721 267.335 249.48 267.335 cv
250.239 267.335 250.855 266.719 250.855 265.96 cv
ef
254.25 271.75 mo
255 271.75 li
251.25 271.75 mo
252.25 271.75 li
253.25 270.75 mo
253.25 266.25 li
253.25 277 mo
253.25 272.5 li
@
254.575 271.72 mo
254.575 270.961 253.959 270.345 253.2 270.345 cv
252.441 270.345 251.825 270.961 251.825 271.72 cv
251.825 272.479 252.441 273.095 253.2 273.095 cv
253.959 273.095 254.575 272.479 254.575 271.72 cv
ef
258 265.75 mo
259 265.75 li
255 265.75 mo
256 265.75 li
257 264.75 mo
257 259.75 li
257 271.75 mo
257 266.75 li
@
258.415 265.72 mo
258.415 264.961 257.799 264.345 257.04 264.345 cv
256.281 264.345 255.665 264.961 255.665 265.72 cv
255.665 266.479 256.281 267.095 257.04 267.095 cv
257.799 267.095 258.415 266.479 258.415 265.72 cv
ef
261.75 274 mo
262.75 274 li
259 274 mo
259.75 274 li
260.75 273 mo
260.75 268.25 li
260.75 279.75 mo
260.75 274.75 li
@
262.135 274 mo
262.135 273.242 261.519 272.625 260.76 272.625 cv
260.001 272.625 259.385 273.242 259.385 274 cv
259.385 274.759 260.001 275.375 260.76 275.375 cv
261.519 275.375 262.135 274.759 262.135 274 cv
ef
265.5 271.25 mo
266.5 271.25 li
262.75 271.25 mo
263.5 271.25 li
264.5 270.25 mo
264.5 265.75 li
264.5 276.75 mo
264.5 272.25 li
@
265.855 271.241 mo
265.855 270.482 265.239 269.866 264.48 269.866 cv
263.721 269.866 263.105 270.482 263.105 271.241 cv
263.105 272 263.721 272.616 264.48 272.616 cv
265.239 272.616 265.855 272 265.855 271.241 cv
ef
269.25 278.25 mo
270.25 278.25 li
266.5 278.25 mo
267.5 278.25 li
268.25 277.25 mo
268.25 273.25 li
268.25 283.25 mo
268.25 279.25 li
@
269.575 278.201 mo
269.575 277.442 268.959 276.826 268.2 276.826 cv
267.441 276.826 266.825 277.442 266.825 278.201 cv
266.825 278.959 267.441 279.576 268.2 279.576 cv
268.959 279.576 269.575 278.959 269.575 278.201 cv
ef
273 273 mo
274 273 li
270.25 273 mo
271.25 273 li
272.25 272.25 mo
272.25 268 li
272.25 278.25 mo
272.25 274 li
@
273.655 273.041 mo
273.655 272.282 273.039 271.666 272.28 271.666 cv
271.521 271.666 270.905 272.282 270.905 273.041 cv
270.905 273.799 271.521 274.416 272.28 274.416 cv
273.039 274.416 273.655 273.799 273.655 273.041 cv
ef
276.75 272 mo
277.75 272 li
274 272 mo
275 272 li
276 271 mo
276 266.5 li
276 277.25 mo
276 273 li
@
277.375 271.96 mo
277.375 271.202 276.759 270.585 276 270.585 cv
275.241 270.585 274.625 271.202 274.625 271.96 cv
274.625 272.719 275.241 273.335 276 273.335 cv
276.759 273.335 277.375 272.719 277.375 271.96 cv
ef
280.75 270.5 mo
281.5 270.5 li
277.75 270.5 mo
278.75 270.5 li
279.75 269.5 mo
279.75 265.25 li
279.75 275.75 mo
279.75 271.5 li
@
281.095 270.52 mo
281.095 269.761 280.479 269.145 279.72 269.145 cv
278.961 269.145 278.345 269.761 278.345 270.52 cv
278.345 271.28 278.961 271.895 279.72 271.895 cv
280.479 271.895 281.095 271.28 281.095 270.52 cv
ef
284.5 276.5 mo
285.25 276.5 li
281.5 276.5 mo
282.5 276.5 li
283.5 275.5 mo
283.5 271.75 li
283.5 281.25 mo
283.5 277.5 li
@
284.815 276.52 mo
284.815 275.761 284.199 275.145 283.44 275.145 cv
282.681 275.145 282.065 275.761 282.065 276.52 cv
282.065 277.28 282.681 277.895 283.44 277.895 cv
284.199 277.895 284.815 277.28 284.815 276.52 cv
ef
288.25 270.75 mo
289.25 270.75 li
285.25 270.75 mo
286.25 270.75 li
287.25 270 mo
287.25 266 li
287.25 275.75 mo
287.25 271.75 li
@
288.655 270.76 mo
288.655 270.001 288.039 269.385 287.28 269.385 cv
286.521 269.385 285.905 270.001 285.905 270.76 cv
285.905 271.519 286.521 272.135 287.28 272.135 cv
288.039 272.135 288.655 271.519 288.655 270.76 cv
ef
292 274.75 mo
293 274.75 li
289.25 274.75 mo
290 274.75 li
291 273.75 mo
291 270.25 li
291 279.25 mo
291 275.75 li
@
292.375 274.72 mo
292.375 273.961 291.759 273.345 291 273.345 cv
290.241 273.345 289.625 273.961 289.625 274.72 cv
289.625 275.479 290.241 276.095 291 276.095 cv
291.759 276.095 292.375 275.479 292.375 274.72 cv
ef
295.75 277.5 mo
296.75 277.5 li
293 277.5 mo
293.75 277.5 li
294.75 276.75 mo
294.75 273.5 li
294.75 281.75 mo
294.75 278.5 li
@
296.095 277.481 mo
296.095 276.721 295.479 276.106 294.72 276.106 cv
293.961 276.106 293.345 276.721 293.345 277.481 cv
293.345 278.24 293.961 278.856 294.72 278.856 cv
295.479 278.856 296.095 278.24 296.095 277.481 cv
ef
299.5 275.25 mo
300.5 275.25 li
296.75 275.25 mo
297.75 275.25 li
298.5 274.25 mo
298.5 271.25 li
298.5 279.25 mo
298.5 276.25 li
@
299.935 275.201 mo
299.935 274.442 299.319 273.826 298.56 273.826 cv
297.801 273.826 297.185 274.442 297.185 275.201 cv
297.185 275.959 297.801 276.576 298.56 276.576 cv
299.319 276.576 299.935 275.959 299.935 275.201 cv
ef
303.25 265.5 mo
304.25 265.5 li
300.5 265.5 mo
301.5 265.5 li
302.25 264.75 mo
302.25 261 li
302.25 270 mo
302.25 266.5 li
@
303.655 265.481 mo
303.655 264.721 303.039 264.106 302.28 264.106 cv
301.521 264.106 300.905 264.721 300.905 265.481 cv
300.905 266.24 301.521 266.856 302.28 266.856 cv
303.039 266.856 303.655 266.24 303.655 265.481 cv
ef
307 276 mo
308 276 li
304.25 276 mo
305.25 276 li
306.25 275 mo
306.25 272 li
306.25 279.75 mo
306.25 276.75 li
@
307.615 276.041 mo
307.615 275.282 306.999 274.666 306.24 274.666 cv
305.481 274.666 304.865 275.282 304.865 276.041 cv
304.865 276.799 305.481 277.416 306.24 277.416 cv
306.999 277.416 307.615 276.799 307.615 276.041 cv
ef
310.75 273.75 mo
311.75 273.75 li
308 273.75 mo
309 273.75 li
310 273 mo
310 266.25 li
310 281.5 mo
310 274.75 li
@
311.335 273.76 mo
311.335 273.001 310.719 272.385 309.96 272.385 cv
309.201 272.385 308.585 273.001 308.585 273.76 cv
308.585 274.519 309.201 275.135 309.96 275.135 cv
310.719 275.135 311.335 274.519 311.335 273.76 cv
ef
314.75 277 mo
315.5 277 li
311.75 277 mo
312.75 277 li
313.75 276 mo
313.75 266 li
313.75 287.75 mo
313.75 278 li
@
315.175 277 mo
315.175 276.242 314.559 275.625 313.8 275.625 cv
313.041 275.625 312.425 276.242 312.425 277 cv
312.425 277.759 313.041 278.375 313.8 278.375 cv
314.559 278.375 315.175 277.759 315.175 277 cv
ef
318.5 275.75 mo
319.25 275.75 li
315.5 275.75 mo
316.5 275.75 li
317.5 274.75 mo
317.5 272.25 li
317.5 279.25 mo
317.5 276.75 li
@
318.895 275.8 mo
318.895 275.042 318.279 274.425 317.52 274.425 cv
316.761 274.425 316.145 275.042 316.145 275.8 cv
316.145 276.559 316.761 277.175 317.52 277.175 cv
318.279 277.175 318.895 276.559 318.895 275.8 cv
ef
322.25 270.5 mo
323.25 270.5 li
319.25 270.5 mo
320.25 270.5 li
321.25 269.5 mo
321.25 266.75 li
321.25 274.25 mo
321.25 271.5 li
@
322.615 270.52 mo
322.615 269.761 321.999 269.145 321.24 269.145 cv
320.481 269.145 319.865 269.761 319.865 270.52 cv
319.865 271.28 320.481 271.895 321.24 271.895 cv
321.999 271.895 322.615 271.28 322.615 270.52 cv
ef
326 274.25 mo
327 274.25 li
323.25 274.25 mo
324 274.25 li
325 273.5 mo
325 271.25 li
325 277.5 mo
325 275.25 li
@
326.335 274.241 mo
326.335 273.482 325.719 272.866 324.96 272.866 cv
324.201 272.866 323.585 273.482 323.585 274.241 cv
323.585 275 324.201 275.616 324.96 275.616 cv
325.719 275.616 326.335 275 326.335 274.241 cv
ef
329.75 275.75 mo
330.75 275.75 li
327 275.75 mo
327.75 275.75 li
328.75 274.75 mo
328.75 273.25 li
328.75 278.25 mo
328.75 276.75 li
@
330.175 275.8 mo
330.175 275.042 329.559 274.425 328.8 274.425 cv
328.041 274.425 327.425 275.042 327.425 275.8 cv
327.425 276.559 328.041 277.175 328.8 277.175 cv
329.559 277.175 330.175 276.559 330.175 275.8 cv
ef
333.5 271.5 mo
334.5 271.5 li
330.75 271.5 mo
331.75 271.5 li
332.5 270.5 mo
332.5 268.75 li
332.5 274.25 mo
332.5 272.5 li
@
333.895 271.481 mo
333.895 270.721 333.279 270.106 332.52 270.106 cv
331.761 270.106 331.145 270.721 331.145 271.481 cv
331.145 272.24 331.761 272.856 332.52 272.856 cv
333.279 272.856 333.895 272.24 333.895 271.481 cv
ef
337.25 271.25 mo
338.25 271.25 li
334.5 271.25 mo
335.5 271.25 li
336.5 270.25 mo
336.5 268.25 li
336.5 274 mo
336.5 272 li
@
337.855 271.241 mo
337.855 270.482 337.239 269.866 336.48 269.866 cv
335.721 269.866 335.105 270.482 335.105 271.241 cv
335.105 272 335.721 272.616 336.48 272.616 cv
337.239 272.616 337.855 272 337.855 271.241 cv
ef
341 269.75 mo
342 269.75 li
338.25 269.75 mo
339.25 269.75 li
340.25 268.75 mo
340.25 267.25 li
340.25 272.5 mo
340.25 270.75 li
@
341.575 269.8 mo
341.575 269.042 340.959 268.425 340.2 268.425 cv
339.441 268.425 338.825 269.042 338.825 269.8 cv
338.825 270.559 339.441 271.175 340.2 271.175 cv
340.959 271.175 341.575 270.559 341.575 269.8 cv
ef
345 271.5 mo
345.75 271.5 li
342 271.5 mo
343 271.5 li
344 270.5 mo
344 268.75 li
344 274.25 mo
344 272.5 li
@
345.415 271.481 mo
345.415 270.721 344.799 270.106 344.04 270.106 cv
343.281 270.106 342.665 270.721 342.665 271.481 cv
342.665 272.24 343.281 272.856 344.04 272.856 cv
344.799 272.856 345.415 272.24 345.415 271.481 cv
ef
348.75 273 mo
349.5 273 li
345.75 273 mo
346.75 273 li
347.75 272 mo
347.75 270.25 li
347.75 275.5 mo
347.75 273.75 li
@
349.135 273.041 mo
349.135 272.282 348.519 271.666 347.76 271.666 cv
347.001 271.666 346.385 272.282 346.385 273.041 cv
346.385 273.799 347.001 274.416 347.76 274.416 cv
348.519 274.416 349.135 273.799 349.135 273.041 cv
ef
352.5 274.75 mo
353.5 274.75 li
349.5 274.75 mo
350.5 274.75 li
351.5 273.75 mo
351.5 272.5 li
351.5 277.25 mo
351.5 275.75 li
@
352.855 274.72 mo
352.855 273.961 352.239 273.345 351.48 273.345 cv
350.721 273.345 350.105 273.961 350.105 274.72 cv
350.105 275.479 350.721 276.095 351.48 276.095 cv
352.239 276.095 352.855 275.479 352.855 274.72 cv
ef
356.25 273.5 mo
357.25 273.5 li
353.5 273.5 mo
354.25 273.5 li
355.25 272.75 mo
355.25 271.25 li
355.25 276 mo
355.25 274.5 li
@
356.575 273.52 mo
356.575 272.761 355.959 272.145 355.2 272.145 cv
354.441 272.145 353.825 272.761 353.825 273.52 cv
353.825 274.28 354.441 274.895 355.2 274.895 cv
355.959 274.895 356.575 274.28 356.575 273.52 cv
ef
360 273.5 mo
361 273.5 li
357.25 273.5 mo
358 273.5 li
359 272.5 mo
359 271 li
359 276.25 mo
359 274.5 li
@
360.415 273.52 mo
360.415 272.761 359.799 272.145 359.04 272.145 cv
358.281 272.145 357.665 272.761 357.665 273.52 cv
357.665 274.28 358.281 274.895 359.04 274.895 cv
359.799 274.895 360.415 274.28 360.415 273.52 cv
ef
363.75 271 mo
364.75 271 li
361 271 mo
362 271 li
362.75 270 mo
362.75 268.25 li
362.75 273.75 mo
362.75 272 li
@
364.135 271 mo
364.135 270.242 363.519 269.625 362.76 269.625 cv
362.001 269.625 361.385 270.242 361.385 271 cv
361.385 271.759 362.001 272.375 362.76 272.375 cv
363.519 272.375 364.135 271.759 364.135 271 cv
ef
367.5 276 mo
368.5 276 li
364.75 276 mo
365.75 276 li
366.5 275 mo
366.5 273.25 li
366.5 278.75 mo
366.5 277 li
@
367.855 276.041 mo
367.855 275.282 367.239 274.666 366.48 274.666 cv
365.721 274.666 365.105 275.282 365.105 276.041 cv
365.105 276.799 365.721 277.416 366.48 277.416 cv
367.239 277.416 367.855 276.799 367.855 276.041 cv
ef
371.25 270.75 mo
372.25 270.75 li
368.5 270.75 mo
369.5 270.75 li
370.5 269.75 mo
370.5 268 li
370.5 273.5 mo
370.5 271.75 li
@
371.935 270.76 mo
371.935 270.001 371.319 269.385 370.56 269.385 cv
369.801 269.385 369.185 270.001 369.185 270.76 cv
369.185 271.519 369.801 272.135 370.56 272.135 cv
371.319 272.135 371.935 271.519 371.935 270.76 cv
ef
375 275.75 mo
376 275.75 li
372.25 275.75 mo
373.25 275.75 li
374.25 274.75 mo
374.25 272.5 li
374.25 279 mo
374.25 276.75 li
@
375.655 275.8 mo
375.655 275.042 375.039 274.425 374.28 274.425 cv
373.521 274.425 372.905 275.042 372.905 275.8 cv
372.905 276.559 373.521 277.175 374.28 277.175 cv
375.039 277.175 375.655 276.559 375.655 275.8 cv
ef
379 275.5 mo
379.75 275.5 li
376 275.5 mo
377 275.5 li
378 274.5 mo
378 271.75 li
378 279.25 mo
378 276.5 li
@
379.375 275.441 mo
379.375 274.681 378.759 274.066 378 274.066 cv
377.241 274.066 376.625 274.681 376.625 275.441 cv
376.625 276.2 377.241 276.816 378 276.816 cv
378.759 276.816 379.375 276.2 379.375 275.441 cv
ef
382.75 275.25 mo
383.5 275.25 li
379.75 275.25 mo
380.75 275.25 li
381.75 274.25 mo
381.75 269.5 li
381.75 281.25 mo
381.75 276.25 li
@
383.095 275.201 mo
383.095 274.442 382.479 273.826 381.72 273.826 cv
380.961 273.826 380.345 274.442 380.345 275.201 cv
380.345 275.959 380.961 276.576 381.72 276.576 cv
382.479 276.576 383.095 275.959 383.095 275.201 cv
ef
386.5 242.5 mo
387.5 242.5 li
383.5 242.5 mo
384.5 242.5 li
385.5 241.5 mo
385.5 233.5 li
385.5 271.75 mo
385.5 243.5 li
@
386.815 242.56 mo
386.815 241.801 386.199 241.185 385.44 241.185 cv
384.681 241.185 384.065 241.801 384.065 242.56 cv
384.065 243.32 384.681 243.935 385.44 243.935 cv
386.199 243.935 386.815 243.32 386.815 242.56 cv
ef
390.25 273.25 mo
391.25 273.25 li
387.5 273.25 mo
388.25 273.25 li
389.25 272.25 mo
389.25 264.75 li
389.25 281.75 mo
389.25 274.25 li
@
390.655 273.281 mo
390.655 272.522 390.039 271.906 389.28 271.906 cv
388.521 271.906 387.905 272.522 387.905 273.281 cv
387.905 274.04 388.521 274.656 389.28 274.656 cv
390.039 274.656 390.655 274.04 390.655 273.281 cv
ef
394 268 mo
395 268 li
391.25 268 mo
392 268 li
393 267 mo
393 262.5 li
393 273.5 mo
393 268.75 li
@
394.375 268 mo
394.375 267.242 393.759 266.625 393 266.625 cv
392.241 266.625 391.625 267.242 391.625 268 cv
391.625 268.759 392.241 269.375 393 269.375 cv
393.759 269.375 394.375 268.759 394.375 268 cv
ef
397.75 280.25 mo
398.75 280.25 li
395 280.25 mo
396 280.25 li
396.75 279.25 mo
396.75 276.5 li
396.75 284 mo
396.75 281.25 li
@
398.095 280.241 mo
398.095 279.482 397.479 278.866 396.72 278.866 cv
395.961 278.866 395.345 279.482 395.345 280.241 cv
395.345 281 395.961 281.616 396.72 281.616 cv
397.479 281.616 398.095 281 398.095 280.241 cv
ef
401.5 268 mo
402.5 268 li
398.75 268 mo
399.75 268 li
400.75 267.25 mo
400.75 263.75 li
400.75 272.5 mo
400.75 269 li
@
402.175 268 mo
402.175 267.242 401.559 266.625 400.8 266.625 cv
400.041 266.625 399.425 267.242 399.425 268 cv
399.425 268.759 400.041 269.375 400.8 269.375 cv
401.559 269.375 402.175 268.759 402.175 268 cv
ef
405.25 274 mo
406.25 274 li
402.5 274 mo
403.5 274 li
404.5 273 mo
404.5 270 li
404.5 278 mo
404.5 275 li
@
405.895 274 mo
405.895 273.242 405.279 272.625 404.52 272.625 cv
403.761 272.625 403.145 273.242 403.145 274 cv
403.145 274.759 403.761 275.375 404.52 275.375 cv
405.279 275.375 405.895 274.759 405.895 274 cv
ef
409.25 270.75 mo
410 270.75 li
406.25 270.75 mo
407.25 270.75 li
408.25 269.75 mo
408.25 266.75 li
408.25 275 mo
408.25 271.75 li
@
409.615 270.76 mo
409.615 270.001 408.999 269.385 408.24 269.385 cv
407.481 269.385 406.865 270.001 406.865 270.76 cv
406.865 271.519 407.481 272.135 408.24 272.135 cv
408.999 272.135 409.615 271.519 409.615 270.76 cv
ef
413 273.75 mo
413.75 273.75 li
410 273.75 mo
411 273.75 li
412 272.75 mo
412 269.75 li
412 277.75 mo
412 274.75 li
@
413.335 273.76 mo
413.335 273.001 412.719 272.385 411.96 272.385 cv
411.201 272.385 410.585 273.001 410.585 273.76 cv
410.585 274.519 411.201 275.135 411.96 275.135 cv
412.719 275.135 413.335 274.519 413.335 273.76 cv
ef
416.75 270.5 mo
417.75 270.5 li
413.75 270.5 mo
414.75 270.5 li
415.75 269.5 mo
415.75 265.5 li
415.75 275.5 mo
415.75 271.25 li
@
417.175 270.52 mo
417.175 269.761 416.559 269.145 415.8 269.145 cv
415.041 269.145 414.425 269.761 414.425 270.52 cv
414.425 271.28 415.041 271.895 415.8 271.895 cv
416.559 271.895 417.175 271.28 417.175 270.52 cv
ef
420.5 269.75 mo
421.5 269.75 li
417.75 269.75 mo
418.5 269.75 li
419.5 268.75 mo
419.5 265.25 li
419.5 274.25 mo
419.5 270.5 li
@
420.895 269.8 mo
420.895 269.042 420.279 268.425 419.52 268.425 cv
418.761 268.425 418.145 269.042 418.145 269.8 cv
418.145 270.559 418.761 271.175 419.52 271.175 cv
420.279 271.175 420.895 270.559 420.895 269.8 cv
ef
424.25 275.75 mo
425.25 275.75 li
421.5 275.75 mo
422.25 275.75 li
423.25 274.75 mo
423.25 271.5 li
423.25 279.75 mo
423.25 276.75 li
@
424.615 275.8 mo
424.615 275.042 423.999 274.425 423.24 274.425 cv
422.481 274.425 421.865 275.042 421.865 275.8 cv
421.865 276.559 422.481 277.175 423.24 277.175 cv
423.999 277.175 424.615 276.559 424.615 275.8 cv
ef
428 277.75 mo
429 277.75 li
425.25 277.75 mo
426.25 277.75 li
427 276.75 mo
427 274 li
427 281.5 mo
427 278.75 li
@
428.335 277.72 mo
428.335 276.961 427.719 276.345 426.96 276.345 cv
426.201 276.345 425.585 276.961 425.585 277.72 cv
425.585 278.479 426.201 279.095 426.96 279.095 cv
427.719 279.095 428.335 278.479 428.335 277.72 cv
ef
431.75 275.25 mo
432.75 275.25 li
429 275.25 mo
430 275.25 li
430.75 274.25 mo
430.75 271.25 li
430.75 279.25 mo
430.75 276 li
@
432.175 275.201 mo
432.175 274.442 431.559 273.826 430.8 273.826 cv
430.041 273.826 429.425 274.442 429.425 275.201 cv
429.425 275.959 430.041 276.576 430.8 276.576 cv
431.559 276.576 432.175 275.959 432.175 275.201 cv
ef
435.5 271.25 mo
436.5 271.25 li
432.75 271.25 mo
433.75 271.25 li
434.75 270.25 mo
434.75 267.25 li
434.75 275 mo
434.75 272 li
@
436.135 271.241 mo
436.135 270.482 435.519 269.866 434.76 269.866 cv
434.001 269.866 433.385 270.482 433.385 271.241 cv
433.385 272 434.001 272.616 434.76 272.616 cv
435.519 272.616 436.135 272 436.135 271.241 cv
ef
439.25 270 mo
440.25 270 li
436.5 270 mo
437.5 270 li
438.5 269.25 mo
438.5 265.75 li
438.5 274.5 mo
438.5 271 li
@
439.855 270.041 mo
439.855 269.282 439.239 268.666 438.48 268.666 cv
437.721 268.666 437.105 269.282 437.105 270.041 cv
437.105 270.799 437.721 271.416 438.48 271.416 cv
439.239 271.416 439.855 270.799 439.855 270.041 cv
ef
443.25 277.5 mo
444 277.5 li
440.25 277.5 mo
441.25 277.5 li
442.25 276.5 mo
442.25 273.5 li
442.25 281.25 mo
442.25 278.5 li
@
443.575 277.481 mo
443.575 276.721 442.959 276.106 442.2 276.106 cv
441.441 276.106 440.825 276.721 440.825 277.481 cv
440.825 278.24 441.441 278.856 442.2 278.856 cv
442.959 278.856 443.575 278.24 443.575 277.481 cv
ef
447 271.75 mo
447.75 271.75 li
444 271.75 mo
445 271.75 li
446 270.75 mo
446 267.5 li
446 275.75 mo
446 272.75 li
@
447.415 271.72 mo
447.415 270.961 446.799 270.345 446.04 270.345 cv
445.281 270.345 444.665 270.961 444.665 271.72 cv
444.665 272.479 445.281 273.095 446.04 273.095 cv
446.799 273.095 447.415 272.479 447.415 271.72 cv
ef
450.75 274.5 mo
451.75 274.5 li
447.75 274.5 mo
448.75 274.5 li
449.75 273.5 mo
449.75 270.5 li
449.75 278.5 mo
449.75 275.5 li
@
451.135 274.481 mo
451.135 273.721 450.519 273.106 449.76 273.106 cv
449.001 273.106 448.385 273.721 448.385 274.481 cv
448.385 275.24 449.001 275.856 449.76 275.856 cv
450.519 275.856 451.135 275.24 451.135 274.481 cv
ef
454.5 274.75 mo
455.5 274.75 li
451.75 274.75 mo
452.5 274.75 li
453.5 273.75 mo
453.5 270.5 li
453.5 279 mo
453.5 275.75 li
@
454.855 274.72 mo
454.855 273.961 454.239 273.345 453.48 273.345 cv
452.721 273.345 452.105 273.961 452.105 274.72 cv
452.105 275.479 452.721 276.095 453.48 276.095 cv
454.239 276.095 454.855 275.479 454.855 274.72 cv
ef
458.25 267 mo
459.25 267 li
455.5 267 mo
456.25 267 li
457.25 266 mo
457.25 261.5 li
457.25 272.5 mo
457.25 268 li
@
458.575 267.041 mo
458.575 266.282 457.959 265.666 457.2 265.666 cv
456.441 265.666 455.825 266.282 455.825 267.041 cv
455.825 267.799 456.441 268.416 457.2 268.416 cv
457.959 268.416 458.575 267.799 458.575 267.041 cv
ef
462 263 mo
463 263 li
459.25 263 mo
460.25 263 li
461 262 mo
461 244.25 li
461 281.5 mo
461 264 li
@
462.415 262.96 mo
462.415 262.202 461.799 261.585 461.04 261.585 cv
460.281 261.585 459.665 262.202 459.665 262.96 cv
459.665 263.719 460.281 264.335 461.04 264.335 cv
461.799 264.335 462.415 263.719 462.415 262.96 cv
ef
465.75 283.75 mo
466.75 283.75 li
463 283.75 mo
464 283.75 li
465 282.75 mo
465 274.25 li
465 293.25 mo
465 284.75 li
@
466.375 283.72 mo
466.375 282.961 465.759 282.345 465 282.345 cv
464.241 282.345 463.625 282.961 463.625 283.72 cv
463.625 284.479 464.241 285.095 465 285.095 cv
465.759 285.095 466.375 284.479 466.375 283.72 cv
ef
469.5 273.5 mo
470.5 273.5 li
466.75 273.5 mo
467.75 273.5 li
468.75 272.75 mo
468.75 265.5 li
468.75 281.75 mo
468.75 274.5 li
@
470.095 273.52 mo
470.095 272.761 469.479 272.145 468.72 272.145 cv
467.961 272.145 467.345 272.761 467.345 273.52 cv
467.345 274.28 467.961 274.895 468.72 274.895 cv
469.479 274.895 470.095 274.28 470.095 273.52 cv
ef
473.5 273.75 mo
474.25 273.75 li
470.5 273.75 mo
471.5 273.75 li
472.5 272.75 mo
472.5 267.25 li
472.5 280.25 mo
472.5 274.75 li
@
473.935 273.76 mo
473.935 273.001 473.319 272.385 472.56 272.385 cv
471.801 272.385 471.185 273.001 471.185 273.76 cv
471.185 274.519 471.801 275.135 472.56 275.135 cv
473.319 275.135 473.935 274.519 473.935 273.76 cv
ef
477.25 281.25 mo
478 281.25 li
474.25 281.25 mo
475.25 281.25 li
476.25 280.5 mo
476.25 274.75 li
476.25 288 mo
476.25 282.25 li
@
477.655 281.201 mo
477.655 280.442 477.039 279.826 476.28 279.826 cv
475.521 279.826 474.905 280.442 474.905 281.201 cv
474.905 281.959 475.521 282.576 476.28 282.576 cv
477.039 282.576 477.655 281.959 477.655 281.201 cv
ef
481 259.25 mo
482 259.25 li
478 259.25 mo
479 259.25 li
480 258.25 mo
480 251.5 li
480 266.75 mo
480 260 li
@
481.375 259.241 mo
481.375 258.482 480.759 257.866 480 257.866 cv
479.241 257.866 478.625 258.482 478.625 259.241 cv
478.625 260 479.241 260.616 480 260.616 cv
480.759 260.616 481.375 260 481.375 259.241 cv
ef
484.75 275.5 mo
485.75 275.5 li
482 275.5 mo
482.75 275.5 li
483.75 274.75 mo
483.75 270 li
483.75 281.25 mo
483.75 276.5 li
@
485.095 275.441 mo
485.095 274.681 484.479 274.066 483.72 274.066 cv
482.961 274.066 482.345 274.681 482.345 275.441 cv
482.345 276.2 482.961 276.816 483.72 276.816 cv
484.479 276.816 485.095 276.2 485.095 275.441 cv
ef
488.5 274.5 mo
489.5 274.5 li
485.75 274.5 mo
486.5 274.5 li
487.5 273.5 mo
487.5 268.75 li
487.5 280 mo
487.5 275.5 li
@
488.815 274.481 mo
488.815 273.721 488.199 273.106 487.44 273.106 cv
486.681 273.106 486.065 273.721 486.065 274.481 cv
486.065 275.24 486.681 275.856 487.44 275.856 cv
488.199 275.856 488.815 275.24 488.815 274.481 cv
ef
492.25 272.75 mo
493.25 272.75 li
489.5 272.75 mo
490.5 272.75 li
491.25 271.75 mo
491.25 267 li
491.25 278.25 mo
491.25 273.75 li
@
492.655 272.8 mo
492.655 272.042 492.039 271.425 491.28 271.425 cv
490.521 271.425 489.905 272.042 489.905 272.8 cv
489.905 273.559 490.521 274.175 491.28 274.175 cv
492.039 274.175 492.655 273.559 492.655 272.8 cv
ef
496 271 mo
497 271 li
493.25 271 mo
494.25 271 li
495 270 mo
495 265 li
495 277 mo
495 272 li
@
496.375 271 mo
496.375 270.242 495.759 269.625 495 269.625 cv
494.241 269.625 493.625 270.242 493.625 271 cv
493.625 271.759 494.241 272.375 495 272.375 cv
495.759 272.375 496.375 271.759 496.375 271 cv
ef
499.75 268.75 mo
500.75 268.75 li
497 268.75 mo
498 268.75 li
499 267.75 mo
499 263 li
499 274.5 mo
499 269.75 li
@
500.335 268.72 mo
500.335 267.961 499.719 267.345 498.96 267.345 cv
498.201 267.345 497.585 267.961 497.585 268.72 cv
497.585 269.479 498.201 270.095 498.96 270.095 cv
499.719 270.095 500.335 269.479 500.335 268.72 cv
ef
503.75 272.75 mo
504.5 272.75 li
500.75 272.75 mo
501.75 272.75 li
502.75 271.75 mo
502.75 267.5 li
502.75 278 mo
502.75 273.75 li
@
504.175 272.8 mo
504.175 272.042 503.559 271.425 502.8 271.425 cv
502.041 271.425 501.425 272.042 501.425 272.8 cv
501.425 273.559 502.041 274.175 502.8 274.175 cv
503.559 274.175 504.175 273.559 504.175 272.8 cv
ef
507.5 270.5 mo
508.25 270.5 li
504.5 270.5 mo
505.5 270.5 li
506.5 269.5 mo
506.5 265 li
506.5 276 mo
506.5 271.5 li
@
507.895 270.52 mo
507.895 269.761 507.279 269.145 506.52 269.145 cv
505.761 269.145 505.145 269.761 505.145 270.52 cv
505.145 271.28 505.761 271.895 506.52 271.895 cv
507.279 271.895 507.895 271.28 507.895 270.52 cv
ef
511.25 274.25 mo
512.25 274.25 li
508.25 274.25 mo
509.25 274.25 li
510.25 273.25 mo
510.25 269 li
510.25 279.75 mo
510.25 275.25 li
@
511.615 274.241 mo
511.615 273.482 510.999 272.866 510.24 272.866 cv
509.481 272.866 508.865 273.482 508.865 274.241 cv
508.865 275 509.481 275.616 510.24 275.616 cv
510.999 275.616 511.615 275 511.615 274.241 cv
ef
515 271.75 mo
516 271.75 li
512.25 271.75 mo
513 271.75 li
514 270.75 mo
514 266.25 li
514 277 mo
514 272.5 li
@
515.335 271.72 mo
515.335 270.961 514.719 270.345 513.96 270.345 cv
513.201 270.345 512.585 270.961 512.585 271.72 cv
512.585 272.479 513.201 273.095 513.96 273.095 cv
514.719 273.095 515.335 272.479 515.335 271.72 cv
ef
518.75 276 mo
519.75 276 li
516 276 mo
516.75 276 li
517.75 275.25 mo
517.75 271 li
517.75 281.25 mo
517.75 277 li
@
519.175 276.041 mo
519.175 275.282 518.559 274.666 517.8 274.666 cv
517.041 274.666 516.425 275.282 516.425 276.041 cv
516.425 276.799 517.041 277.416 517.8 277.416 cv
518.559 277.416 519.175 276.799 519.175 276.041 cv
ef
522.5 280 mo
523.5 280 li
519.75 280 mo
520.75 280 li
521.5 279 mo
521.5 275 li
521.5 285 mo
521.5 281 li
@
522.895 280 mo
522.895 279.242 522.279 278.625 521.52 278.625 cv
520.761 278.625 520.145 279.242 520.145 280 cv
520.145 280.759 520.761 281.375 521.52 281.375 cv
522.279 281.375 522.895 280.759 522.895 280 cv
ef
526.25 273.5 mo
527.25 273.5 li
523.5 273.5 mo
524.5 273.5 li
525.25 272.5 mo
525.25 268.25 li
525.25 278.75 mo
525.25 274.5 li
@
526.615 273.52 mo
526.615 272.761 525.999 272.145 525.24 272.145 cv
524.481 272.145 523.865 272.761 523.865 273.52 cv
523.865 274.28 524.481 274.895 525.24 274.895 cv
525.999 274.895 526.615 274.28 526.615 273.52 cv
ef
530 270.25 mo
531 270.25 li
527.25 270.25 mo
528.25 270.25 li
529.25 269.25 mo
529.25 264.75 li
529.25 275.75 mo
529.25 271 li
@
530.575 270.281 mo
530.575 269.522 529.959 268.906 529.2 268.906 cv
528.441 268.906 527.825 269.522 527.825 270.281 cv
527.825 271.04 528.441 271.656 529.2 271.656 cv
529.959 271.656 530.575 271.04 530.575 270.281 cv
ef
533.75 270.5 mo
534.75 270.5 li
531 270.5 mo
532 270.5 li
533 269.5 mo
533 264.5 li
533 276.25 mo
533 271.25 li
@
534.415 270.52 mo
534.415 269.761 533.799 269.145 533.04 269.145 cv
532.281 269.145 531.665 269.761 531.665 270.52 cv
531.665 271.28 532.281 271.895 533.04 271.895 cv
533.799 271.895 534.415 271.28 534.415 270.52 cv
ef
537.75 282 mo
538.5 282 li
534.75 282 mo
535.75 282 li
536.75 281 mo
536.75 269.75 li
536.75 294 mo
536.75 282.75 li
@
538.135 282.041 mo
538.135 281.282 537.519 280.666 536.76 280.666 cv
536.001 280.666 535.385 281.282 535.385 282.041 cv
535.385 282.799 536.001 283.416 536.76 283.416 cv
537.519 283.416 538.135 282.799 538.135 282.041 cv
ef
521.5 303.25 mo
521.5 304.5 li
502.75 303.25 mo
502.75 304.5 li
483.75 303.25 mo
483.75 304.5 li
465 302 mo
465 304.5 li
87 302 mo
87 304.5 li
465 302 mo
465 304.5 li
446 303.25 mo
446 304.5 li
427 303.25 mo
427 304.5 li
408.25 303.25 mo
408.25 304.5 li
389.25 302 mo
389.25 304.5 li
370.5 303.25 mo
370.5 304.5 li
351.5 303.25 mo
351.5 304.5 li
332.5 303.25 mo
332.5 304.5 li
313.75 302 mo
313.75 304.5 li
294.75 303.25 mo
294.75 304.5 li
276 303.25 mo
276 304.5 li
257 303.25 mo
257 304.5 li
238 302 mo
238 304.5 li
219.25 303.25 mo
219.25 304.5 li
200.25 303.25 mo
200.25 304.5 li
181.5 303.25 mo
181.5 304.5 li
162.5 302 mo
162.5 304.5 li
143.5 303.25 mo
143.5 304.5 li
124.75 303.25 mo
124.75 304.5 li
105.75 303.25 mo
105.75 304.5 li
87 302 mo
87 304.5 li
85 304.5 mo
538.5 304.5 li
85 304.5 mo
85 233.5 li
521.5 234.75 mo
521.5 233.5 li
502.75 234.75 mo
502.75 233.5 li
483.75 234.75 mo
483.75 233.5 li
465 236.25 mo
465 233.5 li
87 236.25 mo
87 233.5 li
465 236.25 mo
465 233.5 li
446 234.75 mo
446 233.5 li
427 234.75 mo
427 233.5 li
408.25 234.75 mo
408.25 233.5 li
389.25 236.25 mo
389.25 233.5 li
370.5 234.75 mo
370.5 233.5 li
351.5 234.75 mo
351.5 233.5 li
332.5 234.75 mo
332.5 233.5 li
313.75 236.25 mo
313.75 233.5 li
294.75 234.75 mo
294.75 233.5 li
276 234.75 mo
276 233.5 li
257 234.75 mo
257 233.5 li
238 236.25 mo
238 233.5 li
219.25 234.75 mo
219.25 233.5 li
200.25 234.75 mo
200.25 233.5 li
181.5 234.75 mo
181.5 233.5 li
162.5 236.25 mo
162.5 233.5 li
143.5 234.75 mo
143.5 233.5 li
124.75 234.75 mo
124.75 233.5 li
105.75 234.75 mo
105.75 233.5 li
87 236.25 mo
87 233.5 li
85 233.5 mo
538.5 233.5 li
92 239.25 mo
85 239.25 li
99 244.75 mo
85 244.75 li
99 301 mo
85 301 li
99 244.75 mo
85 244.75 li
92 250.5 mo
85 250.5 li
92 256 mo
85 256 li
92 261.75 mo
85 261.75 li
92 267.25 mo
85 267.25 li
99 273 mo
85 273 li
92 278.5 mo
85 278.5 li
92 284.25 mo
85 284.25 li
92 289.75 mo
85 289.75 li
92 295.5 mo
85 295.5 li
99 301 mo
85 301 li
@
531.5 239.25 mo
538.5 239.25 li
524.75 244.75 mo
538.5 244.75 li
524.75 301 mo
538.5 301 li
524.75 244.75 mo
538.5 244.75 li
531.5 250.5 mo
538.5 250.5 li
531.5 256 mo
538.5 256 li
531.5 261.75 mo
538.5 261.75 li
531.5 267.25 mo
538.5 267.25 li
524.75 273 mo
538.5 273 li
531.5 278.5 mo
538.5 278.5 li
531.5 284.25 mo
538.5 284.25 li
531.5 289.75 mo
538.5 289.75 li
531.5 295.5 mo
538.5 295.5 li
524.75 301 mo
538.5 301 li
538.5 304.5 mo
538.5 233.5 li
@
[3 3 ] 0 dsh
85 273 mo
538.5 273 li
@
0.101961 0.0901961 0.105882 rgb
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginHLSMFT+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B854D08FD42DCC2A61292225078A8A43> |-/D <1C60D8A8C9B6079F62ED4B3208AD694719329DB5FF23BCAF76D41058F7AAAFF2529AC265BA39C333293E127AD9C0A8013616ECDB9EC4B8FC987A3C84239B76F354F924D3BA3E82C9BA9779AE94CCE8ABEEADDA4A3C72DD0361E6B5DAAF6C5A39F74710AA0C4E1E> |-/F <1C60D8A8C9B7D8BE0123FD0A136BA0F480FD4287FFCF97986718886432AF2C7EB6A3F35B> |-/R <1C60D8A8C9B6079F62E4AB3BE2637412A7FA2BF1A87387986CC045CAB872B149BF5CA8B183616945E928E44276850B6ACD583D0202E4733E2391A44F4BCB738AB089D22707E0F4100F2BC6F35BD460D56FBB8A5713D4AF8760EB8EC1E1AE6F49A9B2B1066A8DA04011CCA29E2BB62A652880D30D80185E3336BD5BF6EB5D116E1FAF0793D4F86835A22CB564EFB5339E311318AE2981A0679F359C9E7A1FF6CE964A> |-/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/i <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-/o <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-systemdict /gcheck known {setglobal} if end {end} ifendHLSMFT+Helvetica /Encoding getdup 47 /slash putdup 68 /D putdup 70 /F putdup 82 /R putdup 97 /a putdup 105 /i putdup 111 /o putpop%ADOEndSubsetFont
/HLSMFT+Helvetica*1 [32{/.notdef}rp /space 14{/.notdef}rp /slash /zero /one /two /three /four /five /six /.notdef /eight 11{/.notdef}rp /D /E /F 3{/.notdef}rp /J 7{/.notdef}rp /R 14{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o 3{/.notdef}rp /s /t /.notdef /v 60{/.notdef}rp /greaterequal /.notdef /mu 74{/.notdef}rp]HLSMFT+Helvetica nfHLSMFT+Helvetica*1 [0 -18 -18 0 0 0 ]msf29.5703 327.52 mo(Ratio Data/Fit)[-12.999 -10.0107 -5.00098 -3.99902 -10.0107 -5.00098 -12.999 -10.0107 -5.00098 -10.0107 -5.00098 -10.9951 -3.99902 0 ]ysh0 0 0 rgb
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginHLSMFT+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B854D0E3687C43D46768E11610> |-systemdict /gcheck known {setglobal} if end {end} ifendHLSMFT+Helvetica /Encoding getdup 46 /period putpop%ADOEndSubsetFont
/HLSMFT+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /slash /zero /one /two /three /four /five /six /.notdef /eight 11{/.notdef}rp /D /E /F 3{/.notdef}rp /J 7{/.notdef}rp /R 14{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o 3{/.notdef}rp /s /t /.notdef /v 60{/.notdef}rp /greaterequal /.notdef /mu 74{/.notdef}rp]HLSMFT+Helvetica nfHLSMFT+Helvetica*1 [18 0 0 -18 0 0 ]msf53.4619 250.5 mo(1.5)[10.0107 5.00098 0 ]xsh53.4619 278.501 mo(1.0)[10.0107 5.00098 0 ]xsh53.4619 306.502 mo(0.5)[10.0107 5.00098 0 ]xsh%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ArialMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 48 /zero putdup 49 /one putdup 50 /two putdup 52 /four putdup 54 /six putdup 56 /eight putdup 68 /D putdup 76 /L putdup 97 /a putdup 99 /c putdup 100 /d putdup 101 /e putdup 104 /h putdup 105 /i putdup 107 /k putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 114 /r putdup 115 /s putdup 116 /t putdef/FontBBox {-665 -325 2000 1006} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings24 dict dup begin/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |-/space <1C60D8A8C9B854D00D> |-/zero <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3ABC1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A10425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E31D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC60C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A5B546505C954A88> |-/one <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92FE1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-/two <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-/four <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE023151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-/six <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF193628C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766FA7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-/eight <1C60D8A8C9B7EF320BBFC2657E9B35A6705AFBBFAA1C93BB40418E3C071A4B65F9256C97D19A81FC1920D97D74BDC10680B006C358F4A055E8EB310D17DB36B82D07BF6EC33DD32B1D55F043C26D6FDD8A81CBAE4C8F71815B896A63B1FDB98A0F7ECF9E837B10C378B26EDC5928C7E8B3799AB2CD264A8AEAC999F603BC4D805ED282A00B545281ED6B9C18B6DFE4AB08C5EA70E73FE4832D8BDE5A7EFB46CDDEE476E8817925C1CEAE85568DE92FBFB771DE6BBC3B6BB104C95219571FA1AFECF133380FB1F1E150D70FC591604EE1D20E2A6F50D40957F263D48A1A19A5D671D3A632D7FED2532ACF68D20DD9EC4B411696AEE5583B5D2BC1304A55977C35> |-/D <1C60D8A8C9B6079F6249419CF69509002AC79A016C34D114AD8C7A9DD2474EBE314027FB7E1F48C795DC0A22C11652551956D26D402DBF3954D5C55EEDC4D2E02D32263ABBF714C52111C5848A3EB8C8B527B0FF3362F75E292ACAF79767633E5CF98F1E087651E36E4721AF4CBDAC7E4D68359E9108BDBBEA294A0489068CBF65F37E7CD4C7284AEAF641D010DF> |-/L <1C60D8A8C9B7EF3224EC6E192BD0FEC2445DA87B99CF0E03A72A> |-/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177B5D88A> |-/c <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D36548FE63FC8465B1B685766E782F0> |-/d <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D9621458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C37295284C077711C162623860AACA404F650F8D516970257> |-/h <1C60D8A8C9B7EF322B3BE19FB964E037672C8A279BC86F7B9BF0C8203E131450D56E388301CEAE43162551FBE05CABF94DC3B5DDFBB4DA55D11470EBD41AC970CEE2D2EFA88D51157B4EF5536CB673423CDDB06FA774D27105AD2B1AC2DFA8> |-/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B171C8A80AB> |-/k <1C60D8A8C9B7A73DB90BDE2D32BC36BC1297E20AB90FA9E27E830D444A320C85D226D41FA634DF03A4FEE2FD90BF314563D4BF5C68> |-/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-/m <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |-/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5203A8015DD09B7CE> |-/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F518C54BB58C51D6FB6D0C8> |-/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619ADD420F549AB7C795751D32E8EE6> |-/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F4172D53C8FCAF4D28F2B78D3A4BF03> |-/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F5C42C88FB43C> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/HLSMFV+ArialMT /ArialMT findfont ct_VMDictPut/HLSMFV+ArialMT*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 11{/.notdef}rp /D 7{/.notdef}rp /L 20{/.notdef}rp /a /.notdef /c /d /e 2{/.notdef}rp /h /i /.notdef /k /l /m /n /o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]HLSMFV+ArialMT nfHLSMFV+ArialMT*1 [18 0 0 -18 0 0 ]msf353.713 346.751 mo(Likelihood Discriminant)[10.0107 3.99902 9 10.0107 3.99902 3.99902 10.0107 10.0107 10.0107 10.0107 5.00098 12.999 3.99902 9 9 5.99414 3.99902 14.9941 3.99902 10.0107 10.0107 10.0107 0 ]xsh80.6616 323.16 mo(0)sh154.5 323.16 mo(2)sh164.511 323.16 mo(0)sh228.342 323.16 mo(4)sh238.353 323.16 mo(0)sh305.171 323.16 mo(6)sh315.182 323.16 mo(0)sh380.003 323.16 mo(8)sh390.014 323.16 mo(0)sh449.83 323.16 mo(100)[10.0107 10.0107 0 ]xsh0.101961 0.0901961 0.105882 rgb
HLSMFT+Helvetica*1 [14 0 0 -14 0 0 ]msf502.837 162.605 mo( )sh478.229 146.105 mo(\263)sh485.915 146.105 mo(5 Jets)[7.78613 3.88965 7 7.78613 3.88965 0 ]xsh0 0 0 rgb
HLSMFV+ArialMT*1 [16 0 0 -16 0 0 ]msf322.087 77.0225 mo( )sh%ADOBeginSubsetFont: Helvetica-Oblique AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginHLSMFU+Helvetica-Oblique dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/L <1C60D8A8C9B7EF320B5E1B24E3E90E13A29AE67086F3BC592E06C1CB> |-systemdict /gcheck known {setglobal} if end {end} ifendHLSMFU+Helvetica-Oblique /Encoding getdup 76 /L putpop%ADOEndSubsetFont
/HLSMFU+Helvetica-Oblique*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus 30{/.notdef}rp /J /.notdef /L 24{/.notdef}rp /e 13{/.notdef}rp /s /t 139{/.notdef}rp]HLSMFU+Helvetica-Oblique nfHLSMFU+Helvetica-Oblique*1 [16 0 0 -16 0 0 ]msf166.946 69.7231 mo(L)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginHLSMFT+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7EF326C86E2C8FFDAFAAAF8B2EE45CDE12ADFFACC9341D807009D1D241E6029AF890199C52728BBB0F3ADB8945AB4753C3621AAE632A8EC4FD7F79CCD78EF> |-/equal <1C60D8A8C9B7F374C62B140C32819FDD54E0FF4342461D2A31EB8866A6299E899689> |-/P <1C60D8A8C9B64EDFE336D280AD0769103D1650D4946BC89E21A88DEC51613F3C79BEE823BD11DE4DA6DB5B89497F0D2976B3DEFC67AF28487C3BB530BC49F1D09A090BACE6D7137C10758B70768799060F36DCE81F308AA18889AF5053DE> |-/b <1C60D8A8C9B7EF3218D573119DA1C11A6AE733DE74B449EE28E952049DF20D24986476D6D2EEF32C9EA9D0ACD1DB597DCDAFEA016C8786CCA065DDF1EE5907C8756872FC8DF20AB863D540CF67DD1EF324B2790688B9E765FC9F6CEBC3C128AB52D1A4FF3B9BAF04627D17E8573C64B9FC053FD7156FF73E6BCD82B1A402A01ECDBBEC20265AC1F5281625> |-/d <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-/f <1C60D8A8C9B854D0E1194BB75B674577C40C65C9DA80CF489EB158487251DB3D0D4CE62FE4588AAD1DAC98153B63C50CB7167E75DAE3557295D61A22E58ED82D181423A4BEB279AE837EE035530BF30960CB0B47037A994CC5880A6489EE> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-/m <1C60D8A8C9B6B41C87955CDC3639140F8FA33C70CE271539122DB89AC63FD596C1AE79761050C7D5317C1A1DE3923CB96B736E4977F68D67BD6922E1964FE05D51AB32C479ED8218C444609251096F1947B0C4960920FFF6AE70BA15738BF1106729A839E228137A715EA1C031F63BED533B4300B92AAA320484B5BAB342D2B48F6B68F518B0142254C333F20247ED0EA3DC72FEE0> |-/r <1C60D8A8C9B81F2C037408F8BF0E381AE4C9649BA754678B3C9CB9B6F5985C2C3DD85532C988309B457CF86E09A953B63981C0C686B55A9B6F57C7F684C3CFA5497AE68C179CE338521D1494441800> |-/y <1C60D8A8C9B7A73DB9AA12572CE44B37D0759EC5FA4258DA87660F3841304B61A1A911D1876BE6D5484230C2A9DECADC4A3BB259186F9713382F53071656420086C18502612AEB2A0E39781AC31868BC5BE3AB2872591151CD2F994021F04AB4E3C05AD2A97CE0F737B6F0C53FBA3CB18D70D123> |-/integral <1C60D8A8C9B8581AD7053A5C62E796A11AB1A0A9169DB330402E85B78678300BE0B48AC5324312234DCAB1F708AEAFDE79A5E70FAD3BAF003E0B9B756A21FF1E682C9B05E4383A92E74A5448DCA77175930274B184064009C4660D7143CE74EE1BBCDBAA12410980F21676C243B40E88CEDE3F20C7BF4694833951494E103666F4AA3C87D2CADE5443AEE11613> |-/endash <1C60D8A8C9B7EF32550476FCA04687399937570ECAEB> |-systemdict /gcheck known {setglobal} if end {end} ifendHLSMFT+Helvetica /Encoding getdup 55 /seven putdup 61 /equal putdup 80 /P putdup 98 /b putdup 100 /d putdup 102 /f putdup 108 /l putdup 109 /m putdup 114 /r putdup 121 /y putdup 186 /integral putdup 208 /endash putpop%ADOEndSubsetFont
/HLSMFT+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /slash /zero /one /two /three /four /five /six /seven /eight 4{/.notdef}rp /equal 6{/.notdef}rp /D /E /F 3{/.notdef}rp /J 5{/.notdef}rp /P /.notdef /R 14{/.notdef}rp /a /b /.notdef /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /.notdef /v 2{/.notdef}rp /y 57{/.notdef}rp /greaterequal /.notdef /mu 4{/.notdef}rp /integral 21{/.notdef}rp /endash 47{/.notdef}rp]HLSMFT+Helvetica nfHLSMFT+Helvetica*1 [16 0 0 -16 0 0 ]msf175.845 69.7231 mo( d)[4.44531 0 ]xshHLSMFU+Helvetica-Oblique*1 [16 0 0 -16 0 0 ]msf189.188 69.7231 mo(t)shHLSMFT+Helvetica*1 [16 0 0 -16 0 0 ]msf193.634 69.7231 mo( = 0.70 fb)[4.44531 9.34375 4.44531 8.89844 4.44531 8.89844 8.89844 4.44531 4.44531 0 ]xshHLSMFT+Helvetica*1 [9.328 0 0 -9.328 0 0 ]msf260.799 64.3945 mo(\3201)[5.18799 0 ]xshHLSMFT+Helvetica*1 [21 0 0 -21 0 0 ]msf161.917 69.7227 mo(\272)sh%ADOBeginSubsetFont: Helvetica-BoldOblique Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica-BoldOblique def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 65 /A putdup 76 /L putdup 83 /S putdup 84 /T putdef/FontBBox {-1001 -481 1589 1175} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings6 dict dup begin/.notdef <1C60D8A8C9B6079F6C9C5B6880C89408E8AD9743F80D45518E28653C59C8B376144C36> |-/space <1C60D8A8C9B854D00D> |-/A <1C60D8A8C9B6079F6DFE15C6266A251FB5B8D8D5584AE3EEC39DFF581EDC95BF34DD7AAC3E9CB06759877C409531EAE9543B4B99> |-/L <1C60D8A8C9B7D8BE36E7EBDDF0070778C0279B5266B6F2A3E73221BA4CCF> |-/S <1C60D8A8C9B64EDFE0426F2D6A8EF3ECBFF0DE703EFE100555C0A6BB22967992DC05FE9CAFB18C53F85A24A779191D61FB4CC3D83DD6492E153A894B0F1D5D2E0DA400C1F899664912D60869A496B24CFB2CA43F7171FC9E5E96D7CDCF00F32BA7BCF972BCE690B9B6E784EF65E516CF5255704F64C647782959A725F24FDC36839BC9139942CF6A9869D73E111FAF7C8B4086FA8973E15C6ACB30C1E219DF9927737CE3D640C61D6014B15F834FE7B072FBC83C1AEA3A57556EE347159055CF> |-/T <1C60D8A8C9B7D8BE1619527895B6DF8AA56FDB931B3588C60A84BF0F2A97EAFE1487A42B62FF340D2CF5> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/HLSMFW+Helvetica-BoldOblique /Helvetica-BoldOblique findfont ct_VMDictPut/HLSMFW+Helvetica-BoldOblique*1 [32{/.notdef}rp /space 32{/.notdef}rp /A 10{/.notdef}rp /L 6{/.notdef}rp /S /T 171{/.notdef}rp]HLSMFW+Helvetica-BoldOblique nfHLSMFW+Helvetica-BoldOblique*1 [16 0 0 -16 0 0 ]msf158.013 46.7227 mo(A)sh168.4 46.7227 mo(TLAS  )[9.77344 9.77344 11.5547 10.6719 4.44531 0 ]xshHLSMFT+Helvetica*1 [16 0 0 -16 0 0 ]msf219.046 46.7227 mo(Preliminary  )[10.6719 5.32813 8.89844 3.55469 3.55469 13.3281 3.55469 8.89844 8.89893 5.32813 8 4.44531 0 ]xsh321.447 65.1802 mo
332.447 65.1802 li
332.447 54.1802 li
321.447 54.1802 li
321.447 65.1802 li
cp
1 0 0 rgb
f
1 lw
[] 0 dsh
321.447 65.1802 mo
332.447 65.1802 li
332.447 54.1802 li
321.447 54.1802 li
321.447 65.1802 li
cp
0 0 0 rgb
@
HLSMFV+ArialMT*1 [16 0 0 -16 0 0 ]msf340.757 65.1812 mo(tt)[4.44531 0 ]xsh321.447 82.209 mo
332.447 82.209 li
332.447 71.2109 li
321.447 71.2109 li
321.447 82.209 li
cp
1 0.745098 0 rgb
f
321.447 82.209 mo
332.447 82.209 li
332.447 71.2109 li
321.447 71.2109 li
321.447 82.209 li
cp
0 0 0 rgb
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginHLSMFV+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/plus <1C60D8A8C9B7F3748941D4B1C211C787F1DCE1076406E139A12F470B397B613EE7D27104427D3AF38200F99E7A> |-/J <1C60D8A8C9B7A73D9658D627ED627C91284E113B36EE4477BE063DB79C014B4C1304B38BFA4196C7B3993D5118026189127416D2C23E3BA1516C5E2D259EE2D27698DAD25B31EA788FD5CFA3D890F5093AD3EE1D75864143B6DAD8719C69> |-/W <1C60D8A8C9B5D6EF420A3AC101C9354A948DB23A64166EB3D55EEB13F0DE3A88231C2286900994060E46C1096C7ABFBA281AAEB86123AF398A1FE8A551414253B8F3844EF59084BCE1B4D5AF071FD672A0C8C15E821130EADB430FA7E525278C31C213B6FF1A25> |-systemdict /gcheck known {setglobal} if end {end} ifendHLSMFV+ArialMT /Encoding getdup 43 /plus putdup 74 /J putdup 87 /W putpop%ADOEndSubsetFont
/HLSMFV+ArialMT*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus 4{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 11{/.notdef}rp /D 5{/.notdef}rp /J /.notdef /L 10{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c /d /e 2{/.notdef}rp /h /i /.notdef /k /l /m /n /o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]HLSMFV+ArialMT nfHLSMFV+ArialMT*1 [16 0 0 -16 0 0 ]msf340.758 82.209 mo(W+Jets)[15.1016 9.34375 8 8.89844 4.44531 0 ]xsh320.212 41.1143 mo
324.772 41.1143 li
327.62 41.1143 mo
332.618 41.1143 li
@
324.996 41.1143 mo
324.996 39.2139 327.844 39.2139 327.844 41.1143 cv
327.844 43.0132 324.996 43.0132 324.996 41.1143 cv
f
4 lw
324.996 41.1143 mo
324.996 39.2139 327.844 39.2139 327.844 41.1143 cv
327.844 43.0132 324.996 43.0132 324.996 41.1143 cv
cp
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginHLSMFV+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/comma <1C60D8A8C9B854D0F42C7AF5C4668C35A6B5F5176B9FC6F495643D4000A6D27DE0DDA4D01F0D89D11ABC5445CF8C34A3A1CF> |-/seven <1C60D8A8C9B7EF32245185D6A5516F33DB78352C4AC565B22360E031CB3B71A1D11654727B1436E7590FC689EA5F1279CA132C8529B81FF9BDC95FE0F55546101EE3> |-/equal <1C60D8A8C9B7F374869C4D81D9B128A787F701C3A1164A793E363981F7468DA1474C45> |-/T <1C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D3927> |-/V <1C60D8A8C9B64EDFFB759009DDECF50F0319B844741E3CEB2C0ABDDB89E7563FC0955B866D61D9CC736D3C346A5623E20C1E4D> |-/radical <1C60D8A8C9B79676FBA168D9FD2DDF20F624BD6A6FB83178786A3142CBD611AC42EFFE1338E3B3FFCE4A> |-systemdict /gcheck known {setglobal} if end {end} ifendHLSMFV+ArialMT /Encoding getdup 44 /comma putdup 55 /seven putdup 61 /equal putdup 84 /T putdup 86 /V putdup 195 /radical putpop%ADOEndSubsetFont
/HLSMFV+ArialMT*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma 3{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six /seven /eight 4{/.notdef}rp /equal 6{/.notdef}rp /D 5{/.notdef}rp /J /.notdef /L 7{/.notdef}rp /T /.notdef /V /W 9{/.notdef}rp /a /.notdef /c /d /e 2{/.notdef}rp /h /i /.notdef /k /l /m /n /o 2{/.notdef}rp /r /s /t 78{/.notdef}rp /radical 60{/.notdef}rp]HLSMFV+ArialMT nfHLSMFV+ArialMT*1 [16 0 0 -16 0 0 ]msf340.758 46.7231 mo(Data 2011, )[11.5547 8.89844 4.44531 8.89844 4.44531 8.89844 8.89844 8.89844 8.89844 4.44531 0 ]xsh423.478 46.7231 mo(\303)sh%ADOBeginSubsetFont: Arial-ItalicMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Arial-ItalicMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 115 /s putdef/FontBBox {-517 -325 1379 998} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |-/s <1C60D8A8C9B7A73DBF501F5488FDBD4A20EF6D7B0506483C2B880D9827035485646843C9D459AE9CB8D1BBD974889E6F89F2D43D89F327D894D864B1BFA5AB890D16098D93759AFB3CA432904A4865393C68EE760D6EBDF0A6F29C5D9765B45C6CB22C66996E91DD921F7292E259ABFB6A982338F25D286D28A8990FBB123263F9C6EECFEC70EFF44E9EDC10ED0720F2476C4461C9BB9EE4E441F51AC84A1D9D4FF1983E0181C07DB489AADBC8B35A6747E61D103ACF8A6C8CBA20FE14406BA91F13E4D8F3CBD8B7409F7F58C0A1B26D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/HLSMFX+Arial-ItalicMT /Arial-ItalicMT findfont ct_VMDictPut/HLSMFX+Arial-ItalicMT*1 [115{/.notdef}rp /s 140{/.notdef}rp]HLSMFX+Arial-ItalicMT nfHLSMFX+Arial-ItalicMT*1 [16 0 0 -16 0 0 ]msf432.266 46.7231 mo(s)shHLSMFV+ArialMT*1 [16 0 0 -16 0 0 ]msf440.266 46.7231 mo( = 7 TeV)[4.44531 9.34375 4.44531 8.89844 4.44531 9.77344 8.89844 0 ]xsh1 lw
4 ml
344.92 52.4531 mo
349.92 52.4531 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginHLSMFV+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/E <1C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411B66E9361DDE78FC667AB91EF9824> |-/O <1C60D8A8C9B6FF86E621E1FAD9CC02A23AF5AAF7451327A9277DAE8170AAC8E603A02E3EEFF561DDADE9FD6F6F16B77EE709DD797791A73F1C532C58482F9C51E1EAE7EA6E4D820E6AA1026E7BE345B1C97C5D9EBBEF4840C4188F96B5380E7625249BBAD172254404F6F1CB17CABA1F131B17AAAB56C5D3B94E3AC2C2E9F0A0D079C435D0249DF6C47E18FCF00E7FFE3C519BB35DF797EF47286BDCA762289BE1> |-systemdict /gcheck known {setglobal} if end {end} ifendHLSMFV+ArialMT /Encoding getdup 69 /E putdup 79 /O putpop%ADOEndSubsetFont
/HLSMFV+ArialMT*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma 3{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six /seven /eight 4{/.notdef}rp /equal 6{/.notdef}rp /D /E 4{/.notdef}rp /J /.notdef /L 2{/.notdef}rp /O 4{/.notdef}rp /T /.notdef /V /W 9{/.notdef}rp /a /.notdef /c /d /e 2{/.notdef}rp /h /i /.notdef /k /l /m /n /o 2{/.notdef}rp /r /s /t 78{/.notdef}rp /radical 60{/.notdef}rp]HLSMFV+ArialMT nfHLSMFV+ArialMT*1 [16 0 0 -16 0 0 ]msf429.302 82.209 mo(Other EW)[12.4453 4.44531 8.89844 8.89844 5.32813 4.44531 10.6719 0 ]xsh410.306 82.209 mo
421.306 82.209 li
421.306 71.2109 li
410.306 71.2109 li
410.306 82.209 li
cp
0 0.454902 1 rgb
f
10 ml
410.306 82.209 mo
421.306 82.209 li
421.306 71.2109 li
410.306 71.2109 li
410.306 82.209 li
cp
0 0 0 rgb
@
410.306 65.1802 mo
421.306 65.1802 li
421.306 54.1831 li
410.306 54.1831 li
410.306 65.1802 li
cp
0.4 0 0.4 rgb
f
410.306 65.1802 mo
421.306 65.1802 li
421.306 54.1831 li
410.306 54.1831 li
410.306 65.1802 li
cp
0 0 0 rgb
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginHLSMFV+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B6079F6D1C46AC2732DFBDC9143C94793529C1940296210AAD6EE09C39CFC4DAB7C5F3BA33C9E10838E0BC6FC9318A4E57F309EE20438B434C69AE73A499211EBA75E22A57C1581D93869428818DC700A28C027571D7047CDFA8B017AACDE96DE4B2579EFD2C826A30F6EBDDC52701A22CDD669ADC60B66F32261A1F55EDEF9802FD4511E0EF130772EDFD708A4113A1EDB1E717E0FA7D314851DE59> |-/M <1C60D8A8C9B6B41CBB4B6664BFFC865F56E6FEAFA79E7B90883C1C68AFB379AC174B0F8DCC9294E2C26BD06BBA9FD3867F8768651EF4BA798B4F538FCE8F80AF5A83421F8F> |-/Q <1C60D8A8C9B6FF86FB95E417277EAA9E6222336C4FA400144318C78383A4878AAD7E15CFFEF53A35C8B0DEA160D881360872190186E2C56DAFA44D84884E8D6FB90DBDC8D54D6362F6171B448FF70986707BF5F4B096A9C2A4BEDFBF6A1EDD5DADC741FF9C3CBD743AA1E216B2493243CFEC25A2EF5D712CB6DC5F1BBF19DDA253CF67036E6AFB5A540E4EC3644D2F967525105CFDF3C5BC43534FC725B4030E5B814914D5285095B3636642AF5F2E3B2DDA9EDF47166FC9AB46B169F4E8C022F3D1F22A42E3> |-/j <1C60D8A8C9B88C08722B6B7B5CD1A2B04086BD4CA31C9A77963330C6888FE34000E928F0E47CDB49ED0B914BCC4EA3CAB2F844F0D85575AAEE3259E5CA035CD978593D85E63B5FE715A5DFC126E8FF> |-/u <1C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F517D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA8F992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE38793990906DA8D7F8ACFF6D70790F06B02> |-systemdict /gcheck known {setglobal} if end {end} ifendHLSMFV+ArialMT /Encoding getdup 67 /C putdup 77 /M putdup 81 /Q putdup 106 /j putdup 117 /u putpop%ADOEndSubsetFont
/HLSMFV+ArialMT*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma 3{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six /seven /eight 4{/.notdef}rp /equal 5{/.notdef}rp /C /D /E 4{/.notdef}rp /J /.notdef /L /M /.notdef /O /.notdef /Q 2{/.notdef}rp /T /.notdef /V /W 9{/.notdef}rp /a /.notdef /c /d /e 2{/.notdef}rp /h /i /j /k /l /m /n /o 2{/.notdef}rp /r /s /t /u 77{/.notdef}rp /radical 60{/.notdef}rp]HLSMFV+ArialMT nfHLSMFV+ArialMT*1 [16 0 0 -16 0 0 ]msf429.303 65.1816 mo(QCD Multijet)[12.4453 11.5547 11.5547 4.44531 13.3281 8.89844 3.55469 4.44531 3.55469 3.55469 8.89844 0 ]xsh0.75 lw
432.162 32.375 mo
442.133 32.375 li
@
1.5 lw
[6 6 ] 0 dsh
311.335 232.75 mo
311.335 102 li
@
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/HLSMFT+Helvetica*1 uf/HLSMFT+Helvetica uf/Helvetica uf/HLSMFU+Helvetica-Oblique*1 uf/HLSMFU+Helvetica-Oblique uf/Helvetica-Oblique uf/HLSMFW+Helvetica-BoldOblique*1 uf/HLSMFW+Helvetica-BoldOblique uf/Helvetica-BoldOblique uf/HLSMFX+Arial-ItalicMT*1 uf/HLSMFX+Arial-ItalicMT uf/Arial-ItalicMT uf/HLSMFV+ArialMT*1 uf/HLSMFV+ArialMT uf/ArialMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Heike Boos) ()%%Title: (profile_fit_prel.eps)%%CreationDate: 8/20/11 5:18 PM%AI9_DataStream%Gb!Q;q0qV?cKKZWh>u?Y6CEuj;q`u23Y0S_A-ab=;]5;^lhkaprCV7'M'Rbk\bgd3>/*Bp*6XKk=ctAklR`NXK6DJ.;&K;'EH?"@%lAd6TmV%K%H+hbr[5>-=:`?cSI;(CK*"Q9%A5XE@L>tkF?2W.g\Bc'8n>,#lOF"V!^YFNLU\1a772uf7:c(E)2L9"YGS$P"Tqc=s%f58X=W`&:=C"dD]oY3^/c!L-W-5l4eL:t%lKL)W_7\a9kCB)<tk)\M?@^d_A_f<FGFf3+shW'=!_Q;L-T?m@.Bq01`U+s;$I3[7Q%R/iY*@X(Uc*t;De=^/H?H:dM!5!5FpKB*u^Y"@(kF9^ZSoY7OC[%tbA_>h6IC[%TUR>r68mVq[TV\Rg[ri"G98u*\c<&>S=$QP5"%lEsk0O<CB/mLZ!a6&.td#u5rJp:9fs=8Gu&W6o9O@u>_a4KWc+%1!OeM5TRnlWI"%h[I(eIK=A`.Iq,h[aZOhaR>#"#,4Sli71V,%T\^N885ip<@;gmVA_\_0IK[SPD>]O9'=kRDgVl]%e;(N/KqVJo*D>m>_9L"u#rg2LiAs9):Ia0^\."0@^uX))qtN(M2@8HYKFYL/%G<`Zk9IRom6UEn,];@@O[ags@$LSW,+H6o01k0657p?9*:T)W+DDeXjnP$'?j2,Fd$D@A)gbWVcO]k)oSVjt/[,(lVnt=L"2W-20%jTOe)^YOT.;rec*r^EUWR7Q7K3fTcN,.eeRicd5::SUd7)NE1CU53a:[h8uuPt9i:6ip"-&m-WG&4KW43fR_!Be5I&J,"1JNMY';%/;71#M5?(u/6+7\S&HR8.2K1I.,n0&9I0+E;8hXl8Dg*mVX:5ITb-HeI$6^S7U9?u`);C)IUXbEM.'#K+\)6`AIp*a7(aB`kduWa%Ic<$!#X>R@8gddu@YCA02h'dm`!KjMC/Xh/$Ltu//0g$sO7a$lSC3d&O\uKMl'iB.g3VIrg,99Y>L*)$Q(\/]']On?=;1'fMD]fO%HORZo']R/ZQr8XPMtl6Yr^,sbs5PJD3SqSJ/;<lX-ga@F-'YPH5!idBJ1YF3_to>#O&?uk;7\Kn:s<Y>Z/r>u'J?MUobT3rra?\_%Nc?CTLMp+mku5M25HtpaDo@^bKYEA:=9c$OGo:6NfqFY*&1D`Y*bN(%\.)Y;3JI#*P7,s>PjYo$Pj/r8V&Qk5oa&Hp[N/!qkd5O0%5(-3+d?[_QUteZ@SC3/C+Hh5=IoU3\n$p#(>#i[RFAdCVE]<$*Q2g>jQ%ta&X1c`UXS)b)Lf"fB<iNphb1b%sdX(/I4O9.>peA.?%0E2[gqF(:Zs'd_Z>Q(H!>i'^qhGM&P^LWN,<kmn6</UZMV&8Q`r%F\?:Xj=ZY>Cn,eSk<1jXlb]*VGp$/!oL=opbs@P^cZ)A)H5m%m8s.RrM&2"T+ENmiaPJIHBqGT;9Yr$jAQc_4'@09;DO))\QH-O(\4Q8O=\5SP09=/YQUV)_V4KsZ6[f[8\E'SiW=NAYI/j6b/m_d%j>,WXgW$usDsLgnHODMuaPU^->$aHT+O5dY4p<7UUjO'KP%Q(l,?-3#4T1!f&PE2UJ9G1hd[&BcTN!;8GZp!U:A[=u%5$c&qE'(.%.95Ajb1e4P3J>9=L0s#$\0*%gCPo3kH"aUIbbp+>@]&cHl!\CRS7%BW(!K=8A(\7&2CjQ$'>>'<]g7Ol4)/O[$mCILVpn3g5fs_^%d5k:MacocoKJuhgl\)'q7+`1YqMj.dI5-HNi&1C!$ji.8eqWouWkih8Q6pI7jT/T'0Z>tA.qOT7)5@naHAO2kBcedoQ"Cl>IaCsn%nYWN>mH>5;8r=XcAR+@g;Q%r$KUkoD?W;3nqM.82dS4.IfT`8?:8PoRm6g_6/^Lq^nfR6Fg2b>)XM"D<=tcRjMW0;;!riS95TMU=%nPSkCgtV>#j*[,L.Psb=L#Ohp2jBUacAJkB$NaW\`&+j689g*+9A0q--Bkh(9In2K'H%]C8YK*^0iMYSBaj]!EXK1Xb\EeK$h@St%SAaV\qaBg%L1de[gF1NMQLAp%/>e<D]Ze!`rQ1kN$U!H0=pO-mPS?Oki+OM4!<1DEQ=3F2*H['1:Wc0O`K9X/m9M2A9MT;+<M$$_%($u7pk.qj+6+a,i,W/M'j^STD[HdP)W(H<MI*V"hZGkPB1kShqWdjXMm'1drcc6Bt6Ct*dOi[rIXbm:o<e"'#N)M-")D,:T"e"Oa%WDiICV7EUUBe'jr6jdXj&2j#(F$,I3d'm7DM&]-59okhR$+W);cc>X'Y#TISA#N)%PesJADpo;)*LZJ-14bs\(;sZC9)0I\K:ECJ%>.RCCU0<TB5h]_*DG5*qQpNO)8R5XR9DOQe1;5")@[uC$O%N*oP0%s2.tV>t/uOD&OnKU",+jNMA]?rSJS?Hrj(LN;AI_nhPuBE;%"8&le\]LMd'V1r,*@O?dKg`J=_#FBVqQ1U"gV\=]Bg."/;ksS5Cc303'i$2nof;,+H+`7fUp#>L!-aQE9K^YTN?^I&Lrg-DGnO>=%D<>N48[%:8c(prn$u`LeQsM$0NKQJeh^<XV,/H@DOZo@r(bo2,FK56KQ7)/Yg7.eS&_i^!fEd<Jp2"!:"aQ*XW3fk+9:)>/lD90b%G+tV9jf0?A$WM3+QsqU<3$g'KS&jl(@jl2(>%Djo3D008%'cM1<W,VGMO"LrG#1P(f@r'!:u5a2a\#JaFEr.,6W6`qQS\NdN$:Mu%THG,e#rJc,5jpE51-IH0#Ep:aEnX-35EAcE1o"m3agt7/<Ak2Y-U8qXf)BCEi\](6<Fk`R\''YPN3R@5qjV=*fohB[H(*DN^ko@/%!t&us'nFma%8po"1ho6HX\f28QW<off($%XLukmjQ/gPAU9(e`;-M?W]H[61j\IQAFHR-f>U,5#bF+kGZoWcSdIb,tU(NCYR^!R/%")4)5dCTRAY/h$cXgQWBOWgmu/CgH:1JsDU_Q!#Gd74A9Hm-f)a3d/T.n6WGb)]LkY\)rR\MTpL'fb\O;("f3*gCe+.7`9-ege@B%18`c0]Ll7C:,_#d<FfsE<+@b[os4*T93F0Y0agT*6`jTs2N\'c-DXQHdW85gAA-!mS(T=U+#E4hD$dViQjce.bhH$<OK,o-DIGX6%R&RYke*@:5R#Il,OU=S'R&h<;Wb%me;"[W-Ta"9Rcq_\=l\(V^i+%&'/kU]>:k4uP055)pAK#n;B`On?iL_;!=uFIV0C(bi-^2#b%;HCdA7j!JB^,4;8PZ+OB5p<-p`62,(;S>B^'B;47WPt?!-G`e<fI8jdo\'Ae$Q/iaGaOL8Doe.ihs%M^/@L.hJP%Td1=aTq8ZtXC%pa"!m$l*pY$u)ild^elmRE2EaJ1VSFmq__2D-nLYT[sA2@ks(BO\Ua4Z%/9Dp"m*^C"?<%+7e[[>^sq62';/TZ*ZbFV<e-oHeVeO%k._K1L,4-P<%FtLZ.bp3Nr<tN#)FM3k_hLsAZCm#rM;tUFAeAXdXZ;0XH@!IoE^TdeCnSk1J>f`YCSWrS<i<]+(>.5*RbQ\fOc6p%C"e22!]?UjG5r_O2c3$t"EYq\GVYuH/K-\>Uo.)IQU0U=.fQ_k0h@u(OiF?l`U_sC`FB5HnRD$!>X&Rml+9>rV9=Q0NX=nciM_J1%_<sdR7'=(fSC:0S?_XW87#d8)O1$M:2gWj4(pQl0AHI+K0l#eb0`nAr1f,ZU<\GJmY^_J\*@74*R)qP@]ZI["h=HLm)J*bn<c0W&%KL5PZ%?r<g\!&PR7Po?:n6VPe]g_9H2.AoL=A'>+?P7$S/5WG\.jAULlrX:e.e=R:?^Sr^N*lW;bDTq8(Sr&3+co.V-/)_U.mVu-%]gqG&KIH/E,1V95B$pZ@O5?C/Ujr#R8lsH]b\"m2Mm4Jb)#PJr5BrZ(,tMsJG>X1Fd35BNM_auD6:g9NXXYf$O/R;E,5.j8"AJlK%.I/k6L"^udo0KX5>]U8E(47J#Ld/jBU%&0"o4?sXR$[bZ=\?'+2*rmP(\/Z8'DRoS_+54i,)3$TP==t-'#Y#-'0K4G,1M2NiYA2b%^ak9Od[eH3=B)7:nnp"M^m<"Y"]ZX&RA](.7V--0,4_p@'.A2eL8"j.:uJs9f5eMHc$U?cH4VTI#pIV,+-[H730*tT$UEKVnT5*c%FV5nlWPCkqd'bdr`Y?t)M,^QA\HDX.\Us<2n2t__3[t,q9T($q\0RDm^SJZ?QV(dkVt8:HV)8@g5f4>re4'Tm;G>u)]$CM;D5N[a%B:8t]L_M(t^QagP`oB2>=H`^":.:./HErWkiubNOb*9f,?o%foTiU<+.NIEE=<X;ed0AIE3VJ[D]T`D7Usj<I)8dBQ4C4^f:W@r%%7B56:`$>e?+cj9i4G-MPK;A`l6)gjUTqIIN6d%p$*9D9l-$Ba"9#@7=anLs;-]-aM%f(jF@umGIk\_7_]Yr7[ff+`iV$)bWE!QdM%ZeA\k/R/<mA0E+X4shu3'V5@>kRluHXI$tr_)L<:'gO:kh^%>%_nf[>:ZRdC-hFSSmime!(4Z.chG-!.anAnAp8HD!HE5ra*qMiq%C8\<#S(bs>r#_mmV2#&@WeE$OK6">!1IK)i'gbggO@q="=dmPfONT/Z60^DKFZ'[L@:L:@''Ar2,B$nFcYMO5//h7+a.kE?1sm+>%5K`HC880Lg<IG?7`f<)[eNBWjbf8dFT1E0QNu*@QPVFmpTc/E\W5V?ZHuT=."sKjI*9nXAVji$@D5)3R#"i-sWoA`q<QZa:762&q%FEC*J]!`(enVl^H8k[S2AoT4V^*M_S;kqCefI)SZd>3Y%$VCel=Tl,jAWBTL1YQklp.:fH<9"@3AN!>%V`\1^7O;cU='nQ]1ING"%;+=-7.;_)^(6U4Dbi6J(CkXoSWQlhEH]?]^'UE?+,Gi)OcHkTNC4qYf("Lt@Ad,,R6(tMRM)m^ghe&_H5)eah'pssB2%_!smoc`I%;:ufT:cV"-&VX<>gP4CIP!QhA#.VhQPig1B;Z#.?RhQ00r2HJu4/cI'o:p$lO`:rmE^g(,R?LT%/\E$(U(VcHU;]Ha:g$`9e9A8U%3jaCD\lH9cqa?:N$q3D,&nfT8=jhDuiTaNSrMS0LoA;+E[()pbpEJ75D4i[+C2_5$dYn0B`gVt:DbcOHo9="2>7(N3;gBsF*2b^=%RAdj7b+8*%N>F"c1QBPH7C=Cf>Fp+21AOdXY0:\emHd!$8N)c*22h<9M&jaR7(.t<SfM3B$f3LLpopjM%]gC%-E4E%fGp4D=m5:Y%3t.i']h`=7'U_._S?87k@rq)nQ"J%6oF=?#=^;FX4apLc+P0-8*Qb(d,%F<MW0(mbMFBH#^rjdiPYelDNE3>qZh\)HJYk/&(11'C%E6soOlRB3g@+rM7:4gud?o&s>e)F[+D72oe7Cgq\JFsbS^H1OKB07"oisA.eC%YP$42.`d5?dHIV&gTCjgAC"a6G5eg:2[#?586D%>hM8K98bID_qsm85#\W+PF=>!NEf8^BKG]?)c!5$GOX"Dh!%5fA)-iP_F;V0I(LngiQ3@.+2d,0YpHfi]j;p]DR="S.<7W>p=`F*%Je`>qDNm'uZq,i!(2:.ej4:<hkt-@p)JU/dIY1VV@[0UI9ij`WY=b6b-0<Z0XhIHOF>[X@8so^ZhA$pVZ9qf=W$sf-apr,aB!gc\%(7hEn?'1OQ[b^`RON*D@1f0>Z/YI;u16ojB`*spuE++*h3U?@6Bk5^1,6^Q/&U:).(pobqT[K4/m>'ELOk+LDBAEI\S49C97U,.:%`nqB^"pJ7V0V#SJ:*a2,>YKI'aeqeB2<rF5rU+'j(1Q0NUd:e@1Z!<"Q"/^hEP!G]<S`4ZfDW^b2='33<hKKfA`u?7BnAmaL]88\%Uq^-I7\<oeGBI,L*k\/Ye`dO:F6B%_0nZWpqSR#Cl:f`8PS-ltf,Z$sP>S)$7ImfAnhRPn?ff??H">9V-:O^oq'(b+,USe^+1+f6%9>+,>[_%$3O[0\U.5ZNNXubSImEtK@4<uL)P+o=Qr$'\%,+U>//@,RHNf3t`Y`0&XqHB/jAn*#6%4"02kk&pURfJAV,'aWUQ8R9>%ar+ceEFhb2,C9A\bH=?-Td*b)JekrEeAq'mTI"JhM&U:h2tTrdHYP>#7Po&4Np&E*A*!Bh7#Np+6m/F!;i,Zd5%fM/`d$)'2.fdK%_r3lWNjK_oSuZ0EaVs^0\,'XdQSRuMGY$:_Lmfe(>!pM>b.-?iZl^Umk:+8c7G&iRG#Egc'nFS>YIj,\R8j2BP*U`t,Sh9hN#6Bm%:;ftXN@e"JPr+n'!+5O6;%*:LTX)3ZP>!HC/(i+fr/:T;<b_-5/@)g.Xj]CgQri:?PtudZQdrg>:IZQO517cYd=WNt89`D]of;uG%;9C:BU]?@Q;?N0arc%BV*d'8t%9)2QG.5qW!8`-el4k1rL[A4P7ZK+N35mT`W_]H9(ObPCiHFbUGQ\3Xe?a$VSW#BpnA=('/(1Cf%8a9"hDLmkjapjU+^SSc%j;)2E(@HabH`R,02i#)U#lW=_*iC95K.aY:)9+ccfD,]EUu!_N1O)k:%qhZ46"fEPjkI\MjM#G(5M_#7%W8`Zk/`3<fh=M/dHeSEkUA)Nam`9<N?QCsUP5V-N"bS8:/Dj:-C:!>->$Oq,KrJ3bG@<V'I(JX]@8CU0rfPW&q)5dAjo7DM>`om-%(B[:oGt;rV,Gb6^qHjI28m=Z5L]>W,(E6bL&8SH'1':qT>_,;8/HJQ329(gU55E=7*O$iPm-^[QEhhdB-#0#P:TF?o/%!($[Z],X%Nr'a#Oh9_k?W(f%dPOk4"'1BXXt_!N<K5f;)RBkc6KD8qj01bbN+I5#ZS@V6F/PWS.9U`-`kBBb0m8cX8sQ?(J:BkWkuAA0Vc4R)%[BESYTocr_>l'.2I=b&!dm#NK\0<:&0V-;rG6W"'%&%O#o1!)-#@3Hq[gsCH4ltH8/hWY.dP5'IF5]MJ`C2Kp2'GBJ!a[.9M-,pr%$_HD-$,#3EGX_&=;^oP2hf,j->g@ct#C[Z1`>@>+QTO=nF$I?WmP`k6^F&(1_&0"ZgN0o6D!AaE8W2EPkb:PedMutB1)5`<j8p9R%Bs_nZBoCR!]I15DR.[=0p'jt6QLR1R`UskGc9#o$Dp`=:)Seuq@k?]Db6Bqni$TbrbGOm^)H4fcg@tVjc)$q;[To.&V&^!"1@0Dr%eS2X'%S]jZ2fciXoF]Vg=O$l.DaQsJRhh:4D.UiY1ktQ:@D@@Ln5kr9IuWt?qYU9YoR,;W9HW]5I=M"-qe\tL(b*M]-9+q3&I#FQ%IQVNGs/BH:okR1-5/G>[9*8?eE(>q=1<NPnR/TAlNDFuWK?;kTNU^NiA?@aY%o?X*Y=<HMb2WAV7C`H?.4lmUA>8to5En4%-RB"N%km^kS;VMLh=NTJcMc[5X2Ab<mi!.D&PG[LGM8f7(9<Y>l=/5t;9*n,`G8neujFm%>p?MZ'6-oJj=OaV>5KqN2?>DHe%f?:--Mu-Z%@:mqQ'*uW@&2C*Lp`Gh1BZkm&;uS^Hl(mpSs5MH$*u9K#YM8oGY)@i8L#K7KNF[)i"\!SaFf'9<,:C/es3<j0Oe_H24)uo1Cs`*E%E!jSkEie=dMinWWK[CkhaSbk3n\AGI(*N1ODL;6E"<"c.5Dp)^#bA^Nl,is_ELnSgg2Jrf8Rr@IIsdoEiTQnO6=60>g0jZVg5bf_%mFZ6uJHdLgUa\FP42p`/PTNO-Eg%7E0e+Wu5_/hh%N-*:EHgXGFjeo*S5""Ch`[BfLYn%bXU:-/dR5#R-+Se\8`LBe<Yi?pl?,Vb%ee$*O^YQC"@`SraDF&WHdbch:agd:qU#`_7X!pAb8Zh5rlu"_-NBp4+YFKem1:k)]+`=+>DW70#R9LkPO"8YN5>&Q6UrfP3Rag0l%2i3F&eZB3rX8a5kD[u/YJ']l+)8nL?jVP8f#R]3cT8:O_.aDaP@m"T<)rigfZ3Qcfd!iu2Ju71Bg_`^S%H,df+)"!Mm@JG"/NKmF%B/aDkE?Q[)XNLqhn-b.,;sfs+2&8)N.EUm:if\:o*I,V1DKi"<B"-B_r_\!$Yn?G*!e+ZKPl%gBpm<p&,kpD>`4F7gF=+E-ZbE;d%0V3YJkdE`SRIlru-7V,MRP]/fi=+bF(/6LV(cC#a"+0\[PA^PtPL4>a.+RO(AXQ.GG%crJ@<sFNhZ;/b'uc>#Ep%)aTu)QU;Nl9b%)C&qqUt_O7)CfOnQJKD-#AdS]EEd2(U[*r1&#[T5(?,W<?:5f),=q@JP"<&+`@Xl$$3n6?r\;&7i1"c.qiBG_S2hQe\it"j7Z?@I%6D/@**.jX,&<F-t6dVgWR_UD_g$LX0gpUML"l.WBkJ.k",a9c8`fnA1lf2m_X>0]TMc/t".pM4/;B,Rg`RP%/osIthP\$bq;.b.*%1F%*\g).2J'cdhp#;'YKNN&u0?W`-=+j,U]Vf<pIH*[R)ZCWoiQ,`XG0eTmQ%SjTfjg_FG/+Ws59N@DPeNZ@o\8a]XqC/u0F?7E)%Ogh<4s6ET%\0m9NYh$h0IFRT-a>=HAfFG:Dh3d,;H$ZkD.`5NDI5<$H_Pb,R5Jrn9"J`1?`\[u>+)49l[(;;fGMqoS!!V0Y9R1a\%guJ[A1r:8th;'LqDRb%Q5<,Iu,*m,)NgGr4lP#b31]YJ+*s8nh$>feA3.ock4"C$n`'#&ej!8'c0hkm4mV#r"/a.`.+gf^iAP&M$%0FQ$hBC.8q]D<C0ji7i<,6O6^2Dd[tnt4`"<;O4ZDl9%u4rcR7=s0LEVkpRsWO-Fp1Cl;N=Jf>,ClG<hd$:,7-l=i1UaBt7m=;Lp%F^T8?)aR8iF<.;qZgP%:V*HGcD?I#9=LQT\quI5,23<2]=s]i06FROC)#JZ%n[#6@LdCDB4/;<r#]]#\PHEC,c/E">PUq+1<6Ho\%$dDmWZ\D(+HURNn[2be7GE$8g&nT8[g:VVf"RkGn4R>^QS/8Rj?-M._iZ#5#("QcPDp/f0e%SQ/Boe0I#>Hgq)78J>L?!4&Qs&i?%XhJ!,9o\REmR9R63ce599J(Kah%Wk@2.!?_7>Dqc`hbT-n%cV3>"FB8kMLm7SV8@0]PJ<;YuJuR%N3'<5?Yii@,k8$2'+Xp;gP+Q%@VD+g+^."h3!pn?V7[Up5`Z2el83\GY<8JQ2Up:EFJ\M:$nT20&HO6p8lE)L.RT<Q5h0JC"i=Wak)`\cg/'1aEutp^mL/k^l_G?.%bU(NcMFU19GY(5LnR:eR@f%U9^"_GtCYT/UUY?TY6>g&mIqCkKSn$.]o^*@)NUUI/EDnG:2D_n5b/%6I0Q[*'F-[ck>"PtMS>ElG%/@NZ?PL<Os,KO``p0PYK\SQ4Aa\>N`Ls):B48"P8U#TkGUO%'ObJp>]Z+GM4.YYc%+*4)MgCF9;=VAE9jC;b)qKaU/*^dbkIs=#r%+4[6\JV1o'9J"/kmL!=7SNE1IeDZFWVNl!Ee",Ree^JTR?4>^p"4`^\]]?BUi_(m[$24OuTQ_aZ.d`8>98Fn.6ar@B06bN)0A!h^%F:+Yhib.hEf9,*A]@>h9Ira5[SNC!c1jMuHrHK@"eb2f'W.!_UKMl/]q-%HQ5hg88B[9r?oTq5X._"D=^>`elD(hCQ7^iJRoAFs<%=5:=uMpcG9i:_EeF0F,/I,e3c;!sj&;TLs:BdCaTXnPN`ose;kGn5*cj1t7;Ip1V+_=mbIHcMb'@`%!h9.iGBmIUMXB7#bOs*;AK%9L^A"BR\_tiWJ'U?E(203hG+.foeEpnh/(m1YlN9!WC36mJB49WR+:Ep*g1VVqt\K.(ab+%]88"ka/'B`9'@k3.)0GDqe&*Tt0tc%W]_2D!MP.amO!,!;rTEL2*a2C'YaO&ONa0&m8K$pffUcR)VJuT'6kKAPQX0p-+/gY/hbi33/Wja^k%l<YHiB6'3`$c/AKZVKEpHA%=SJBp*#t2q6L!uL?`rR05J,PH3e&G=WAGIW]-tU/-r?j]X>Jj(D#j%Z^W&T<N80><$Df[JC2g$[@u87E="@W2I0E66aN75gdFd,%%,apYnktCLD:&^kh\1Dc;h4NKK9BO.R/]8^qDj6WMM=tHTN=Xe[@e][+Z1N25<pY8],(#lppHpKTG'P4g_0[q_h&`Tc;RN.r8cI^k%pI$S.gF&4DN6mg`U%bI[n5\E9[dc]s3_6%b\\7i],@<[,cK7t[:f]pgee.Xd&$)]7P&jKj]"I.F[eE.6cQ8B3nMqC3/<G;+MC%2@%h-cm09YVMC8l&T,a0L_uS9+HcR1UnL/m::VT2tN$a#r=JCgaXE0)@UViB3I/577Clf.:cpSfEU?F]oE+gEV4<1NEA!%\/8BPuBsK%*epV%C?7?oBF]]q^C@,YqMQGfj[jKrF`X*L4plMR5.I]fDKU)?<6CnB1Mt\hl#5g^kjmm%BC,\4R"KL[E;K'@elksL;m,\Qm"!HI%"\u#7cK7-"H7A\DH[B3Nr[7mZ.dnOI=2bQOC3@I8.@r(965R+!iIq$lD3+`L7G^PHKs,4&?g%r:L\^f0r>&@P&l:%pQ%Qtq6/2qr%TCUU)cQ.8tA\4$0S:4@Qkq@1&WX3A+n<7V'o'LjjWGhiVnktO+\W?]9<:K@QB'f+AJ)bB?o]<OQfCc%JlDk`D&riau"9:l=5!7u5%Kl>kI.qU<E:SZYdYBLphR_W%";:[k]S<\O"5BlB`@sA?Nm$f=dTQsFPmWn(\Y]hqgJAuJD`XD^GpQVkp*uF%:l25l\>:kT'aSRQ&%J^`ufs#>AKf4O]CqNMZu4U*kA\T'.+9m]M`T94oqiC.aJ9V+(!\`;pQN]Ze(bOEn3E$p#p:Tod#p=!u'IfT3]3UK!/UHmZ9.,'gn%q8F$)8!1L["]t]q-%/:4RfT2Td)ng%PWQO4X03-f+r;:t-qa*8OL?23V-buYTkV11`pn8b,e&Ld#ocBLJMnVbMC,;7)s&a&kWQI3%Je`igD];9D1t`0,1b7#Zl6Ef$*GXFpSmGs$d*3_]4QWuH,iF*S3C_!SQ%fF+SrYtrXHqJN8m-\=mjRe1?+(sdh4R"F4;C=:BW,26%l%%/Q7h/]trCQg=E"54+DhA3G::c*d5d+:Lnl+@?A..`?$c]DZMau*m(+YYMk(uMJ+;?V@;-XDR(caE4@pr<1'&M!n//(jRQk=+Y%7u!p@Tl5o[81D,G#<JM[*sHt?5ibB$/Uag#g0ouJ3)IIc<+LQuf2)IS9M.Qud=/ppbE@/p^CZRc;q+bf;`\65LPk%\nQ0Nt\jT#S%:lIq#_Y,?0fG-[Xd@clp4R5_Vh0f1pA0C#XUcMWS*C2bpV"4[*.mHeJpToX6kh-E_.)nj'9T"i'Te3KR9&I1kc'sc'p[p+>DLMP$%e"KHF:;j&sf'\LJlj2AYG6WFL]gG.*>5AO#&#nf;H/sHUa#KX!`GOaTGC8Z7kNr&MFE6qNcluG6POd=XdRC>43c9NQgWT884d5s:%*AZe_mk#K)(Pg#.OU_=(32*gVE[t7Q'G<\TV"#E"6M$rtm?XfQD2";(nLUdT7^g1*;\pA(9l!.ICPoiC\gItLe3'5$i'%@KKnb_r%lfUC=$S3U.f&Mgl3%#2@'==!)FA<gc-F21"E+fMSUFrmupO3!@4d8o!4KchTE9$n_mA'R=!\n1b3iQ-Xn+&#c,L-.cl>u3cOOsR6%rat+=pU"/7o"IeS3QrLFpnS4e[(ZfSqh)gY\9.A.CoCkHcN4D#P<V:1-?"7/p&)eR$*ZK^-Y6&\+]_>AV<:,gZ)\-qV9hk_4;$m$%G9UMis*R21Mc/Zk.tMqNAML.2Judh:1>6E=dt,3b\\?cr$R[746T%O`?gHeTnFjm5hmu"a&99_$[-XdCG9nB_GAMiZ00F]%(-eES%)//No)sdHh0VB?hfe7`F"i(_\m)0S=ae3/5>5/m,4mE-'fsseghrCr1NcdO+U*+'kcXEZ9V"jel].'$N1QY5FS*m1&B*Gag:T7mj%oXJj_RCa12&,gR[TsFuBrp%.>MnV)rE;(*4Bft25P2EV.-$MBWpF;@7Bl&;N9;M[_\fn\u$;68enbD]&Q8uQ=,QRPJ_nC9dmYY6s%>s-QbI5*3N$aEicj+B9(O00"b?M!EpPE>@.*r?7fo>DFq#BSpbj/TWT&&pk?h1:%hC_'oq\e`7D^ZQ7bNTROkf0Sim.^5K>%+MjB%pnb_2T51h*>QCN;.NORoh^OW2F,[#E5YETtX/jI4oEpHQ2AlNM%^S]TUMA0'?@"I<60SPSE7cU_-f"np'gb](5EpYTL)M(Wq3l'%%4>:e3l&G8!i^o1Fam^b*3QSr7iGtAOH/RGa)u!.RgSK'X*G!CWgAjJ:O=M'HRrg=k%6Xr))@3"`Zb-0\7XEsXA3*^D,DBJ!RYOLN%"(HG`]G0B$:$SSQp?I'X`d`5R5D<1211GY]Hj<h6Z/l-]UlTK=q'\0HO'TF.6T"KMn_N<sqXak@V<$IcW2:ZKBusmD>*d=7(X4nC%:%hEBFSt6$J:#S^I-E.XIs3>V$cq8$S%7nEc$&?MhgHumDstU>X51s[r,k.FK"Q=Y0?M'ih]?Q-'fr#S7nQ9IVn6VY>a$A)S[12[%`i&+V>;bqfF8MZ\!I>K,WNBRmf]Vu@j$o/Z@S(rl^O[c\)ge-Xg8>8((_!.jPB(%idErGBfN4iW_JAR_CH>H<T0a?DGS8J(&Nmco%]H.RI*pn3^USg^bY!O"58VHg(X4,14GHT6,U^Q>(dR/0/$oM>$GeiFsHPo"1gD.<U9qJif/dt2BUf[RTM5+Y-5PD\Mi:)j6bo#X8%[CH!0ktcMIYhU&D0QUL+3J"Hrm#r>CLPbn#n[s*nB]'>Fp1!B6!jh^c)EKnQUTk<jWjjaEpMT'_OpM\`4pZdgSg4sGi_MF9lCGpp%,?XBPf1f&?;gTT%],Oso@-lN7IW06_1ufbG(M(+8@;D)klU:OG7AbHqgFJ5iQFGYTX=lLBV.Z`jF8=liqn1EM^IQG-dWF5/ch,h6%V[hbdlU--rH*I_kdkcnk/s2dPC?)!bLIW783S7+qbnq`)SM/Udan.GF)rF8YWsOa+<)q#AX_s$8r6'jtb^E_t\+]WmHoghh2_U?O%rQ<sINuDK91tAr;2"B]t/orCgjAMcC)i7556R`EB?.)fi7@0WA0r8KR^6WT3GLd9E,V)k3?[a'j*gD\BJtael0MHs"h!qeC]C"*\%R^s"Ba0S\=\fJq)cG.(N`]8Fr'-#r(-r7N)iqeiT:8.FZ0`(%T^XJ*g9!@]Be5At5Np=Tb<.1<29#7B,cMG#_2o(=^5DB*U6%#82%Xu9\_qL1h*Boi">Sr7m1<3&M]Sba1n4g*8c8DqnVjh9Xg4X[f1k3KD()32T]%%DuKo>?W14833hEu7or8+p<:3(RL$QC:q8f)8[:%'B7oAV94?j!YZfLTJ>*MmGgU6G#.`N[I;JQHq#,r?]q^ukUOdXWWU=SH(qo7Ik!Y=]*#+4ns-uJ$W1lL&&32=K@-Ps(7?$C=7(fu%MVKKPQoMU4Q1OOmaV?94INAhF6lPnO$?afPBgY!'P[!YY5RrMH-H+W[-Ym?=oYJFVI[KU!bb5$u:Jt4npqV484u-c%.#atpD3#o5%eZh:)(G!L,K(%J/KXa4eF2FVq"\eU7Q!4dZGUZ]7rNO/T+W>G/b".eQ>`VPub19!hs7l+d6QI"d?4+AVDMu";njI'k-PqrX1Xm5m%R8>7m<\W'Y+O7!9Y0cKoh@0t-b%$lK]30#lfc@0u0@uSa&+[DgKX2;\3*F/\YD9%);Xi\Dbq,^[RF5j;pd1WiQWkDc([trtA$MQ8%Xr<:ZTBc(uEKp2YrU"H@gV4B$/S&;kS:S[4LIl+\'H<NNn#dY?fEhNY?UK"u%aI<J:UU8/(cI$5ng^m4EnR&Jf@o0&b%fLJLEcXp%4>3Viaab!`Qoq6GjTsQQ;;1bMq&dsN3KJ8@1KiD(AVJ(3?6fP41==8kmm"tj<+Ri(WUGr43tC'^q4%@o:WdMJ!U"75(@o:;T3.5S%P7Ll\?<b_GWTND31F*NcqfpYiJupump,Y!DCfJ*ch,6Z4L,(JWR)\5^r:&qhf\88\b^BJTf4O^L@fB(5VjGa2rI?\3T0!)?OmH5b%(<f(ZI-_?M:^D-.>I0<uHn#ie5_Cb!?nW@W##ZW<h/4TXDdI<[ahqSqq"`Fr5S%WTQbA9jQ;12\)p2]rnMRPk`5Zs\\+anFAnUZa%^^7iL(23NaD]!OWU\o6fI]$,]NVhMLJ%niA3K=0qD\bh=;2#@5iX@)o<+%'e-'^Ibff^sqMN.)QDE$"4dohR>;DaZ5Un2^e!A5IX%p%Q]c3aB;-]iXVbn\\)4!9G^I:2'c]_W>rK5@8;\SCd@VV2s9P2g!M*V[5uD+r<<oj\R/S"gteN5pILG=d:f1G,q2pIr3KLpQsP\%Y#T-Wm@_aN"r$<2Zg_8Sq'nV;RZAdQ%Y=Q.OI3fVN9)o2\nY*Kf0NtKNercqT7UoOSccUnBkZ,2Q`^^'?O,+Rr=.OgjsUlmhj5;N%UB#Dg0U'.p%FeKFP7[&?0D%SY^%.Pjhk5RJa80aJdQr$M8'HjmM*9sccC)aE?MUJ>%,&SDANKrKHP=p+mP"iu`6H6qWd9KXld"HI%L4__,l:j*cf<<Il043[iTm5i(L20qRP)kYM0m2u!??bDiZZ)2e8eb`u5pD_uO4pI.l\$HL0;VEP3[8WKD=:gpDi28m67RJ)Z?q?7%C:_2E4&Z5D<>)!43ed*a@Be>6o6O:M9?fuCWetD+n)OPO-SBXN3qdYT?24=)%$`Vg#Q79">"N!>Q/`:&D:CbuI1:Ydl_V_+`YjA*%XH26(Xr_Ue//FsWlD`,1.c,O>PQ?Z/46>5n@B5n-c:UgY=82KQGMW)t&I''q64[i&.UJ3DU(7l\iBodN*OdIMSC#F'8fsPK>I:DF%l0T>[==`6c'b\&X=Gprm8gO;;>CAQ*SD4heTS^>AeA\3'cZS)2B9BO`T/\=Zj4GV8"Cq"62[HOr$3B/T1LTp;J<u<eTAUq'r=UNN%"k$e((VW-a7l(tfr3u_#J7X3J(;?&)@OtZ-R7sn4e8qJ9<#0<`Qm)'<e/1`i\_Oj)HSADt7PV(Kf3Sq7AH+l`26=BcHMJet]K0mV%+=UO5-([PNM<D9iM5N8(PSBsp;'WPl/SRM[Q;j=m8kW6),?D`"[l^Cd=Uj[u(Lt@pbEk(JFED5l'^dEQ3Q9f*&MD1ES6L-:bD&Cj%ejPlYHQb%XX_F-0C2$+p3@5Ln^6i)M<9[VFEF"YdW7q>lg%5H3V5]Ym0.^a4NG&NaUW'J4RTt="F9*t=B@Q@ej5.RkUINNa`pa_S%acZ,uT/'WN4W9<t?!N++mO;r2(R:Mr-0ar1d_=dE?1jfKGl+ek7CbZ8/GlUo=WkJXfVbFq*)42&9qWqIQ"dO1XU:5oD9@2V/1a=-%1-6o9Qo)G(IUcnqPa335B;X"?DY;$.(0Q&L`U%$&VIE+c9fIEYf!eB,EB?9&UM);''Gg%c*r6k:s"1R474Bu9B^7G<7"bn!lnq8k%:P\'2Z>SF\U]2@##.X>i1\i1I:]XI@e&a\uA^g(S[ijXo'EsUg7BG/Y`Nn_Q&<O&3$8<neenjleTI@qDDJE+(/R$iGbWCn5NIGhC%G\W]MW%Y2K&e7Mm(T$&Oicrnk7,M_aKp>\#-p(asd%`72:i:?&dMY`rmG;O3)%Q!9G;KW8eEeR;EhN@bQ"9qam8CRq*ehX(j^OhL%"slL(W$*Q:CE`QX<j`oAYd(?Ng`B8`dVCn.OCBbhB4@&je*;_A"t-PP+$8;V(*$(6m8@,\,S&n@T"#*Y_X9Lb#preb$C8i@YBG,0%q<W>*,qL`K&>3Y5&BmG6TjaEfN'e`<?Ihij19sn'X6[.'Y/4%;ePW<5?r]h2pQc?V1/Mk*GOpm-2"(?s`3WI8nGY\b9nV!kYLAe<%UVEU'.J"h'6=_#M7uA=BiIUA3&icParGOhsNB\2>Al(r<aa!FD4=i@(20on9CLK5mOc^Ctp$<=ABURFZ@Rj<E1Y&9H>7Nb/g_kE(%)5?I6%:E\CXNd2-or5)e9Zp+A9nnp9&iJn#T(JAhdkrZ',Y;OTb'5%W1t4+G/2]NANW]/64haAU\S]eS;>Yi$g3>lENOg*,AZ;\%%dr\:1dL26k;3QXkB0.@I7kG\GKbTp,TM>j$B>;]EL"G\qR#W2n6-GBW+Jg$0!Sa>=p%dcCBsmH%Z@<HU8+NaW)dQ]se!t;]`*%E\%osq>//Rl&a(PtDE7L0bhioVL/^(.Lf<:,GM"(AIVGBX1maM;CI`aX0(eT`8]i3@]%FSQk,n>%H1nZ[ihlKAOm:'4EUdLla>m`cD6%h>(Em%m;h)mSAnoZY(nR&ZiZUR[>!QLqb;>LUYM6(C?W!"qEkq;7mNNfrIeGH#TTbOU$6\_tp`:lD,rfe]mFY#0r8O-r5Q4rcR5L%ZST2Go`PFQn+(dVB6TNZfB-P6^qk4$mhS(cBVcf2Su1II`NpSS7(9<)pt4QEqZ0cH5<d$*V<IiV1bR"pJ[<h;d`IWL`h&L1_i[O'%RL4>7>:sjajnSNm?VPVp$h%_P`E_Keq_8]UNI8^3UKJmALiq\A3-&3Jq>r>Ge(T/>hp#egEDOu3-%fQ\Us!P1-6RT[H2Q,XQ](2p%p^&Qnh8863[$I@#/Yo,?`+,PA8/Ae!/5Ppf=+-9i0(4%4E8:\&cE#sod<@1>[l3N^:49JcWTLCa\W]^o>^/ID?A\?-)0Y"ZT5/@0%PSBc,["SW+cG,X]"L<$P;gJ)t04*s'@^[9RK&2h+5+RYQ_W9/ZBSELY;!mc+'?Wi2T"rmrhTA"Bnrc1/^Xk"5jh$+dSVp0*ZC.'&%ZZPH:FSNCjaJZlYIt,'7h:*s?TABYZka1@<jaO3/G_2Pp<Q#5(n?)YBh,O"@WfnS)I#q4[+*gl9%S$HaLsT'iZ>j/Hd3\?MRI1<_%C88=+d!:h>32d5!oYVGd#sZf/#.A=F4S_MKjO?jM.cUu:1f]Chm;7"PPY+a>:pl)P-BI2R]upd9'!(i8*C53Vpug<.k@r9WkfZJi%C&k9nP,]d\YDC4+BQO(i$/CpN4YQRhDaqE=1SBrVf0fXchZDEp_,YMpCCW2`^CT\=0$[.ADMYJN"&P=c"j;aVPFMg'`9,WYm,,8P%qXDXaSb&:1d#'4:no"'>Dfmj@\Ool#>P>)dGYil;5_620ANb>-`m:uD;Zo]m#2(Omm8`%2oVon.!GH:/f;kfS5mDYGZXWtRO8%O$%<^>P-_n:@,l7,mVcs.fX'Xr<cTWa.>f2b/;>>a;7ZO0[8@BuJkal]LCD%?3<kWejqlCXLG%IEaC#8TQ<RkF0lcg3B#Nbe"?M%`[j%Q_m#,`.$DZ4"jm-!Th7.pK.S+rLsP/I<Hc6XFNoJj_FD7*7OL@cMJWmXT?f0a8j`OSa9>4U,(AVOO!n`rpsF-VEi>NhkCVEirO@M%P`?s7h)S00h`o4bi@m`O]"CL;:\u0S&npR3r7\LZqT<+9/o"u`!LJe0S]?pJ\=mNEEj`5edLtbX-$Bp-!;[Dil:3]r!K'!O_"D4r%XdrLaP,:K_\S9Y.BO*Z[I$t)T&NTQ,`8//q*1.E71qdtro:-nk!keutDHd1UbPUuk#uHu?"P5:#(u0Tu#C:hEI<f#.5#\+-c&FM8%TO^GcCjp#C43&*>IQlh!?h6!nTGN0=d4WM9.F@hQ]oN04nRWcnNJH-ALcNh`a"ncpQer'*0IJ[n68#L)b-h:`k!oT49B&buc1o,W%N9b\6f)YI+/_M3ZTYf!*YGr[Y/d%O#[#@8&o9*:<GV?X@R*+1?c:s8-QHr'k%!6e40W7;k\+N4E7X1>5NqM\rMCY$36j+E/JH?Mg%4.a-44Zef[q#E\!R8F^e7m_D6kTPEg1'$./+4mK<L`YECT'G[Sl+eMXV_,9?@Pr$5fA#N\f6o*[$UBb97\r<jQNM&K]BgK.HA(of%a7*%i,($&dUQFTl@"8]52GZ!8a-KL%QZBMTAC#%4_t%NEqS\u^c7/P;lh[*qe+S,]iFJ/8B:dt8p"O,aXg%KIMqRikiMk+WWSOH#%eo0/(b6@40p$:Rjj\sN9e"FL2[E?D"HFuiKYc#f3F&,#X1[Cr_>F/PD`CujNSp`M8=$K@/:ESUm!Q.hV`Ep9,(Y3N>qI91W:Hr/3%bGV"sGOl%EQI#BZD5^nAF?eQkZ$okIa'pq@j3J716gM37IPQ89:G^b#iL::q4PPErS3;?@)eF?]m,4?rD&P:(8)R!fbGVkW=#_d7%4qD2uY!r<<Ok*`s"c8(\Xgif63nN_7TP-uhF/HqZp?SPn^0$12hj$*rj'(\$:ogK\T'[D#<A&?TktY*gIhpcm)JkYZCJ_k0N_-S[%Cs,@n^Zbt=fI4X^E-SM6S)XrdBE'_4]0!J4QPrO.2PW@POeg8tVYKeV.dP/YC9YTEp?uY4fca["-`_i!J\l)^i@TV$,.Do2!>M&p%jL,"V47;FM5!3$N"iGR![0BgfI(Z]elLO?_28^LECo+$5Re?H`5\%2R/U9#0Jd,n8H[A[YhOW`9b+qn!(Cf$lVr)^ne2%=Jo=nB0%h%1N69;'(1kW>_N%Ci/$n88:!iQVR?ALjGnp[qpNmpH/1$k':1)HK,,/V/L2SiT*H[D\>4,l1j'_P]]].O:Ke]DE2`E\=Q(A@0E<%W0)Gac/]n0,DI,a(:)2GEOM5]d%qE3*C?<LFEQo-E;r58EaKN(%_3f09[jp:4:%7*RZCok[n-@Lf>aNBm^4N?5h<G0:`)sQBcH!1%K^O>X5W1#;!.T%r5I]%]S*^gg)IL]"kdj*mB>b/-En^:2-p?uXme*S%#:!Tf/mI(b(`a<FB'+PIEZn^6NAS0Wq34KXr7FuIZYL>h%":UkoHt-riWXr!"pOe+((SqbYJ:qRQKoH]m[S>K:K/\/h5G#7P)A44@0FK'#Ts&jLM!3opEF2UlE\mWf>C._C(_^IjV&i"KLXLej%rO9,lT`=6NEi8SdoFY>rW@n(KoUd,h,8bILQZThJZ)j@EP:#12C/m5;04]8WAfpU*QV#/ZZW+YZ/S=ajYQN&&e"%b*'$@tKf-<:\%V\jk<cs?%*Ku>aFT(;KhY$UdcNN,Lb*[nI%D`e0C3W^d*euKkV1;$>@1,Gm\UF1M$efM@ZDmLJ2m:S_=G!6;f]p=A==lDanQ-k:`%))Ic56.A4?%T%3aOY`_TR(58a6&j$KJ"+N@'ob^9<Q=0V,8I9%agU"%-HoeF/qrX(EgcXP>[N%4W9&(h%!?s3N??bah*cMS[ENdg%NJEc*@l[/V]EAU+R;MZD+q/T4&i-Yln<cDJ)"PqPdZ)<P\SH"\!d_Bj/`k8al<N2Vei&5MI:$I'?]]ZV3m_\H%b[S]n[:`@-kU^q%%e\6[eHE/?GXJ"MJ_I,ES2@p9\E7#HN;>,0Fs^<8)>P6Vp'k&ig:N;QqC\J-U97-=Ml\ToeYA,q6h,>Rh^s54joa)Fc"OI$22/eD%;\a:ToDc+GU%,<B#M,*^CM#fqqmU%ae+:N3eJ`Q$9p.YZBU#l4eYo!Ic'b#B`[7)jFQutRENMe!ik_Bq;,')m_d\2AYO005fA<`N%g4.%6\dbd>19AXJi0!nJl,k2C[>RGUX=N>^8MP[B'GK%hZ05p:PD<_;d=UtMlUR4Umki/sXCKd=G'Qed>I\V+CCZ=iCG#e>6dHr>%VD5="V=LC]+6-Fbb3@m9P)_;c68mr1_YquhUMSJLD>VnoS5>!))K.PE_[*,o+i38WJL!<lLsEsq1rSKuckL<;!l;9_#dGtT.0eOI%BprEsX<lEY2>%Ct)q0\d&61$MlX`2rJAt6V6#Q'N/RN3#,5tQk[.\)%0jP!6hpR8T3caLjgC"9DksmPHldf;mDNphd:)/<&]>1WP%>@G@Plp(S*)s1_sg\rMH%JW@&DsM$?r$]OM-MjW]3L3_Y=P317A4gf(p]3"<SY,d*@\"8u3Um$t19B^1/krG"Ekrj+:<A`&bDE`h%=9\fhO!coEksRYFPoe0cHejUT9Dr@#^hk;AG-Q_a<lVU[gDWdW<kh+DNcrH4$f3uWYUCbi1k5O-Do)G`[@#8Q24)o\J:f\s3%Q]r%hI*W"S1rF(PeTO5r=_&0UU:m(ijd;hR2TBqmUI)@J2!OQmr=1$Lder\Bqr[`CcPWu"hI6WhNX&ES'n&F]dXt%f-o>ie#%P4GSA_O%8ir#ed50>:`+DbZh@d77"uB=B0!?-g/8kgsC73W6ATXXg"./%hR?O<n?JYuhG'n`o2srDRBUmsOKTkte@E<Mg!-C=-*Tb\0GJ?uT%5aI(S/BZ+DX.dhUQ9CWTkj6;4\pc2<4k/G$Q%&\O'tpN34+!r*<Y*KNN_2:8.Rt2HRpq+T;7lADG-o001=cTXaGY[q.os)C?!/Q4%f@DWIJ\@p&nq\[m]6a+0Uhq\aF5g<Jmj)kT(@WV])eQL((63_o7jB+X9KtnSbTKM8^EtLle%@ks]nuL#p6&o-p!ROkW/Os,E._0X%Wl(LY3Bg)6eclUTkqX*K[MnOV33U`fhI;K,EahV5Cb1smZe&l4'J%H\Wqa7sK;q\+XpJ;EZ0Vl3<d*_1fi#Dr=bfJ!?:0^\ZKu'a%$T4Br;*Csp1jON?)Wk?t/UEDRalC:<QRd2"`t6oZm4^U4RSFmG$:bcAcrheB?,E:"0Q5=qh_%+oCH9*kN:`7<?W^pmSX^V+?>Ul&%/$kg"e]mPE:pWudWRL&rc"LY&aHrNk*BQGc]Q$$BW6%ZL/?[%K[(!,*l$[&)X"Am1[E&jNJslAPof--"K_&Z2`:3JeZ"eD4e?/+(%%-L,J\@7EFD`/B:fELKDaNF3>W0)GUfUBh?F$:KllRA@,VQc)s@V*fL`TN8?Ke&3ncteP,=q4"VXChk:hJs<_HIcK]@kAI+TmeS`%K6f(<6i4.8<5[KC58r79Kd"#$oqULE0:*p.A,eG6@j1O>m2&PYYQaGL:fk&<f>SJ1WFB*T@MQ-r!mmgX7;47+VK%'dm*gMN3jEe#%Wpd%n;$B$eX/D>e\SI^^[Io@4`f<C;o<Y>UNt6meC_OBdC1SGE8J+i)7F)X*9MM:Gessqp95mZEQ5mo.Xdh4e.BN]7lH1uNf50j.%4T<T^9b;9;E#GE6%r5Bd$WSWs2eN#oe:N"JN'B=.:P>N(E>23WQl47lE\SPR[.oqdAmo0,H3.RZ6jlGmRaJcFL*eqALks5:#!ta[%((9Jbe"kgF/TS:)ZLcR;Q6+$"=tVQ^S<h4!qema4cK/>-%\8"PSMjtkPoMj^$p)9Y!PcpRZd5;nAIGZ&6YE#WVp?.VI1Dfr#+ZoA%nCK[Bp).s)ms9$<lndi6fn-uaTsN(<_eesfjNuRmcr#'k4bo&j@@9DOB<,+[TsN(<,@8gH3HTuZajt`&q]id%DXR45m5jPAXG9Wk%^.F>/^!N^P]j&7NZ_$<<F(GO&jn<4JMdbcm^!NS47X@_IdGD=tD!(Km5g==$\J%$'H"FuH)j?P!B1$<'GdW*6P:YkkCarYn%a,PN%PFN3iR<+DY1IeNr:\9@!q_4)W=eca#Y&'P[\jgH_09nB'Pcc2,p)I3^aZ'^o]U%rOJhYNf8[?H*aRdTc3PD7WF3G[F"MY_FAh`&C%<o#<!G$AkDhpgO:0-;o,6V%Ycfm?;KP22W\"]8lVbm@lC't]\L69)O:`6WS9"D`5<KP60P-)>C^fTFGlm@@SK=#tGM)krd3l>6<"%?I!;Sa7j(V,V9`jCPZLRgG73X%?jltcLc\*fR3>j4#Jq?=KR`jF)N)[e7>C9aobj]FtJouB=i<&&p\lhL&!CC\ip@uC&6UaldWe*%CZ(m`S!N30g3*,fVrmMtDqU2^cL^i'&^:'@GK9:-Xt7_Pd8`W1eom>3mt0K!?">ho/$hm3=Un#e2>+_^fRf'MjX=^s's]s@9K#7W%?C;u+4$E?n/9E)h:TqMk*&Vao4d]BpPpV^<k;6Pk?<^OVMbO]ulm3;/?Jb;7@tAeUh#Eba[W*=h")"h&gtB$f,GJqM+RH-_<a`3j%MU?cNHeL5,CgkKPHk5Hnf]g5j-;Rlbd[3ZE-FbXnrPdjEYNNB'H])#Jq^aakiQ]Mc6%j>XDR)Kc_7d.Z,=D'GjO]Ms<ieL*8oI4'%VaW0Gmhh4K/@''a$$$E]Nb([ZH#mirfZVdV+JmWM<8rt)$L\h_+mF7<AK'3(#G"Ic6ZC)aYB7ng913;]^Y#Bh/JXDQC6H4R@Qeh=%N6#],luGRnV'7Z!01d8cNGbT-,Pm5?nL>+g/WW?01)m9K/c*M"I[i^A3)%ZW:UZUIaC)bbV<;Z+pmm[I,7tfoeK)rad%%0<?a-0N%nN%jLrT!^4eE%o1,Wj=1,3*]9R(*78==33ECma7ZdW62*OuUZj:/te,P@M".22r8Z)/QiX1RsfT8Nch18d;UZ=/1sd#'EU9o.=.p%lNB)#$eXQ$$`g.L*%bGuPWfk*Q7]TpYAVa^=dQJ-\eWi"j1#VQ=d2Qn[m3>WSYRK*G.:MtB/5NO>J+=8ZcRu0k//'b0q&]`mX2Op%pE+I>&*JJ`erUD4m'4*[\96uP/[[q<fD0B34.0ZuXcAZ187[u;\DDTmgXT,9bD0$i*OSMi=A(gtdkLWW3+l`fo6`O@/C(Zc__(N"%/>dQIAB3\PjGU-W9dJkZX^t!13KMEo:#o3XIlmR>HG)M#F7L>Rfpj1m(fgk@AqlZ'ZV1RhGoVRiZYGL`WC7I>2jpIEC;htUf3*mB%okWKVXa#:3c&3b#Z^k<C3>]RJehj=F92%QRQPeQtK[>PsZP:;]#>:6s>2r0B<HboL'(^]jfF=4tA&#L3,O^oKZU,k3P0&FNX=T*.%bMkL?1XhprAj,Nr^(Z2p>^FG$941H`3aH,c)]WV9N7@$_2.WNR)uTOf;Yc:U8YjO?V",J0?TOmlN7>k%AA<8PUQi@_A>J(a.3nM'%/K(O3CW]2]F0H+\CaUmmEMb_1%CC#h_W"!RBT;>rct")/bf76!+2FDL[UmR"s,g8?_^OYX7F*VbiLK6<]m;/u<\!8JP,p5MDABq7%Gq,?/MRtaC_NCdK2AsehNRog^i<U-71>E5[mYZ(T#jZQ4FfDGMGD&JUGe"jR8akDEM61DX247oh$6YQ!23VkcIqQY5_kuBabM]19%<t.M0gO^9`_JOlZq[eKElb$:(aj#Pe=`X_cqAcY(<M^L-NAG-Y\VKALkT?DCi9JQ#]R;BD]QaSUX!`"Z0&rAm7D*r^o>KtiOi'Q*%O$1>-FV-k-5gK"fdbWZ4-HfK%"L.ELpQ"qD.d/XP@N.W\D4Ys;h:T//Fpj)4r*maO$Y4sP.gr#,9fuJRaXZ!2dI+NS0Dc0ic?[YI%-m#DEZ3&`<jC0"Pj"&V95RkhQGgs)%e9Hcf*]:'-C-4-:_'[&0#eY)H@E44=mb@kW@WUkH0>(J#fKIl!fM,i+5V'\F>>(VA0:jKe%BpDC0[KCie@gR6>\N*KIM)Ant,rRosQV^u>X&>C;-Wb=Ypkt4#^6<T@Zi35%VUqPQ@e8cjI"/E*>l7O_4*g&.Pb[ES*/0jqh07cS%QA4DCqNN6195]_)XN;I0;eaXfrsQk_jW(>E*RQ)#[,dofAntW;em)@Up?;7'=IeJc*p[%l,WT@u0Y4&aBtostjNP3\E>5S:I#4Zt%H5Ja\D:d4t10N4AGOCr<n[-iWDne>$c4W>hkIrN1;.Uo",Qa$^[4PQBm4\]dcZE`trgXRU6smH7g9J<W/NcPBA3mMM3_dkqds-7U%b,-tQ4"h\2=d2Wnjp,!WiI7Cn2il\1L6MREQHQ-]o1E8'c_`MG:1\_>_)5iRR;n7mf?N$Tl"m*FCWrY3bGAE`LCa^DFCn;H01P"+%flUit1mW3d^Wr]4bGE\SEOVf]3m5(c[:[n@k)?AnS'LOf="@k2RH;k"c&2KaS'Gh(EihKocE'V6g$3]je!]=GR@]eP;Dt(Ks(UP*%:"aW#<N.delcQ(\bG@#>)-JDXme7E"-C\lr`R^2HB9l3"1rU5Be!]=G=m&oc2Oi"9nheIj?87qp/=18Bgk:s!l-*a4AA</EflV9M%(j?*g9/`>D5MOD@r%aa:cQtE7c@10:9fAQ-?b,$03^#3lM_hnmPte`4%jDCV'H7co`;u4rR.)kFL@m@*7n[aUA:9?e^uM`H>'$-'%[if\ABO.]g?JRs6@P-cnYr"N/Bm&RhKgRog39:DqQ.C%\CfiZ*!>pr+-D-=Y'FU@?V$a;)g=r,M[o@+Dhf<iE2JS?Xi3Z)GjYVo:%SPE\@%Q02GAa2FQrMe0h_PF2#bH,hP0MB/YHdLTPF4StuGLl(gS=8M6Nk$s;1L`fPeW.1MR9[0*h)S3*ZWnWX`;8O0Nk*VOEEX?(%[nN%/oU*8P,Ds5rk0>0FW'BK`q-55`0m@4kJ^5?YpUeBc-Yh/hp\S3HA\'#9b^#dKo^F3l+Sg.GAeCRM4)qh7fG6?Zc!#fI''\Q0%*\P4Y)Z&5=X_8T*4D%4:A>RGC$puB[YR@bb:2H7;0!g?BP73i[D9L%%Mo^kQ7#e[H\U:-kRt_gQ^=[Jt4d[:hO4O8IFo#[!NN8bG%Z?<:(]'ML`%:u0)d<PQ-foTg6O+,udK++_jG>[fjXN0kLN4&CPl3XTsX,s)M@0\<pYVPO`Akl*/2^HuNkJt:5qAOP]KZ\b1p1:h0%]C&L`Bu_i!;RX&gLnfFH3g-q.%.d[X@jYO%AmO:,Tteb;d,&kgQC.flgOcb_(9P0q=6<&%3'"fonh$q/p?2-4rcRA`n')/E/U"0U%Q`4U,]*+4AIWJ]#@<DgSa80bWjjpHkC'r5t&m/k&GK46\@a)b@)@?2N#lLtUgf`]>.VIP=+eNH27p+BReb1BG3OZq/3oNi+q7$V`%1d0gcQRClHR87@=;Vl.taD-ikE5DPO%e;uWS8dY3^.HUg:UkJUX#XcV>s$]cB9=7I>@1k,SXGn@hg<^q@dVuL?F<Miiu/PGq2LIE%A`\4X7'dZ2\YAbu)Ss@?Y-=MJ'5O9WgO8%HbAYG]o'Gr%c'"Id2N1KAho>7s#ksXFCK[8+p11_=bd'f6)'<cQMOC:qfdEb%]'\d3%I1B?2?tE!Cm?UZG2Kfe3G*'Y,nKlcJ=$f^>=s'D#moN[@Y'\p2N!g'3\YoQfC5j1smg+XELCfGLC3*X>M_fhJT/A!r@PTqmDoj!N%#Q*O&c1cdub6\!RGDiP8D!(W6\8('u>>mgf;m5&4q/q_`K7j-%S=c&?bMsXdX4,1IFR)!U&XoM&5@p&OChofF#!4H@4e7tUP>+8f%-C8B>A</*0HC3>do*!t)FjFqgT>7L#3OeJ</^?fQ^Q\6(ZTnB=2NC4moU/WA204Yp/Th<S>t-fU`ma%e9m3t",OIao4,;)4gq*JC%bD1.a0fdL'k+"&4ld_C"VbKl9,VCWu-8r=;dChK@s.W:`HaNlXn\hP\<\!,7"fNb*c/g6S?(4'8fs=[nRS>tNl7/\p7o5hH(>.s/%cm1`Na7KMkc/%cIX:B`,Yfhh!i66]Q`@-:EW`BF]M,!G_jL/b+Zse1&*LG/BY)I(>+30k:5X!G_M&Ru9#0h[]'A3Yo8)&c)7F;MU%nDoJ'@*[Jdb$AgUH4=@aEoUWdj.OE^m-WQ.)(#r.PLU[IFQ)V[cS0Ip\PF$n-DR-rZ:X28+'`^X%J)k2HFehu#VNSVY%<q.=f3P,%XI$:C5-gqQ=g)kTTBJ&#bjn_:ASIFD8M`^Bp=Ds<J52FP#@48$M^=p;(7s@?3%JjVV,]EVB`YOec0s-ILnFBm9AsM$[Din>B1k-!%2^uC1?CYZafr`\3p6`0U)<8ZMQ5@/U=r0-[CL[gVog<[PG@l_8Pkd9'l60i3)!s9e>@&VcAY@[kH!U$m&"sGbLA=Qlgep5]>37(7%8)1*``aO="B[P+5Nr$n$AD-'MPQeSf-F?#Ra8'0P]b[QjEg;rspm<4?G(-VSd6;2d#n>A9\2W6.k8-=f\@0XW1#\.,:pX.\bADDK%g2;U?"#R1VW@+168mm)K6+aFAf*-1=S"o>YPk?K=NqS:UXRnA>.p#7eS(iF/L%HSp8%k)%8Cj(bNLCn0>7G<TX`;8S@X<I;>UlDL%s3b,0oCj9'!Y-!A1`6(Mk[Z2Q/POZ6ap_h+_WGCh,rs0.'HPHo@`q`J+&u@;fV2WBV'orhJ7*(:c"AYY8MS=b8'Ie;lXkBkPm-C$%3]*Fn[TjT@di:XE>rA^`q!EoaF6=c$Pm(h?:Y+S,.[pB==b)N[.')s%*G5C6blM'k7]Jlf/U=(^fieRB=b'7g!#O]u/]\!8RKI6f%,<O$LFIE;Fj!2b7RE'(<6hsbBO_oqBq.rgL>2u<(Mk^XF30[3[*oDJ::qh3<p7F=/O$uQgb6#s!j`<"9^M+^Do$J'FBUPs["\gbY%SUYj4jg'[4=lgr<UMOaZg6r1l6`I![),;nj_qn4%Vu$?=PA>#^6S3_hTDba</$HCHch1LZSW_HCrTplYf!@:LB&0T'2q6i.r>as$%Y'@+A:*/Oa)5`r%Mf\i]$nTke_6olR.d-X[S]S::eV`'ZrCg7lr9@NOHdih$?g7>j5PqOo24OY5cLnM6aQ5[/SXf$/@"mkacLnM.%e^*>_C<`1.\UO8#X0KZG3nM],TUW:.IX/)g@>U0+<'T31.a,gJ2!=_g0:d,D=Zkg(>X'U:TN=A0049.,hm2G8r@S-&j?1.VO0UW'%e^*g!Ua=@[ZX$>7@"3XgkPEk-W5qhiQ-]-0pXE%2YN&kPV-TsrqO-EXrp!`Qqfs)0ql?@TBC@jCH/piQlY!V#P+Ls:RsY*^hSY?O%7$hXmY'-u*;R6>gF8`J)2Lhaan'C#uAetuioCu?Ma%Bg=qQ6.0+gH+e/A,55<gT>GY_I5tlkd)S`R]%3TDa3[]$mrc37gr7G10Cg%oGL$25M+5<*aASJ5J&*-@H@!^k?L5uRsp4cpjT]?NdaFkMWahMC,,7TQef>`r`m2A8+@2/hDum(\T@`9P:ak43GUV+c[rjk;uKbC%8m@Cl*apG%XlEYNHS\0Y=hhhaIQD5iSa,smoD"Wq_R2LeDrkYup/Jelcf9)2KknHcb2cgB?R<V=R*t9_qUqM+-UV&4>X(*6c$$"[%(!lQZ?g,H%K3e.T5C9kFV:]PGqWZ]kGH0OUED*obrDrG=SY,4\UJNb\0P3SO.Heh8<56!"k'qZZ?blA75F9uQBrL9"X)n7+'4S(5%jCQ[1ZVM[L?.HJj6EJG2Ienl[n'C\(SIMpl\UO7MqCRh8CE];\%ME69op.,"lXrFA\@e]V_u(:g7C`)#S^gF<f4k[lFk)JD1C<G4%fnFSc/A0T1/WpBrBF&>f[5"b,DbhbSBX0(&LoFjL8`83^jWK"4e4-SL^*r-X<Dt'ep8iXC\F[MLg.3je-5FS]IA(V!oCCi2GR)?X%B.(TRT&!iBas1G3B7[a&V@Y`>+6N\a-_EJ*q0Wn<`,lkZ5#-KNWH+9^m$^"1(7r%bVoKQs[Q=e:[Cr+j=*m"[E&V.K2KubhpuH<g%q&f$JFM,TK*B$RGbJj2^pG*38F)ORB!Va<TmH*32YQ"(e4L?o9jBiP[a`.-ujW2Z&e#1=MW6bi@:K''4qrZT1(g\7/G!'Cr"g=$[%20Pe=c.g;8_:E!6&\!JHg\K-A/X+ne+1FRf\p1c,E0Z\$!@8=sV^air6cmgE0BeLJkji3:>KAVg^-oUMh6Um+m[K$G-GS'jn+P2$%5VI;W3s$&@PDo;Z!nhB<UCrKH$7JB"7E>K8DfbA[^+0q"1J@mtXVe^q*?K0/rD)E'S&<G>,^%]cRAA!9L%W61,XfqPggE.!jmlJ`%4F&"9iS@4\a\J[#'q^-WOX>("RM0_Soe`eAP@8Q@j$)ji(NG1BA)<CO1d/[]]6fSleC_PNgLL06_]q#l4e]sj/!B9":YU9:K/D'0%3&Nfef49MSae]%q=#AeVSkei(GB^6A;U@K=IFY);n3Hlsig]u4"D%?PNY]YNC)Cp"h`!pPF#o+A:[i!b<l4ClNcO7!'E!.n$c58R%WaoaPbkm)+4,>hIo$:c)N'G5&Mig:#p:cEdH&`s&NXEaC,JnMaK:#GKjpTf7q(h;&AljD2ZN$B8Z:DHuq?Vhbdf];/$u6osb[,AW%_'u9Gd"8H3r.q>E5^%G+h-<4ASJH67%&jbn4Uq-\,BR1H<%^/c%5&4J9)#7Qo1$O,G<rE+drGVY`;n!pN<eDe3Ii&=+f7tG1jKDq%SVB]JEf:J*]]N%#oC1/ITD,_Hk[AlNVZ#]8$N#ZYa@./185BjH7=J#:qf!,o:niYC1pn^EqE)[BKQpAXV)D6jd3N"U$C+Y(oNmsJ%L\e.uEeIt?2;W:e$PPJrR:?/-HgeZCR62>f-eIsB4!IHeiG&%OnuofNhp(PZHH*a,or,`6n(RbXSuSm?!7;5LiSJ\o8JK*"*^@>Q%Ctsb9e9Vdb?JD;XKu[jAL&D$S.=5SFq=Fb0]E*H(`'.ZXp<9kI'RTlUUCZF5#K2(W+Z]6r:XFSn2\CDsWOXbhmQ^IP8!'u2mj!4s%,d91i$T3BP!TF1urg,>](Rb+r;W"?\=ZB'r_N*rLV(W-T9%?^YF?;QKj<o=;$jcrYd'h/D?:]"-`!;.V8Ve,GhG;&=*Ua1g!MV?c%i%#n=Kg_TOc;,j@-m/6B#,!6^kZ8fNrMoe<P&miL?qihY=pI1l`8r8Gd<EEfrCH0446225i8Vup*7mu29p&',-UDkF`s"Rdhc2B&%e'h#KAr2N#_)Q`*b:&+o\KR]%p6^=_,J7#(<UR@G#,9kDlt)u>q0E\0p0YH8P^I<:VV3>2C7`tiUU">U4h7!:jTFE;l0.io7pIG_%p-kYEIT\(!pRf[i0UgOLms"6.8GD*/N,K^XV88)$aYHqb69^mFYr,DSYGU5rLQ8*_m2!N,n0b",h<6S,TJ)=I)8XjLnAf*adJWn%%;09G)We&q_@sfg!;2B,IeP?K_%4'Qf,jNa$\HXlSNeM]WI>3rS2i#bYiIr8=fRJ_)mPNSF)QEAtm0R]$4/[VU@1r4b[O6J)F=\L&%Pu6\s.671Sd8i-9I=;EoK^C10=Jc'=0oD>1_fWr-@m4#](\h#dEJ7'=;LC>Y.YBRco4I&;,=Zc:S#u`%>u^UMj&6`f\]XR'DRk)]%S/fC(#>CBclu1St&0h3"gjD9I>D_?t))9?9g@l\ag[E[&TtG_R8)B%HJZD&1B\XbL*:oHTdlq.7oGeNRJ0(a*`LKcuA4>\Bn>)+r%*(NHc\FD"e*T&<%b2)*Gm-i76@t(g;O<YY9[QPAd/3^YY)_D-#2*dXMK0.,d!BjQuhO_._:gYIX4I4md9$r$qSl3[]mAVOd]d_:3%d$W#/`uSOXLOAD:M[SfSSFBiK/4R+hj19Li#/I9\8Kb(1l:4St*C[$UJ7'#d<t%,+dW)tE[rOPX0PXXABKj$1oW4Q`jd;3`NW:5>%SO^9]UKfW_\khp_e#tk^MM<NL,SkDHd4iBRC;G=lS39GAD>DlTVGV]R3pVV$U[Yu:3^O-G@0KXFProF/Tq1PC$BQtP3'"NL,eO.F%<:LM2H8Ut/1WBWu4=TZJ@,LCDriumh`VlT/H3tZ_%rX4RbO/CKPfLI,;4(u]BOt[4$XIf+5)X=I4_;,:*`PomQTe\E;,C$5<hW/i%LC-J$d:Q2CNk;+RiLg^/(F?.;#-o!Wq;C"n7T#PU*7g6^qK0e!Im92(3<Xgr$M'U!<1GIrB_KY=;O/f[m8@F)a>#/bSXY)E.>K*s%`j,&(_Ya-ho&ntGUq7Lp_'fqZ<+;4_Y-d87k$-HL<>^Qf:,V*7L,\nMCBHCXkh<pq**&ah3HX&]E#:$S-*auk"5)X2ME@DY'SNqZ%=-=p_)):9[T=![8,bj/HUb);5&of$ao[G"#Mg==dod8A^i:=76j@Jgcdu-@gHatHD0e'obEK.<u%g)%@'(Z%,JJe*H;YMflXkWn:%Y)5fT$77bMQ<t0aku(-69T2BcoMYeFb1-]8;u=Aqgc$5]TX"bTC&3.-<(m[rd&7!q@s<C':b=tEY*7+eDe;A&doJL]E*/*I%Xi]@%]C<CE@4mqB7d%`KTM(=C"t.]J,Q%k^_Ohm"BlF4WZC;&YG^(\GDmSb2UUdH#Lt^CfOgC`7T`gYJWV?MsI6lqphS_-'5_'Y@#;CUu%B?dBRO'32X?FBpF!FaJ5^8mHa/$M=/pL'kJ%AH*V:``M5/B`T]7R_STab3*KTjhOCap#SB3NjckMJ(:chMeIHA:)Nc7gE#C3oP-Q%!14SKnlcd/O+ohC?c;ac+];(hLdtE*OaGs;H0L3%HNtiF4:Z%ONDu!&XD'.DH4G\;CD9@En_iPH(FNq"VrP$9\^>8mL>bI-ZDe.I%DEeKK)?S>h?M6^fi6&;$*3!DEX.m12e[fh,)Vl9ipk+-Mi44ABNIqHVX9S/DXPA^^pGf[_rLbYHhJ9[prKHA'?hi%,ZdW41]NNRm%]J\=<5*.gS2Gj+RHNmIkX2"gVCUG/NlcTRQr4(Kcg*9*&!nk9d2&?k^4=#qZK9uGJh;f%l]5Ea[.JQ]'cu/M&]^^,3U:L=]*$VY-%dMfmhn>W>Y`TVd:KOW?i`O?g\'kTRbUU'CT`>KK&O>^3V1je3KC.RhNN]%a]1-FfLR0`fOA,DN'+fsFpNufH=M==,n+Ho(c\5Gle%W$MJO7Q84X\_<V\NU42JK]l?q:T5V4djQ--E]j.d,lp99,=5Mord2sF;Z;14IFhM)4-8YBoKP/j3A`f&Em?XSK<_[UA,A7DJBaNE%0DF5).OfKB%DA0VAnE^"_bl]KV,1Bm.]HCA6+C#W3puAs=LuEoJ-^qXja\5%J`P/IYTAJ8CVBo?/!a%[@umA_+V=bN`]?XQs3W?R%.gVgF//)\*h2)9Grn0*eqY:,=nO^Chh.JZ#m'9?Yl`@ab"<LP:h@1agg_bW6#(:[TT1b<4p*\B-]#@24I@qO9*XJ.3J1lEE1V4BQ%URtU#!6O++M)W3GPqZ"j>p6"iji3M5MsK+_d7ph3`lC;&EasLD,-\TRqklg>T>0T0f>gDSjP+5V"DI417H3LGbsQdDP'?F]9?ZD[%glMfMp5dpNaeLfkgGuQClUE@XEpnJAOU\FTKa#m#`i^8JUQ7A'pZ?D\kat*<1$@cT%3gG=Z"lr/\En.F*aK3<DsWKWg!So6*noP$%@pUZ\:]$UNMSMFmjr:oWM/PP`o;WQ$oZ,kgB)Lo^bC3ORUXS*Yq"ir:Vh0uEjU_krPlE@2TPh<,Frm*6P5fN0lM9EqLcp/C0NCg7%\OYNtHN:K=_:f]];%7/>07THslO`LlN%+r"HjYqQkToigT7<_'dr3Vgp;a?YiN9I'/YX)@%2M5hrUA.g`51fZbi^&m#9.aMa\Ni3%O^A@2E2<408$)K$*,bPQE:`QJ*:kZ/m)cS.AKi\6Jt9g.&S3e:PL1eek$Apb/3I$55C6a2/7`6P`RD-FgfPKjpgS+;N!'$qHoX4r%jUCKEA59M+Z-0IlE]!W-d`P\HRKo\\(%i(qH:$ol>5L$8"2r27KE5gJ*^k64BP[*!k>]-<dchPI>9Aj-U3142H"YE/0-2Q`qq:EB%*_X5Q7sTGl(-E7#41Ad-5FqeZn8(,?gj9S;]<`_$dJNUG#IqC,D;\oFQX9=`k@S30O*%Lfn<IW>pX'iK1<Q_o9CU)0*fEKPT<(Ll%cfU*m3h;n%LX*oK?rnm+O$\7=2uP&Y=G8!aR!)#tVS?q2gC,H2LQ:lIPMnc]*gK8i^;ZL)e8D`)q:Cb2"mm9*+S[ebCf*&8;[ra*%&?OKSUOtE0\2t_5SZhMQhTb#gQRKo6iJ[4paAnEIRN7ED?_/(T"$D;)(rc"9;Rh#A@9N:!h/'b%-shs9VLR#(r,A?U4h)90/cNSb%:2foXi7/4fZA^a#J09A*p/TZ!itXOW>DecfbKX_fCat$"d3i[NQ<%C_jH*udFp1_pS;))qH^+,A1Wm]MV_=/*/fa%.46%f7UZ'86%J^Rq]-WX"1-olU=)r_BL2p'IJg]6d"?#oQe2cO/P/ib8)PoF8KFI+!,96IZ'\4UXtH#c9#@oj_";j.a,9m+b2QUNi!dTs_Kmk3'.%6Y#gp"dc1,n1n$CV;)]<i]XIQqm2';3qM%"f83fABB-rIJ"JGEm:e616=0\a:!Jg<%J^LHQmfgp5..0"cl\-RT13HY-7+[oHN"<3%,JPG?mF00T_In6?.dURO5.uk5iV<A*R_&AB*;JrW;aVEDKuDrg[qA@F#9kS1]\cTGki[#3pENUWjjegmr;QY)'GNP$%i1H*=>/[m%3*W$SEdFrB/aEr_G8(b:.X$HCq"#lDUS,DnX56:a*<h.[A%*$bG8(`R@eZs5fQXCn;)-/(pF8I[2c?gp($!pCa98./a#BacJb:TW%#eO!R:jkX_E5*lWl3f!X[oG0"?aiofd&qaX)XNu30>Iltd%Op!7B]*J'JCM$i"_[?DNe@?!/&J2mOH/$)4OojhJJ<l`lf1U(ZXKE%Pp^PE3gn<FMq2*S61[3tkjSigs-DQWSlL16IPC`HcZ#<Jne)F(%oae;>!a-fC*0l=J&EOYjAM&kbV`!\Q]*Q;9lt";rmdY*@"%H:%Xd+.`&Zm$IXEu%%QQQ2RIm!3UoQJ1C^_#2@%\;JuOHV%QQ,7oGh*_cL`KuW9rqp&N\pD#t]05XgIA-7:(DdJNVe_2(cX3cUDS:=2%g7[?r^gj@!i)p&r%:;lKbB%Y+)XPeDfm*;8i0g!WdFcp]H+b3"Ujo!FIb]>J](ir9r,V;MqWkI8i;EU!1lds3#O]up`,`d!O'(dd%HhquE]J.I2n+:"V]7,&Ci!GfoedFj@"P;k'G-t"<YMej5,ZfI44L?Am\]Q$YgDE.EELKW)X]>;@K-R/a3E%Dr<.j)FQY+9#:GVU&%BjWXgBkLXB[m&FOgOo<O=7'JV[bA^h88/kRZYJK[/9]Dn?I5">()[gkmC92ai7-[,AXBKiD-91m:63rH50Oh;[I4@hN6#tNnAZY`%Hjm.\]?73AXcJ.T;V6GE!,(+0(;e2,1N>am6>5.HA6?)BH4q3Pj"Un#>D\<YclIh[X[EB[>hqtbge)*6L@-HHDC%'VlfQbbUV"U_%93%N,"4mF?KncU=r(?]^ojNo6^ZF'qE*7S=9k5C@mijT+,r-B_'cOOo);qFBZdALBVn8O/Mi:bhMs@c-a6Q3*J57g)N@?`nRsV3q%kM/dFTTdd^P*-7:YqIjrIQLenerJe8DBbi1F@W$E/!6MpD"u=Alh3[*<[*0>Y3mDhDC%&G([b$bj&R?k8XR*rNE_5JW9&?!nZ<eG%URhLQ.41RSotJdl4kBM\1K5rM',n=m)(<Pn+uFT[)$d[0!LhGr66dBj.//=aD^W.;HH*bUY,^U"Ho1QqjMOtA,9];(9nclFonCER%bkX#=0WqZ>f\Q4Z`m>`[L(YA&;6M1]o!u?4ERKK\BFOQNSFdpZ)FJol-U!7o-'S3`::c@B^P`apAB:=(?A6DAiR-^DHH&4S3rS0^%nJ5q&]egpcGHUcs:3mHh3[WqDNKYDO#5aG;;J:TY`m#\pW=[+.YaMpd2n<1e&aZJW4g2fokN#5u,?,[J?3k`RSqOi!f_K^!&t]+!%]#kN7C,Rr(qDM)p&/j'Sh[3GB7t6HjX7bG2EcC9=.V0j[S)J:eD[YZQ\RBd<p19q&0/rO[7@t?Q,ra][S_<Po#4n[(ag!h:5'_Kd%"8A$`(_gH%^"ED[&-b)?nK+humAR4*@th'Nh-/LI4kT'G#M`Mgg)raPeVF)+he&Wc@_=iQ7E,@ui$(-\3cp`BQWl_QZj-f<jZ7En%_c(+(!aM_=U*<KMe^?c@pA.p#f0UFKDgp[4gAP+[J>(/2pt_PG*<G<4l]"(S1m[1`02M*V<hTZ3f2WLb]MkWpDR.>CIhQ_]")G,Z%H2ce'G;Rff5&<Ytg%f_P*,k4pQrt]gmA\E(HlR(ld^<%#f$DIsGWJR=PRMr$#!5=Jj*4`/G7)ne3mCrW13+<Kj6cG>QT[ltY#.&o%O;GBm(6,!p2aOX3(?D5md3e(BdXku,hb%51;Heac;nR0oHfG5MX(]$['OoV:P8-(1S+j(2kd.'72F4O2(09e<T&mrYV1l%hoHl6J%rOtR$D!mk</(J9D+7?D!@66R.:jna:rON$I$J.1We2aDq"qu5uCeL.2Or&%F^+>%<6NQV)-6QaJ_QDC6&eE<j5>ktfA.,8_(49<a%\qJ\ZF<&70]4;'4=!FU*inlCd\9[X&m)KRQM0:Yen`'#Qk]o&p5tt)Y*iptY!,`KPh3bZHAh!'ISgeC\6QBIcHooX$)^Kq?7Q5k^%6dZ@YaUEVX[^\0K3I=Q:EnH8eD\'\;li[$N]bm.7OLDeu((a,5Jm!VSaQ)B?JL&lRrO`2/cA%V&IQH(r=Gn\^=u:tU=Gt*]=C'/*%qS[N6:KO0k:'3I-*IjpHcfnXmb3NAK<!,0JrV5>WU4'.>US$N?lLAY'^hY0'b^l_'DBM]$46Om'IWAtUEbEh%2`Q6p^9lkU!QFjP%]cW%hnQ)V%+(sn3I(Ulh,l%0g#_UQG.6d,G6/YE(.U:OKonh!g3"+^CUg=>)S4s2:!h_/dghdSq:(CMQNi&Op>NbKDp=IrrKkum<%GkO2o#@\4@h0c\rTeW8iIS(Bnah8#2jM(q@nacPE5+K-[8f%ak<5p#iI0j<_2@nC^:k[]Ei,OO9&K^`N]Jc)9iUo\egt:Bd09IRU%&E,sW&l%]P/!$ho/\+/NgphQJPM=[S91rFsY2t_UH"At=bOt)779Aqqj-?<QWQp(\9!8ZMP:L_4]$`)reT.Def46hBceRCS1[oQu%:&@p)7[BtV0q.)M1u0?K_&iJS/X'*d5b3opIBP+UISGfqHWH8kSIc,*?<(P&36_=O<+PA1FSDoIbpV[`-/E1\UEtsRf=<UDG%V'2%U@j)nk=U4Gc-b&fCq$:Mof4d\N9fIT"E$Vg3Z#Z9.jSA2KJ6-/FIk>;R62[P?]c$h:^Z$k$eOZd(QMSIk^=F$'6`[,P$?*Qe?XhF%oc_s]%R/'i>*b$h*H;&"PP=o#6&KI>QUsV(RAHnD"R+SC!V'*<!d!1BJGQ]fgN6M&fe4.Kk)HeYV[9fGm=i)jo^21Za67(P]k_QI%T"^2MPG_H\Dt3@OHhZo3n]P=b"`00^csuk3qJc"(43mZIP%(%WNiJe#hGO`1[agk\mppOsIYZ,$Q^85SfCo2nRCusY0KZjn5ebgY%e)4AriUn[%R!i0:]GR7>*o)Ae!21!:3o7ih$8[JIV.<+C_JJj:@4']^-d:Fa%k,?oG>NBrn;"4&1B`2t>_)usJAObILktZ'%/aV3%Xo2B/-\'1kSH<GD+%!'1.:%A=2t4HU.TC<D>718[X*="O6Na+:VdNm`hC8aWpCCU?9L]s_&@q:%s7X2'5fOo\f&V83qsW7B#DP/I%,,<)?A`9TXk"QS9=JbJu(J5dMp=@eC`@C?F1]]4phVI%dCT4uPjggqh?sgEZji&Wa`@Zi3XiDT$mX]mq>(c-9j3ET)b1+!^[B9qR%O'nr_j2%X;j7F76kH-RZV\%hto]0(:]!8%lI^hSH3'5dp`Sn@j&RgVuTnJ!4FLYWOmDki</)*]oL>]UM4?1en`/T<2rTr2g4G'+K%aA`$*kRkh$K3a2ME:TWP(rH#a_+ETpn7aPtQ09)fJOlolm73gTL%0+E^(S,OHi8nH'd3Ed4?NkBX!Y_%fWm)]h9hDi-'JPkII#8u%-/_N@VU_"\(qWHj(/)iuqV8,S<4.=ad:Ys_.`!V.kM(gC@1kBRg(P%lDS$hC"+1g5n4f/;O7*`nqB0#!b!%sk^Nb0OBq+tMc;fqV%ld=c(Y[462Z!K0S.0l#YU?ZJ\o#K0pn8])T:HTjn^Rq),YJ&e;m9F4u(bX.,ad^.TWN+9Q.Tb&DAjN[N)MJH%H^;HInfm:@8L.M"%800AGDpLmUBmKZ)JBrb+N[)^dlE67hklRc2!FocX%Zqu>/]qVV?^X.TNX`3O+?T#=N83rH(OT^7hMm(E2r^Do^bONIqCW!oc2&S&%X$<f+:OF[bg1*idoOgRa\9Fg[)'2&=\ZM%''p[d_X-TSH(bPE::91Qt9;[&WN^=>d^8hCUk_tu(HQ-o:;8TdA2TWKtQBpHgE"!gK%Ql"*JFBDbU1i\:k$DN5K/B5jdcXt(sTn0%ZC1q.=N[qR/Jb<\nHXr])9b;$%D8OEW9!fXfSe"#64'7#XI6/SIdqCn9>7\3/@L.*7%(<8dT,9Tu8g79Na/6O/!%IqH_:fh/K>g,ts+&ALKSf6S(07Vepo5"3VT^%j4?n82un^3!Y0OE+M(*>[F&);s)<IE0:6GE6Y6$QKD%F@WLKo6(#n:f&-$h5HWYdHG*I_R5-V3S^P-kWsGAS\JP%ENS^Ie+[3q'd"__'HO9U`?0#SZM5!iEO)_ol#FlY'Kg2Ns$[Be-Rs`(%fg.LA>D"GtW3?GZ)m%X''G7itDhE8a((,r=d&f^T*<jD^0d/tbZp($#J+),Zb5.:AGRn?XE:/`*\l\<M1ktGe%Yr^<_=co]mVnO6%&@dc`Zb"oSL@3HmlYRQF/%]``6C9KW6eD.PSS6PTgGFn`]Bt0B9sY^4r`TcH$o*sQMbUOl$R8^OJ5Mo/"E")L)]I=T5D6XI^%b36%_1YZu#M1+!mZ'0d@#@H!MrU;2)GK%5UcJ0OW='Y<_<u&E\5FFZ'pg$am&0gPa'BC62r,=E$m0&q9`>^oiJ%XU/5+Amp'5)QmnS@8%GeC,nR:C0i']W@mO'#9rrMHsOX_+&u0f1TXrmNhHC;(OPr9)6XCmb,)E,T.Z_>H')R(VX0Y=/:s(,iq7ma!gYmohd`I8kV)f,3fD%j@=@UE:5Dq?as<S,aLWG%sZp3O#S3:7O.01+Qbd"0t6pKIC2^`^ntH+HFSFaQ!FsmgpS02Enh]ZkP1&aVc-Y#dn/$jQ"6O:/PU(d%NRGZIL*Hjta9=G1d9o'V*@)J=$LNl;mGA.i(t(*#rB([EK>\a7rS9kYg^DPkZ#6EP=F(b#[e^'@UDnSe=4^hMAgZ=2B4O^CTn,@a%!)4&2I5]>!rT=j4m*A]UK_Fqf&gQ_snG6W)6,#&`akVfP=*SL!O7gtfIIH%Zk4RlumDO["!bjfOGKQe`EP00%Mu+&<c:4n;oAAFp%X:sosZAhsNZA$hqhSX!*[<_IHDOS?WER]YK:O3OMFFP+d*dk-WcP`TF,bO\FGk]!S+9:2"hANZcmJ4@7i@fY9IlD9j;GngXT$?4_%:F!L82EDjI_\4$=(jXT=FN.qUeV?;o'RVt;'>_imHZ5`j5$m)1.3V[ASsnJVph35:]kdXO0KhZ_#N*CKGSg36N6/b?/&BN?K.VtU%Zi$iYJto/2oFZjGTfF])47+"l=H?Z2FpjqC)n&.0T1ueUT8cor_L&2M@lL"K/rlO:%TggJpmTHiNe^4)rD^<b;"9j-[irVS`>)T$%1V`Cg-"=!Z.n:bT^#!0jUs%";pP[p_PKA(W3I_P\h=OD`j4_]a#i's//?HgU+g\tfn*959hbsF09\KB!3^d6(6*hhIQLjUjj?FmQ%&#1NLn>hi!G^+Z8&PVm9#Zn88R`ig+$%h2nBXfkh%,N_+bM^h$F4`0L!6Lge;aZJtnFXMn]_-Yj3e\5if$Pq<<2`_4NC'7rgt1L;%:)\RWr;I1M;/q+>q7^qXo6%C+>#.2u?8@#NWuk`+mj5+%FGachd9#7N1V:>0ETN208eh_5/*n;OHVl=jXl)9tn_sTE?!OR8b[p+5%==h<Agk)S/b_21P5;,Ld""TEp`<'T[gd]=s[T;oNl1$YQ*'9%sFJ<T:cR[p*?J]"n5Yc(OSi\D;$Rb*fn+V>"/oP<^[T)P@f%TGL%2[@NikO5!Q?VZ%ZY$\hiZelU'J$nk;g"O?)`P,O>a#;G>e"_@FUQ0Z#M"\BZj>-"#WegAXlqJA.UFH?%[M9hNVQC1N9XlsiZuBXa%"2CFNYDZZ[5gheeR+D$RgiJrcS3EM+#Eh+o9\<Z$T.j'U[3P(aHaABngma\u@B1+WSs<u;r5Dq1l/gi<YWMFW/q8mNk056Y`El:j%Zl_Is0+jTK"ULG,EZ.e11':6[!;o_D*]IWR.BW&_U,(._"C\>J^sPe9[lk\ebftkKhL4u5!ObV'oV88%)/'O?URc8]7=."N=]+2D%d8TqT-XMAeiq=-25k1#so:JHj'Yu``k+],_?Z>`8nanQKZSt#LVWg,IfCoqar*-:S_/7oRcX/X#[E5"`8:%jt19oPb56:\=i"*a1%?(HR3P<C<Vp>*4Dr7S706j]Wnm5V_i5CXs`;TJa&HSLUalaoJ5Kg.W-[!Hj2lkj%\q<pVE2#:`mkl*D2UJIU(ld&k@LRUJ.$rq:k%^c/'DU[Um"#;AnrD`,3&P#:ZMI)k2_$rqP;lH8)92KE^<I/Dk3kRHrA3MRV.Qme0fDn'esq;A:%@Im[Y&4HdZcO*\o$ktMELZFc!%_W4+.F)9tFa1(71`/gBs1EX:@?qY%qNl.p-J"$JQj7''Pme>'KLUZm2lC0D/hE8HAQRk4AiNBh(#o>o-i^8.N<BtU*g%!;!*'</\%)0`UkGcP=EP0%pX!-g"=k,O4u1CkZhJ""+3,6ZlmG!Fs!Ee+2Ehll[S`+naBf)"#.qH*a\UU*r>iNBBWI2V!']I'e(5=YEB_b70g%h;4a5S\"\_<$/1!_1Bj<1L2q9H]&*0IdM'H`ku.)m7(mGiuI`'1L+2oG+NNZ\nu@fG7q+9i4*cR@qnXp:qLXa^eX?X)]VpsDnm*r%ZA7h,L:+i0DCo_mKTi13.t1LVliG-X1$HQ<Nn5)bCX&8rNZa(ogCQ`&nfFjqe!?oF=rH8;?Z>Is3<i9lj!V)$Y,+VeE();Dqm(h?%s+n[T8%+$*R;h"f25WIJlYiB5dpJ-,[>a!s7<&YU6e]?)3IQ<Yhr-_'`Q@QH0eZ8BJWfsI3So/]ZP'r5)qfsoP?GDV]GI\5)hAIZ%od>WBInOhBe-AV6kESO*[KkF$aku1g4CbLBnL7fNG5hD6i)8T)Yd6>cn%W8odVCHe)qCS`VsK`[gsP0n%gOj-!mp]gDn6''P&YU2%U&u5"r9:9d!ml$qTtY79]-!rm`ZQsa8nQAXNLomaYBoH&Nmj;shcOonS_P2%l&H-;A*?rZ3:?#,#Ii.L9*[C*,&-(=.#C_h7_HN-%[ge6P*U=_7G[oSBG)ru-*sWUL3URp(7irN0l.6sEb!12-rFL"]):*B:GNJY.X=N2<]D_=W-;&e4qD"'[!Sp*f:(OBP(DBoLLGaVM%BO#\9eem\^[sdluLkdXt5OT40@bpS04+@X9kSrL3:pr`8U=Z9&=4R/P4pr!?GP]M#E"VM(c+kg;qK3+!Fe9otH1",M1[6o3E0"uT%+77\].C]N[%82T(gkM9MF1_4#*^!r=)/eQPrfp=rnNFU%i[jd8Ab#*W<]p>+_KioecBj`lHFTJu2KAtF)m@#He>QXDm\Y3orNVqO%n)W[!4`PRsG0qQ3Ge%^tbK\%0ARnT$E%gJ'<X-qdpHd#d02C&h3+.YE&W='oNG0*9&Ollj.2M7'<4!_86>4:_Z(ql/KAh+@?<a4F%P#9AF@,KD$djnXAL\WYo:A*bV>[&JqJX6Ho<Pd@O;Y[uCe]L_95+S;V-Vo2.bJR:$ej-7ZOQ>ji9XdK2jEE#I83Z#JGhj>J%'C<_%`Du-^8R*o$)FlZgqFTIX]l#<H')0/ZVq4-R^Pbm+G^;,EhV"eCIQd+jNk^QTL7^Y-'CB`V50bu+CB"?jYt&lE3ZZ7EH8$H<$`43m%aSii-HZLl04KUe2]]nS+gs]ob?VV-`i-!c+S+4Wr5?j)t#I[6bb]7g8"a:">do5FJ6%cR8hU+^A[l2cTcM#'i>P,=bgB:Hf:"6$j%ca"'G$sXm#<H`\,*IRN\2MN"am[e6RJ($T2Qf+pRZ8$=MH90Q\c#.H0KH2tjp``tm*M&2H7jmdUg,VP,dJbEcB4Kj[10YXHfGG;/%]8I[#?1kRaEA=RBpA)9tJq&HF:'!O=^r5,sdC\jo"U%&0D[`0YUO0`g'V@+GRMUr4%^s1kDdBC\CNM5X;DGhH%mMVFT9\?IGa)SY%1jBIG>uZd#Fh3Rhr?=LL.Y]nVHeO=d<PYKcVtV+#@]U37hLh6.HecH@I?-J"c!2YQ]8\J1."OHD5VJqhMoV@p`5Gm.*/KGIbWA-?%abKG@Fl2s@O1T2:,IF*tOeXZhR9*JJJp!a(7i`N8iagk"5:.&jG34';!FP#9\?QGO=Ulf\5:f349*;4UYQ<N**-@.#\6K,WAX2t;%G/LN,8fO*f.l0f`Hb:!"T4QdJ?JXYPkl(AD\Z8(@oGE-NU&s3*PILSd.k?[/i4NE"h-m@n,LI@>QbujB7tUL3m^OY'h%!??d,&*<%*Jqd4&%@1!@S_1P9KCjX(XhH1`dG2prpFQ'5*;sSB"=E1?sguV-AT<smnI&s@E/B]:uG)0;,"-B,(&<>YG'_sEm%p:R;u-2/n#9T%pdgqe#8$+[oYW#S#'mR>SuEUBro,@1<8.flf>?!Dk95LFGbV"Z%(p6#?JO+UK$I^nn&HTeAtB_Ki,)7%45U'[Afd2pKlHVEa<T&5%Z?Z0(`D5pejhT.V]9O`$bI;25bN@nCLPOe^WsXk@-=2bWRiMfbJ*_?*&n"U3oWTS!hQ4IF2^3[1I';Z96tl&>cUH]r^:ef#DK/F3%h;,`2*:#:3#1-O;h>lXo;V]#i5kHWL5Yo*k5hoX-Zqpn/FPKCS)XEMp&8f-^/c0q0"hP;=*In<!ooGsS0GKff.!Be=FpQZCGAu/[%1N90Y!LJ#]iHSnL8-r']`5?Z4QBDi4X8&Or4AWGiFG:O_^_gF4?j96,H$ub>p?W't13<<fcPD3jkhM2;K$B8PNq?_E[lW*uq9n[+%W/]g-FMOL<G7WBJDqA#/ZE_;?Q=HjomDaG?YKM'H*e!@!YYU:.p(7fN?@V]Z-`rB0X*&0)&(a(s"8-YOmQjgEH\b*u07*>Flsa;J%m):K-cFSI7/:q)n(HATrD-fWdU,ANlE46lp_cGee4T,3GXKMYP4C'N^"N`d]oLV.S5U*<^5#t.sr&PTjIBeLL=9-(HbOP(g[kjSl%V),E)NrbD]p5$4n[rQGi(kW"g2r#tp#DOU,ILf,NQ)hcM9AYl2Gi,f&-b4`Qq_+_Q3d@QAC[`W7H#l?g[;J;u7)k^VE,-OkkOWBS%G\RIW@\j<j&$FqsBnsn+&TZ`3!RV_OVLWH+#e.7Hq:r8;m(J<m'T:0!#Yl$UEo6>a;mD_&:q^&,pM;"+6,jCSDdFdU\*7kL%JDgu%W"4Al1#-Ngc1l>@e(VT@o`!C=Qe0<DE?u42D!imUEW_69mc`7;0T'1Er8bU1]_et6)Lo1?Rn-JYpsrD%&KIu<)7eb[MKaPV"Rf\=%`OA`,]%h`YIu9f]E:`!h;U'2qA#PhX%bI0sNM3BNX1F]GoTi3Y`ecTJ-Ef7#)FHG&-^1*6+*3M$QKio]4F91(m"X[RiRUo;GNHq:%?[ERiG[i?SgKp:7C>+GX@=>d+DG=sNQ3;K?YQTDI];pE>=A:c'3u&:@HMY,f-S#VeEKf,HF?J4/gfqZ%LU6"PCiKpXD@53k'2^h$%?Rn/12tW.of&JdC`>IK!b9@ug)q^%fo"c/<1nH,7@V/b;L!^%+-dRDsp>s8'4&B*;QDrb8m0,RAcN4Y6ql1+[lf$njQj')lIP&O^%l\dhMAqhr<XFh;:h;&DB$\sU]bAh=%WX/rZH#`AlCi-JLI)i.g_oZl*k[A6?pL1)5k]#Y7k.`ScoUWHL/\d4k?=PX3g"IG7LqF"#%p[\+7Q<IDFMsr#'be]S;a%Oh6jmi65"!?Jr/hh\B<BSVuT+3A?B;Y=H7mTLL6Dl1DqB&Ls>g;MD[+G%hHAD`qJ="a),/-gG<pmqD%2*1VuE8I2>.`UR\m[5ELqEV7n0j?AY2SMBVa!7LS-PAP`;#*nZnCbkYPgZOCc8H^',hnmhkL0MqER!FPRl-94)mh],/D:gb=$FOi%ki2=.Q_T1ELnbfXF:AUcN>!-VAt3`\]s[Io,B"a>pb4B[^3hakp>t&gQ1%W-l:*6th<Xbq+$SuUUf;%EpMkK!ZUu-'pMtQ"]1Ulk%II<tL,#k(M&XpJ8GBu]EWP)"M3(L]<bLGAq&^'1([Yaj0<#dL(O*>h,81_K9rhDd%T(or<lo\F>UN;X(o6;3*^6oM$pLWk8DT0M'%O/Hp)pu4fi`*MKM!Of,">hq__U\dRl&Qe+hZ,&Y/>u-ot#+&6\`P2MCr8TONgY.J2$=qtt;hs'+0tmVb>66Nc<kCJ`\-a9M]?FfG%o:LVBRT&89'qQ3K2O09s=cLnaLKP2b@.p.-PJrm*;QrpD\iU(C$'#2n`58")QS72Z;d\*i&oO9\/h6J_m0foYo+G/r$Y1Jc?4$00%o95fRfk/D^_4f/1]K.!<rHn5'LjF<Xm9s#REB!UTFUA&X>7f/.+9"A@Qrs-l1GJL^a[]SnkS@h2?G"g]OASumrbmBqDhL"u\d<i!%&P=*g\%W1Jk'#]@)r4UO8ltfUVIaq(f8R]nGVs!s9W=;tMtll:hS!Tj+NGsYYin\2P@)Ju0l!<5==]Y6(iMfXc__>a._P?T&"IMe%SUYJ>&pBTW=Mf$Yn$0nN/.-G3MmLe5H9p-8f8?*W7@A;46a=9O_o$cd4Zu6s8h>ptL-&VU2?r1L[hbU\P0B*d"/T1Q[cbHVB=Fqc%\p7Wjiq6=HLsaZ#;Rb\n>AHhNG,EiTY!5bKo"a8P25P5XGLr(n?2Dkt:@A'`<D(C$;clt.HsRD58#L6LN22NJEI(rR1o38rY^"XR%3:7g\W$t"dm?:(4PMd$$,=+0_q-_I4-9GU?cF\hs)i2YO'oa5D0](b&/Fd[t=ck[>Pn\nl<Au"<@/+*55[g!AhKAP"-=JQDC-,U[%+-l]a`<D3m(J^S"!E(:\W4^9bMn>$09(Ne#3U?m*[u833nh,q_h0aPK4r>,_5."SJ[@rF!']63/-_3=K+O7+PHOE7E'';BL(iaHo%cjPT;hZppP%02^9H69fk%R<.cYK`U>G#VP[ajK,hIIF0P(EKZT=!o#YUu\8FkN>jj[h4!Yj![oHJ#il&S_icE=h_/u/uFj>nEI2]%ke?!nT+Of-dIhp.&@A@nRL;O?.*d4-&)5hhO5]);''pV"F('E0NZ<<%n-f3k#'8G+-(c3?5\I^q#I0JI972G5/d%`^cPm]P1Y?!&%g'gbQ5-4B!4E*Nq5Om.?YO;ndQTb$)li+]h4M5&]0Uusg#):unT3$GBTT7TJe`4q656VSd^#%\kF7J2V]#Vbl-Sh'kIGgF4Aq9b8%eXXfel[G+[4*SC?cuCi@o&oD9M:)R)UNbn_/kV<;=n;FJ6h%ZAmh-X8rg%4U07SY=,QE]Q0m!9E]i2`#"mf0D&bBe-[#<1m%s'cm%GRg5*Rs6p]^;T<Z-Sf.g02F$kpt!ruX^Gd_L>2rtLd#.UiG`,\.;0,irN>b2ji-4`mnSGE.sgLeH+1:^J@"f1&)QA(iI2<onCUIl%)7d5/2p:&",I2OI&t+9i%D-Ti;@%ukXMi2+NZ02+ci4gmb)WJdGa$IAcB0KVchT'^K!n&ebG(>U[k@-`Fa\oX,h:f""=F#SI0Id7%ONht8KgAR&Df8r"HS<`pM=LTEhCQEa34H1JrT3#9!a]KW2r,YNs1W!XG_<.EbWe<^kMVbl,i&<1!!74Y4n6J.'bLs+IeK=VXdraX%n\ora!>tOK6i@A-D8cVLV5HsV@ss"rR6Vj=57gEk!C#Y2\XoXDa0[Mid!6u+$&H]I"$8H"LZN4:I&4>N4BOYgeH4_7n\C%$hmc%9%!Qb=;\9i[QhI)K2Y`BU/n1DOso(Tp<3ntS&_23k4_IEaK;QVo`^;+r;_\n9\^P6//H<)%s.!q'b\+T'>Q^O$R>;+!jf8oqoSA"j5%'?n-nIs*ekXdbs>*NaKHeCtCcfXCOY*U7Kr2MUX244N!njnLOdG,W,[Gk[PmO%t0DK>`ZZEjJ?3IdM'/dO21]3SNK]@Z]LhD"ZPV%Sj<EuXHMtt`L3X+/)t@'IH1ld-!FONTEZS;YiFW*k*MK[n7Cb>lGGftK^Ym:S_Qne'r1_$rB^h#?&X"^*5g%I>rB(N3Q+JC1Ud^o%&gWN!"US<S&:3?hEj0W]CtXUVN'u'W%FU;pJKCiImPTLn[8B-cqg<Z>HiHX]c[WgBMtb7^f*d`l`JBPG?%jEsT,qhj`JD5aE`YQt%nY1f0%6siZ(*jtT3X!RHT,%%@4^Pt28%Q:H4$3#/LRemhQG*LDQ!skJ^8_<-=#':6oiLc_r-Z679oqbQK<7P0/jhF><#ZA:J'KDW%:/?@jZB75rQ55b.2AqhQg5rXDRKgAIq";Im5\juDeD2[($Tf-(;,?o:4#Ta`(I>r!>K;L2YMUmJ$rq]+6=62fL#f_];OdHIO+=N`%+t!Wm5P.p#B4dA(JA,A0ZMWHb3oIe$I5r%&E^Uq>?Jt,T1.4j%m9d@TNhH5`O4?1[Y.!DH)q4YXB4*VA@0>ec1imlbc7&^A0_+s_%-g[qJ$%45-4(W&pj<&Na[%6`&os;pLXc1Mih\>J=dC>0!(d4/DO!a7QccMU#BMf&pXhgh6jX^,4_[VYs+`=<sq)s7(M/m*^8=Y.#%J?aM`8VPZL2T%:\EhBf>_Y2JAS=;X3VKg,J`GHI#VbFPtoDm"Q0QA2/[>6UDgAkkX;[HPN0;e*,@!gN%fuj'?BD(Z$5OG.%H+,U"%Xc9ju.<\o)0H+o6C?8$g\%qlse#Q@igW8V0Pf,d0'iU".s2M[8)$WTim#(OV<.;:UK>73%+3/*K*LVC@cMM,H`S`0kLuSJ,`/ChM%5HqH`iLQJr^rid$O%In^TIOLo:@j%7RV$k(:#VFkEt.fIa+ldJ2g<<p1fKU!-*213TJEqXEPie9k!,6<OGne_:ePLhUGG$P$Sscm%@IC=kS/l+'@4k=&1rPI(Rt1tCbH9=hhj2UH#42)Lmgjk`KN!NXs6)I"VLt)mNRSa<Df]WEXJC8)LA:@i(E.Q:'[7gSj6$!?bO6N+%*aa<jr8gFiZ8(+$?JZ10K-+_j2_I:CI.?b,r*B3Q^-)Gjj)9"93PG?<FaL_kf06WmSpbEMd_9L7h3fD*ncBe<FY6C\k1Z_Ro@qj6%BCd4r4p=Fa*U\.Af)3>5oZ4AY&0+p!O[%^`5@7C@qbO>FM9D=M"-`V;CBIMOIKWPpe2b"GF[K'F?>&H)kGI*Sr6/Ne_3q4rETEPL%a^:*PQ?LG9$cU]PX4G;:f?)5/M`7gA<7EhgQfm*OY:\;FkRgl;_deJAhejjq"UF(C"-YB6elCa;*=e$'I<\"pL$Hu8"S[8;H9HX2%0_XW*_SFZ^Vf1Lt^N@ftGnUVGLZ-CP(Sqd86@Kb6Im]fQ,P+Fi[ArQ"bW=+F3&O;UokO&V]9<K_&oo'+X"BiW/cES$j/Zm4BW7u(%)uA-T%jjY<M4$BG=AlPo/>]K8/P+G^bK@$lfYUs&1@49bB5kn-bcY)C%kJ,:DJJh1\i2RFbcn)J4A`*Jk2%r<Us6p\#bD@ZD;770%JG-LT5!N2@J0L^O5M;V`q\>GQ<M&QbYRk_r5C"#p65-@`B)itc=Z'Q8d-`7EC1F>L*,SL"(?bI-3%Nu-:3A-Gp>a9IVq$:&NQ6FJ%H3YgVB@G]#22:NoZ$3Yeod+g.QH!Ou])-s@_b"*.fU>(m+#j,IV_kl">&->]TL6-/WQ?qo_f).?39al>lY3PUfdKD#*KXc,@.%qB%9TC^=kVDN1rFo&7TTXMp/?QZi`i\ZKS:;0LM[Fn-4XJfq12=0n^#Y12ZOEL5K3o/m%Y<a4e&^ta[V1\M[R^iJ=W2NXCTEomPB`kr%aWqAIoU!J1pi-d2f_Yu^qpAa6p]M]Ap(Z]md=9Lh7b*[&)7GWfRG"W`j+[:8C%<mWH]n[XoOYLC/#T$&Vq6+SIKh2(K(O//Z&>'>%-2>1ZC9#WFdO<+7<H"2j'ng-[3MVLL0_F2/*3<7khO]="fX/[A77LBD8X4Skln<TB4B;=X2!6o69S&,>,mSj8(V>th#N>seNrIE/%Sp1BG'hcP*>KPIeH#P\6A*r8bro^d3_$)bhk,.kB;o3s=BXBmZc%;p6fu&B7Q,,=$clVld5V4M8((&X(#d&Hj2#1NJ`nLi-((S,F%J+=7:O9PPG"o%Ssi/TFe^HDLh"R=dtHhQU=O2[&?pGs1="4L]ZLLXe2pA>f,Oopec#T4.%A+of9,AZX:3^JNRhp4g&C-pDLBaftS%]c-pDB$nPOb/05)a\U,!)dPT*D?bh8>`]21rqMuJhr1Ek_.<n;52]&fO7tqKI/pB01<e_K<\n3?"$`^8'u^FDC+,.'ELa8]dF5pE%Dj6>U2Q8QWn/].o5XTL"%mfj`.1QB!J*aR+#c^&]+FG\gaWN.RAe;t;jp'\c&1#_:#bX'4bRi]rMXi'#3=(O!hgWWhN"7pUkl-ef%!j35mJ6?=l!PVgiD%Pk0b1D,'?j:$^q/\[RbBEpsamb)!1:GBr3KYV+>7\Fha<7jeY5AdF\/:?*S-c;pZp,h*5\$aF`7L'F[j'3c%i6SkeO$I4=FsN<:+7D*4Y+H6u^+8E!'7G#`e'.#d2Zhj;]U$KNC[1WLYYV3M:O>[6^MZ=/<W,d?T+q.mh+Zg=.CbO/%g:fkh8hgU%rQK-d7=6Zf-"1[6;>qU)Y77O"G]qkr7$$+'97!n!2XjGJm]AGSVf(M6LUfp05^`Jm/8PA83IOdb@X%XH:n-_BX5phK5luYQh)(AJ%/U:9IgE@4)o3cWT`CS2=iV;q3r7`^#'WWr@\a_O6jhTd6]j2,W_J*P#h;aWo"]9bZf+#sd8ZN[,?Hlc#mD+*ZG@D%G!I-C$q]#,u%C^i!kpXK_16:0S^h1Q!fV@%Ze"+Og0/+>ESI_(*8<AX_l7IH^7HSD)WDafD_i`9DB*hVf4du')=^XJ8t.,$$\W:N1p^&B"g51f,`%,i\ZA#e[cN_+DT<k7G`5$;MclY!%QE?^Bs>,i\ZA#j=nr-P=t&6Vq%".aAL+4,:%I?G=2DRHb`lj<S3og2dN\Vs+.+iqd^%hRVqK%,i\ZALk^E<iJo8tf:PE4Vh]\k7!+qdW37"t)r@^s34"Ya)FHk!oDIY+9*faMS\A>(q"`*o]at/=nY-URl!L+__;DnAL/H?WdSp5r%@/!D8UKFrBN]$Q[1ksj]044W_qpPK@jl_[8(]W0Y!S$*-hSJnhF/DN?hl3ofbu*#[i12@"ZGtgMj.0rD]11.P<rX3>8)nf'r)0A_%21el#PX3e->$5/WEJTGo/IIakK<WRuJa,bp9+Cfs!d7Q&X"'F5c2VI36$'edr&/5[5m>RQ7G<^LU(sNLo0sW7/Ih,&(a]6;$8)bV%h>5r6j%i*C`X`u].f1<bN$cU'?K4$U#kmAk>+[a2>X=Lp_1Y:55mfi:e!,<Z@8e@Bg_'[X&kUla$SZ8bZNq.>];//5&NW-g;!1>7%!(gH]_koh(\g7J;-/sNWVj,:oF6e%L1GVh!=a::?][@f6%I4XH(_[*geUYc%,J2P/Rf(YQ'`h$X*]Ws(Rf%cX!37dN!D.m[));Yj%&s5%,"IQj?)ArTM?7*'XlDF%=b48+94%$)X>p9_%VhBe!M9$Q'!DT&bGuaXA%F]uOEdPCf":5f5lj70gTF#("0V!A$`Y9OLnKs34%!/$+eB?]fN9`-oG$OE9tF2jGP3-")>D?0fq1Mt?3;eLJcVO0IG&qAW&m*ZsnSgh6[JJ2taBG(_#hTR_MWAc^l<D5T-M*H&T$OVAo%Gd:uq![l:S1"h[F4tp>;?K-nS9EAER!_Eo0jE85s=^rp4r:/iNUItl_GdGI*LqF>5IW[[oLBc*Xe@H_YVnoJ9g`+c.NmNRQO4unE%55lXUTE"k8nXfm/2O(Z?+3gUlhn[e>XH>A1a-qdem\C#R"i!p#cG[3G>=PWjn4?I]-8dt'Cp%b\BW+`GEtnR(ePn4O^W6MsWeAA<%L'jc":8+Xp;Q(Bd@oYk<(:g,*Buqek9a-_!T*[Chat,%Sc"SdN"\D@",V9C2$F\GD2/b>e8dkSOf2OFQ^PF)RWeAB'L'jb'-OqsJ%9FCGpA$*&5TgEJ86,?23R+1mtY_AsU4p=Z7dS`-N1_i[k?@@6TbsI%U%2DJCrN+LJ0IacX'?7&*`gLb3dumYnDjQVR]uUAX^YPhF%h_(gLNrF2NanRjRD\j$[3=a9Bb@t6cJ%LpZI)t1t,W*eo]:9Z59&/Kj6YZ?jPR0D"\Cc2BSCT]WTgNOn+YEr#^Y_"*h_1mM:2]8l%>&r%^oS?&e:<aU!l0ED.,qm0-j^mm;UJ@8%VA30'/#eV2=s:$77Tt5C<R-c]`NVuUos2aRSAqpbP@WTf]s((GDWTu'Ni[2iBbi_.%Qkqg*:L1iIgi4C=G`n7MK[%(Uq1VOEYC9A$Y(3%aM]i$rej7F%4i4iMEjf9c,r`1$1:p/l1fCKa3mpf8JX#MsjlVk0?>8TD@`b$M%]p+D"c'8.]-&a?%kOIO\3LN7e/>8T[X!hWHKiG(3m7d80V*in:WgqBC.qe1U<H8HtYAgM+<L.^N6H_UT[8sRhQS>SPSB$PjjJ38k%Zh-l/]_kBNkn;!)R.GPCQ5jPk=fX:?(\Y3lCU-oDjAr-@n+>nhR:_#9I!aS8AX[XRV.NlHM`"S8(Mq4dk++'XP$PSN6Sn+?rK\F9%g0(Jd<%KO[(GLb-'8SCo1UD.3BB!&%]At=LA[B$BeT#<bg2g%CoUKXHHHFJRdUpJ]r7"D(=nec@e<ta9,(F)'V$."Ha0:Z4ata$L%*&_@EoC.B=j?qe/Zu)4e-$rM1I'TChUXkc/WrjhML9_;F^7^R3hHZ^=+L+igZR60#YW?20VD+g,`_L$;&>uB1^kW[p[(kW$!QhDs%ic_mEUf"/Fl)5#hDdeTsIKuBU!Z)o>@4DRT@b<r/+cs.FF=ad4'TjDT_"&[C@i'[gO@lD&Jdsd%kn@Yp=#eA886T>'\/o7hD;iAY%I5,.OH"lVF::jdaODq2)eHrLR<D,/GpY_e,g0mdp!D;K#EMioWO+?tc>Q?cide[gW;7]4_7+JjK[4)G<+/&V6jdK-Y%tn\+[J&&U%VK3sL!:[Bd;<XfXr^Kl@#%AL2-n;_j%gF@KZiOd:77E,D'IXu@$8XP3!]u\;f)of2Sp#[i]h.)OdmBP4LH=CMl(f>M/m3>tOJ9T5%J>8WGXc>4Oc=s&[".!@qCUXQ4Ou_.P_=TTT[)M;r/?bfmV-87K4sf&PliL*klMG^T4:m&+^(3Tg8_U^hqET=#mf6LBJ>dXBP\4PI%L*TE>\DY4I#W3+q4d\O$Bc\8b\AV8"'oklhE]Y#B.#^`*G/C)k8ZNLu+p%4Hh-au+')@(M4@r,IqlmFj.9g(C;O6<!mK2ok(T0:$%_1Q6s8U^+M+QJlp>404(J,lSD<]Z>^jUq%%KgiSnYXrc2o8M-Djub>_Te>O?_Z^_7@$1?NPil%?H>EhF.o]b7WEbc=poF-s&?Q93%ap4kUU+GL<JC:\RWX]jjOEU_m+URObqk-n#V/H55QNEL;!"q8J8\DS698b&b&a+ejb9S5;f)\MPP/IT7.4O*>J.X&TU'$>c86]D(%jCXR@NW^+WO\RF3m/j#k,ak^bBUCuuK[4L?W*h%4L!9co"q**/`JV`2B<8!X"mIlbE$TDUl2oBt6;kh/&:,JlWm#mAa$1"7=b1sf%^nfKedB$'[8/>D7N"O.d'N5N8[l+=5(r`UPL]q?.jj)S_@HP,+N-p/?[kpij?u7S4OER698@Gc]?lL\6Y4]2f-6=4jSFG#d;JdZ/%2NgY`2H"B:eM\&V[>e^d7CA+SgIS`3<80sONV"m0Oe.ak,7ZJFc1&N*3Q&1bbo$a9WTe6D2uoF+Cr5sd*)L'!C7KCpfJ"pc))4mT%J'D#Q$V"^L@-OM/2I^WMIB[+6Oc@fjMQ'%1NX+^J6]7MqJuKS(@-KX9_Ie>N3\D7<@a^o-i.69qC=tZaBT*J+GT6]J=g<)h+Q9S7%43%FZZqT-=Z-o@/CU;':V/ie_>X5AG2Kq2i0kn_gkl@3=[:9;a@9GZE+Ee;84.U?>fK1].%4@Xc#LO;qX2bB?V$E4)UbXb:f[fQm%<_(9gkl@3mic0NKXIIQAYVDrRlP*Q-D!cIT$Jf<Ha%=`MX_f'h6o,-D+-RlnLn0AC!3JXEFI]^?&8^EL^g[SF*Ir5Mll6fQ)Jn\\%JI0P(SIdePLpc8qM/1O]_G+mq\7mS9k"H"R5hQ>!eq#:1V5[7,`cT"joo_2mK<\q2pn68#Kpth*5@md5LKOX3QAl'5V.7UAE"n0:%08>GkUSA&32EDRG))5ZLR+oo0N=58K-"]gU9Oj':N0@!s9f@q@-;A?m3,'p3`f$CJ8DoB]idi8*@(811;;Tu>n_lb"d7bP(/5UM>%[,p;!W&Kq)U/MpE@"Dkkg@SbT`Wa=p@hZk5;I4/k,K>;6RaOd$?_Fi0C`qak0aVOF`WJZeB@EXY:;s6T]>GbpfK=0%X?]:%cb]_+%-6":48k]UN9KHRd0$#g4!1UtXE<4I=_('F*@]rlZ*[hf%Qm<\kf$n;gP88S;9bJO[?B^(PV0NBpp4rtEr"Y.."3""LPJi6]I;"k4%PRJ\g-OrD@ZB]`M0t,`ek^]L,A_m`TQHmK>(RU2EUt#pm1g_,@!&4quk&:@Ii95\9gZ7jsO<ILL3^I7q\,`SGQGMOqb\_DP"&Nib%e-8H\JCFcoD1L+?88Wn,#"WT]e-8H\J2D$DjM/t?_5f>,qRT?gIUIP/VNiNC:_pb"RW4=Qg4lSDR+d:oD4%]=@;6aY[UEniVRBoJ%)lC&PC)c:VCmb+5ku+.ue94Q'f@4t<D:d9\9l8M3G"li*e94Q'f;-[FY.8J_juFL,E(FJKK?/JH6=8A&7Y_M*0LD8H8W)NL;9_2\%>al^N3otH9>,MJ.GTb2)"/L$R.A7[<g;D>DUg9eCGJ\%W7+<S7S[1L$#@/HLS`<+;?l-8Q%MqBM`"n+5@$u\NW*/@aP\)g23aacS%^soSdHq2l$JFC:1B^&uQG]7MI:s%GdW/Zklpo'15gA"4.[II\%CZD0J5&?lM5-DGa;B$[biDCO8[GbPF[GbO[[Gat%*jss()]gnB%)]jI>2EY`lj#2XIom"Y#DkhQC8o;&eG"Z\]e94K%\(#RoD7A#<95V/fG"Z\]e94K]G"];K-ro%fWR"se>Gei?C0S[ZCKnf1C0RRD%ASPGH[Uj9b[UoAYD9LG;9^fD`mJKs'*]AD0iK<-eGVV1I[.KOk%3Nmbl,5]);dt7'MaoD@8rD75SY355HiVW37JNNm8%:h("mO\_%(XfKHdSej$;e\':S?s].Cf5Al9l3_:C!171JQRHP#<^2G"%0L.U/hLEb+b765$XQj[5h*R'=BiOE,AA"k(Eoik!X&]eE0/9:=SDo%D,/UC6u>[1=ITu33Dl7Z[5h*R'=Bhth[lchOkL_QXc_<UC"Cj+D2gAfCS\C.C29WR7VZ`"^RI)Yhtq*<(5b]8(.rG;e.rAm[=qL_%.(+b,>:?n5;HkQWKi5Nie`K8::=SFE^XSbRNfao^;IS#k$?d=\LkXaeTktr45TiMrl1l>B6DEXeJ?7l\SH+ca"/$;sY`(ZlUa`Q4%h>spjSk/eiS;?a[>.FeNU/m&pbc4\8>",VpoNF\e<HJ4U'tmbNkd?;.ASMsn<mb[t]iNNr'tmYqCDFN`d;'KqhlEL'[gphi_lkqF%$c$kdiB(GLiR\usXl7kMI]_S\)LaWTf'r^A)Lh(qhlO57PHM=m>3iB"r`\Wk[Jj@qYI4@5l`[_qs,gLbo1%A;X4?iG9t0%a9s<+>%>"qNCk.b"mf7cdPpH\XU78%iT9Nj\2Gpb/sT@1tI+;3e)+&V[h\1*<GRqBW$k,Ia!;FM4@!n8u'b<'.[Lm,-p"cR:M]G#+E)K)H`%,`#>'9Z'Ed\!,)Wh:i1^JB0Mo`LjJ;^cbdUP;R:iA6EV'EZ;)[nld?C<V#;P(6uO5a(oh1<l\uu]N3'gFhCbqCNUW5=rjfsnQHt5%s5s-k<dVU5)LXQSf'$n/^=ML`NP=!-CQ6'Zk\H0lf'*/$)LXP?pCJ);g=ncm[JX4O[fB+R>.t*i>(3U8f33X*jk![bXl\/<rkDIV%YMEl,Fkh^eFhCbqCNUWiRT^`8ea\-?3j,+E@eJK2F^8P`JF-i0g]^)g+t^G@FHl8)=B%mn_E6_R<lEh$UP8SQggjF?8k#Ic7oGN]%;pDC[GJKoQ;u9tOd\e+9[9lt6*@N?S.YSlQaNP=rg&SO4>q=R8JmBnZ[=V[7fX6=eX;1)*_6+O>>/@?Vlrq5Cp8;<MT'*MA?L-g_%Nc*oSXeXK/HEEso3kB3CXeXK/HEEtBJ()e\?h.B=:M[YWf%XuRh#hH+^"1qR]tN"O]>:o3?L.!L;!knn/(h7]>q=R8JmBnZ[=V[7%fX6>05=*+\n00@JdiQ<<b$>mZeRoGgU`/Q`/jm3i-\r=L`grctrcWi!9Np6p/mES-$G3;pN33.$27O$Q+R?V0+=jgm%ht`CCK8uA%\ZiD5>q<[tnnZ.NnlmWZ[IT7P6`p:;b&=E[G(XSl[oRtXB.1O'=*6%:(&u[P3_G;S8lQu;B+7BWi16S@f)F4--=(E8[3f0pd^:E-%CXTU;?#.lr-=(E8[BjqV7+Y%QZW<f9-+[-OCF-PmU2)'d<h^TGTj!;e@65D$U'mFMOei)V*2[",dNM0EFTH5#l+K8G$4n`$5-2/_%+Rt#eBs_1_L`Du;#=Xnf`O>r0/D\n[RRZUc!MMfJD^U>PWP0E!?"1d^'5i]eX&E29AAu"[c:#M1!;.tcp4?tm*[o/oC;CBFdp$V+%0$$6BQ9K,;ZM]Urm"(iYc\70"(FBHEb-73Z13r/@3=C!eAIk#/6riqhA2(%+-7*4k:%i!H.@ROEi!7D>ZBM`H?mjd;oNqh7m>Z6r%&&b3@!h5DgEATsc/^s!'-]B1K_[[s/6`\*g%'gh;?opdkP1Z(1(.],P=j]BoFlBV.J.t^X+)l>_:(ST"OZPj0KTf/]d^dg7"&dN%%mK?AN0KQECZAMo^!)4e5,PFAm+a-0NVR/t^JYL:VEHde#geG$pbFcEPAkfB-46aClFC,Oioeu@AdI:9.m=9H^8b)Hr)2:!9#*t9M%m"7F9TH$&XSC9Ts4YRPW=gVZD9L[Kk7-qLh./A/N"(GEpmej7XBl;WCZNDnLdKammA`:'f@+5`j7CLZrB[:-?HZ1CuER4_C/Zm_-%!`,Z\KW,I4X?@+dM-fQNU^;qXm"8#:GI@OO+A$s2MV/njijDp)d5ED)^s\u`phE6d5C'@pq_7<dFA'tT1QgIX9,<I/X4LAj;lN2j%"'iuG\hun*NRI43!-[S])J$h>=.CN,8K4eBfgVa?emZ*iOD>$1<fh)#\Q4f][=VX6aL-WT%B^H,>!`/FW$%j61H75S71mLQ;iPB)%j@-pl(I9QCd6Akgd@8h@X(sT)<jQR!]2l7R27lnqCGi_)ZYMG1<jVgmWnHV+>`#q2]pE"TfsQuK/(q=nh5ln.>03q4lu$dEACjHI%s#qb+\[*O:RAlrdT4?U9KL%(0)<M9BQ&$'^7$RHm&rB%O"d7N?*VA"61k7kB^BgCf'56q]dE]:Q^fCcJ^eflloLm,VB`S99?CG(_%9qCg2bVbN(!j'&_*>sE&M-)#,="LRU6=9)R!jO[BEU&JlK2t0+<L8*)74,e-Oc^Cnrl??NiJa>C<f+m9*sA[X`#9^#XLucW(kH#-%aQn;?'X9IR!h0g:&32$>[Rrs5Lbe0fUc<KD;OlIcNg44):'lCc`O)e>)q^cOVM)bA/2@AGoO\]c/no52R3+6K:Ea"/_u:?*,m8Cg%&62LTBE":UV9[/tPVIFhq")O:Qi<BAI%a_$i(Y9kHNCh%A+EQ:<+r_-Hj9Pk_poS&JFH7[^Xo\GF%gc<N!rAqPF"6R".qa,8u\;o%^FRM!">TQ`rYY2/d3UX99c-eOnj_"g$ak#td`Ja@=Xh?I+.n^%c1kPJ\]/3STd'@Q6pF=%Pq9>AjFIH&$4JOA<:[tF93u9]\NG%3%i`1'>(9oJb2qT"=gJl<l;^k)7/S-9]9ITK86o:gPF;,uPSWU91Hn!]Gj20GF$"IaUU+k1u_VCju7?!3MK?F[g.'qZ[gI.8<#A.6!%Yaht!g!W]R9:H9G1<N-sX"?mdfKrN6D%o=[Q3rnsqja1==]CW*6s/6!@pEcIA>q^E=fJB2V+!h@eqD9]K/;D&PhY)5<9S7eP!Zk'%"foDoW&3BaVfe%!Ft(Q.38e]k&kn_\F@P$BXtnF03hrpXK`(4(6K?;!bA!XlTfl13&T95JDk]qPRE!5.lfGM!8IV.Ld<&=sE@GT"%rPj]iIQ=NOE^PW1P*8?ZBHg/42.(<mAp1r#k;XB#QZYK7Ph[l0[8PR[WKpt_Xi6[gk#Pf+kD27\9I%u]@MWaBT=T\Q\8`S52p"W2%_FD[>IUU^UZ;.DgH,l=(o([taocu?f#d`mXCb>W32m`'1]1OX\.G'`:oMZ?WP+Au8gsX=qm2Q^tS8"do<6PtQnoL-Ob"9lg;(4Mn%6TE6$#.)P7Cb7QAg=X\mIonabN==or(8ID%-)or@<aO`a.5I00NEG;7Z=K6ebU&5=Q1J+r8l"Zu21ejYAmm4cV+VXo0'BLhPoOGj%=gFCc$[^SF#qXUB\WpmT4"Z@NdthMU\#5c/b*5P>R:QP[B!,$iB?Bi/SHrrO/mQ8eR<BdV--)EsQHYYP7;d/I,J':.PZaEBSJ+'u%cP#9$T/`'p0UJg"d`Su\SegX^BdC=Ok722Nh`3nYP>A!e<15kScPGb('i87(P[pROb7&r4)DI1e6A5QoWXKPs.g1Y)0nM:nKKYoC%qJLsT/'_'\RK6DW?8N$,'rX)$0SA):agPqg.n[\"A>ZI[Z@Ara-nIVL5LMbs!tQ8/+I#iZV-;!*B$$*.Ro_+$gnjVC.#1[XFJ8A?%LA?`?0U4;G),c:E=BZjH5'6Ac7+fZMQ\10%:o:$#7S+.g'cL(%'h#GPa\1te#01c2Kd_`cU(+4WZbS&c&921,Y[OU;J&<['^M"Mu%6*&(sC)G?9ka"aOh,5NGd?i#NS"MTLH,>Y$8dM5X!eE<Bdfa__EgEs70JBj*1+08DSu/VF:.(bC"gInBPT'3kNM/\W&3C=4Qiepq%Z5V,F-5SsUQ\epTiD@o-XpKTr-oDOYZ=k.+3TZWs(t!5gejp\7?D6BQWA<>ig8rB4.+/#a&863W&J9)U6"?!faDP>$b+,bsohenK%F7IDW$M;U-ZB_9Ob=@_,JUPlnp%>/X)To?#`9RABTK&.UC+*(8<+1Dm6d*s"/s<2[*?lE<'t"u=.S*MNTb4YpaJjn+m=o>4Pd/r'%2#R>P`T8cR6^.1A"@AQPPYO%n'@mGq:pgV[#:GC'(rR>^BPbGR<)dj?;XJ4mZ!e2`.hCSR;>^b9-.UdOX>Fj53i:ZY6sAJAG(AnN%76hDd7CutQU-S\,U7mmV6E6\8Ph.LKCt!&Ei:Na)ma63":^@.0%R]@aK9=A6L/Z"6"?DKf(@O'Y*G4@6<5[%P(*c1P5Z2QoE`gP9%4YUF!kQo3jAfXINRasl*-D<<GU1,hS$O3#_((F`]<DUCKPA,mgd>c[UXPQpseZqWlPdsi#Bq^rLLlfhXJ[?mZ$k#\Q0+<[4pd:Sm%L+PKrDuM6O"WWC$aTOIcK2N"erPhRIKOm_b?)1%*3g%?lW=`u`G?0B?RA(F,%N18b]'*4S;Vd@p77'Kjd)Af4`JA]TZq&9+?3hF`%?^5UM4fhVTE24m&Bi[$A2(ScLbt>E",s*k)jX71O.?I_P2=+(A7EHfhTf&d%ejsUGNoDdiAJG"R)7YZ#ca,=2b=&HdEQAD0QDN/%%+kJQ5Lt5F/;'\f:eJMT3F9.5C4fXOiX9Qd]bHM7X!>@Q@/A%?nR%4OKH%jNlX'9keJnu4/oGWZ>SZ85,:0V%/U"tR;ri3CR7;*E-%a[i[mBT+LX2MMuD9ncYN;itC?F^(YteUAk)p8BalU3`0r*()t!gPFT83MG:p,$qMcNri)*O!6*0NpUq#heZ9qJIb;6N$*`[aa=D'%[j`kBFO@`t%>5>BE#Y6>UM@r),n@R2UCi&Z5oKoEVdR7V1(&X\N`7;Y<$fdDA[o^6N7Y,qGY;8%Clum1I_ZkfJ?bYXe15,PDBFO/%/-+e.G$\e6a8N>(;_jT^PTXE2)O$N/ifqA2fJZ<g^mHH*Q5\5l/qNt0'iKn0-"LFt2)Q5I-5B,m))A3"i;$f],"0%O[7AC'->P)K%\#NpmDu;AG#r;>k,IE(.n+:X4B"!C:1O"&"_l.\Jj1rq.T@G6i<^8FuDonZp'W+@A/"Z#mROdo`?&/pE`cfhRC!,MDZt_&p`ertM%KSi?pZD^0n,-kun\D=AmUWZ2T2&WSnPqb>>m6Nd&d!un^N0'e;%4@Ydi+<[Q-#lJD>%Yg[6(H+e$^9I,ULW.H7$>W(K2HL-@3LVE%;\9QpJCjs+,R)T8G/H@UMXZq*77:XiU3=F^?kYF+ntr:Y&F]jjMAX`YkdK\!dTT#Vm88"2cC4*:J'NSlV\)U+-7`^kYq(kq9@B&m%><.D&dm$cP>d])+gI`BJY`0;H]`PYC'aDpU3/-Hk5T&aM<_u^=_)9f<+c'7E,`RZ5]J2euZ@Ja>88KR#&1JbseMQ(<<6%hhqbR$,%8`2.-p+R>0feRIR.&ukA^q:q#8t8UWSZEHPF');X22c.2JRi^l0n_&bWYr>?_$(K0/RT3s?DB5llk_4I<hY,r=\ZpZ\2*iE_)4*,%Zu!^8;ib>?%FZ5$b3DC$ZU^;N),IuA7+Os71M0Xg&&UDu1B3bV#tjk9&qKQB&;%7:QHAB`Z",2]p8R]sVln&#1f47(9-#"W`A(Wf%6#0H82RPFN,HCqbZka*::c7ka_2qZ,Lo:e!<](#g)cf>%KP<QtE-kM(90jYW,4`ed8GbV*+q@=ZCh,En92;h2,VpS)dg:^W:g.fq%4>)j`AWh=1T:V]Bg9Sb"`%\V,K7!7;Oi2k+fQ<@><Z.aV"qDM:E)lN\7"G[_2%:.o;rIb0<$ZFp@2`XuE-m:pf;$J*9lARFlmab=%)pn`07^Ts#:M/aC,/i`_$H#7Vnk-iDG2Kq:+"pH<OXBO-)&sam5f7#ZJCbD#;F+)D8(Etb[QR1`]9MS$lFM_3_<?Lr#7"_l,/iY2%<d"9.aL"MTZFWAEr4Z1OG&T>QKp_td0E>6m_DEpeE:#U9?U>q:j^iTV>q%P^rA-H4Ah9,[*XbTJ1rW*2.HQ,A*V280NBr,(a:gI'%9pqBM<^T=fOlij$,.;/7Tl?$-$4V'!CNLHC#GU5NWB/o$(TEcB\HNYU9"0K/bH>_`.Z-i"V%6omAoNlkF\2F*Wb3WJH'F$!^do6C%+:.@$8mO#R3Z;KTV2_8?(-6cQl,p(f.4p]LG"7Wf8'`[F)dUA(fNlXMbVY'"5>+A\;s%N.96NdBXnos:TD:4PM3H[Y]45*;OCD>M%T!LoFZ$B$H'Yt[mR%dPL*:tDZi&8$49G18N`5U4M,7(H0IRU2o)/@6kV)Y`\@^t6uR\S%sM_uBU=4M;Zm^O&/!Zo85%msiI4.E^^%Lj;,*r&,WIgK?/e\W3#lH2[=ok8bnHDEpCsbt&'C=(FGKKkA5k-\sZ=(DfP>-K32p6cEI&(E-!Ckgn*Ok]GG+PK3d/DMf.UNR_"0%hGhMH>a\_@DCK(Qf1eqO)Trm+F/PfETG2p*&P<61[O<YpUp(Jc\k3(p^uka%=Cjt7;$^:R(i3,$ESZfkWXlTnC)R;-jTS7eco$BA%p``_V_Dp!M.3ZqM)HJMkiu?fX,[\N3%@:\E5qqB_X?jPMPgaIoq7-Ki8$;b:414!]31KK-KJ[DN27SI<(Ht=rCE%N*iB@D<U+?_M%NBP0ZdM.R`*Aqpq-IfXB(9V@b"M>7R.LPfcKl2l&A3/-)lqqo<c@sjqHPnGqI4CW*.q)0g$jX=2B#.G5DI%44ZK:0Acgd1r=-.#[%a&iN^Z#QdI!?6?8aAQ!pF7PUDQo6iD*GVZR)*-MTKJ\FaUYddY!)BCc6OA-I"/e?!Zl?SRVN>])-KOp(1@EUkp/2Z4#0ja&Ltp66%f6WjIU8&HS!U9=mBttF=/[uG=WuB?W"_mPLOc@7G+,)tp)!D8ZF!2XR#c<T`7h6Q><'XbLL6.+Nj!02oPrNJ]K_0#]X%W'kP%g.5%V;&+$q7Whho;jD"Q6-2TmmIL"fm2qZ+WSG60%/APTY/LobB6;S9[7mtW=8SFfZ);6XhrHG<3m9?6tggO()kT?p4<gU.2)7GP+c>n%ke+]=!a`!_MOLf[T'M7Nd;G>kkVB`_RYojtl53`_oKHp'Lg^ErS\YXNE_<-S;$_\tAROV>*3ZZRgBkCD#t__!@&(lMA1^2KTFe"m%B`Juc^A)+OTUR*ZKRrr>JjI3Z@"?g]:uP>>)+_K2@'r?/k`uPb^GhGJ[#AP;-'_&0@1n3\QX'k-3?.QV!@TV0o+F-gJ*&)`Co)0\%?r._&9pIH:aZ5n35hg!EcK0.6247NV.20j%X/Tc+.d%0tM@Kk"SV3"69O3Jp1$Iaj&ZZF9`TpNH9U83:M2)5UF]*d%+_<>d'9t5l%VYkLoO&VqOkBY7r/Y(Vq3M!MB'TcjXb2>$7[>B`g-sm[c-klGddE>*kg=UGY:L]S]fiuTqdMT-JI`JsO&*==tU_P4oI>hl!XB+R`%]&fBDhnQ1Y/tmk(g;_R63-,@WD_GnQ'%!FWZb&]KL3'#;*u`).ITO6=G7L:Lf<mG(0k0+WJPOH6_!p%d5'BLef;ND'AkX-_:TH:H%TPo-27R@lFX(sX&Xq2sA+TstJKi=IKg'uLX;bGaqKK=H]*T'/n95q6\-/;+;k=91KS#=-7,*hNIJuOEeS_8;eo/WYD%8!9_D,;)f%_Jo7?<_1bU1mXsGCeS?&EK)gZ,$K^1%7-e!93\?l73Ng1R0QX6BWDTRJ8TY=UDMIcPHF%N7\AYX0S_Acb:/P=M43,Ab?`+'Xk_lP%Bu/?(="I%7^Da#<,GqJQT=/Aa->TY`QP.Ko&CMDRbm)e,LhJ^3W[qaTHZUF[NFlgq.cWG-(+jb99>gUV:LhI797ts&egucj5[Zi$%&@Llk\7Ojsc#,Yj77daL:*Fa6Nnph]+`@Ak=YV"%UP'@U]:faJ9qd)"FY#it_pu.6(+oZdkhM^!JmB@l:2Pr(2lnq%;S(\QOPd\8%(lqj#?8>SQa3m%\Jr$L%l]WG4l3Mos!@^6SoD.UEZ99tA!*pn/:c:p^'Pq[fN".bmDE_c1>J)c.]-PaBFORM;,iflCW>M#s8.5hf%!Q(XHW8uZ8J8,_,h(YrcAYd#.N7Xum3),90&I:H8%[gH.`cb[)Gg4I-5qW;U]I:#T:eRe->94'Vq9.Xc%L0C$TW)H6a1)/%9i"Tc%`k4eCbls_A;^<0+=;.qn\4:":fZ2fE+YS)@,4UmVD;c\9[6hgt;.[t2@UU:R1uAk/<Ao_[\YcH)Q?1-)S@(LPlo\q:n"6Y.h$?Q7%j+'G3<<H>uiC8P=<p13i)@0ZQ)K%p+fmYeipjS>K,D\b##&Fu7>T,(H3<\Q7@dt>?>,09.4qJI4:Xq0XPD,E:XhZ^b(ej9YMiE$P%e"%820EloT\]HAg]`._2kf&FYla7,H&CK`=<acDQ!Y(JbQqeh+-#51L8^2k1<"&t\OIF^d6EOo6+iRnF[=ioEBsg@O'P?T@.TUI;%j!q_G+l35$1=I)_XW1h,$*V],`@EK[r#]q.0[-5`[M:e,!+f>tLpi&*'6)tUB.F:V'aLkjp'Q>)nd<Pd,//DsBc$u>-R]]^BEE;4%YH&4i!36]06CK>[XBnlH8:Irk`.8LcCI!K.mHiJ9PD]qTG`=^X3V#'7An;$C_p+Ft+Js$AiFbL#=;E\S'40oY\`XL*`PkXiM0QQf%6js9LTYXIW+X@-OQ`_X]4I(Xl&`$D\`9L!<9]Z9Ij@U0+\H.OIV9+Bl0%-c4X<7K`/gH5tSsGpOW.N=GeFLM8OhqgjV$RTa"\[c3%2&R2f;^S8Nc]A_A=4M1*<2S@WAqqP)6tp77`A%3\2b03s(2G[3Y:=#r%),t!M9pB@HX&sqI]8+/@gfGm=UD'k7$@0ZN<2n5*.jT`%lR,@?g,_c$n^DFr)U@MYV@;^M()]DOIgc_8Zm`/ZKs!jk@ot>1AT[g=*IXoI7=*U#WCmj3-:V-6.%SQA03NEe@Zn'm8Z!LW/0+OO%?n;!Q.!1T-nBI*$0GkYEPh]S=TnJtG$lt>TIM<P-(+laUKM]f4&uN*:]2@c=R6nL8RZ?:7lM+DgSCpipWtRk*S!e4B0eed7_LS#G%##7?f33Wb^c1!PtVp:)De%(0am?8N..#DjjS:0@4.*6t'iAS-7I8"dOK&'7WN(.bdoIE7^GY??oJ\sR],)4h]X"dLA\!MpG4fXIa%o^IfJZbXdti=4'M]&`qmjk6Y.C,5Wu?c&rqWjd)iC8!U@"Z-qL5I1L=:U/mB+j,U![[4WtFd\>^;@F;"M>3%[6.*)56RTeS<3*0`%cWEn_UkmP+VW.9K3Ypj;p!+k[j_AP?P?D]P1q'KIB8'[dKOob_A"Cg>,OEKcM)#L_A/1:@.5,\07]P'/@@+h"3,9_T$EhD<8iK.1%R)Uok[l;jBMH!`MC:%8a0!t1,=]9q01op&e/)="_"[oe*$ne?f(Ac<+jQ-/t/h_paq4_i6'N-*eP3UCKQpC,SfJpGt)sEQKG#i]r%Jn[/cMbG:p,Ne-j>utT2j,4V!m%GTI1hI@BC[`VYIHZ5j`(b.3jS$pGe1>BO/ne5$H9U++^oQVUB9/p?9(5G#joS41=m<Fibc@*X%':YhZbls)a=O/p:+uTV#W^rTeVE)4]WY[T@j7TE5<bAFYOJ\H-"sdfGU5DbJIMac>bW-*lEU.au]Yb^/`b!3u?;)UO"'d)Wf`#J!%0k`\Q9"Iu6/S7Po6ElZ@Ku5k^0`7B$`0)h)Bid%<-='0O=qgK(<Z0fcaAOlPT\1ZZeBTu8P/9Z@Cs,0RV@p/)S_/49F$,N:hZ@Js%ojMeg>7KLdO.I9t6^@oJ"8t:ae&I]K'8S(OYb-^pUbR]a57B/VZU#7^fWm3=7G@YnD:58&]/:bHGLc4GZYY<M;ID1qYSNiE;1ru5%)I^[7cH'3j?N7Yq=.B>c0*jU?_V,B,&0<uSS,$GA[r4B_'Gi$Q*!-=16<>C@5#F'l,!'i*OlIZ8dfRXW2JN:g0</MiBb.iVL0KVY%AD1a"$8A[U6WSmE@u2CK99:[=.F:#''gZlL!1GI@D&c!l$-6UD[@H;3oE<u2"OkB1POjPY<NpCtd'40,XUQmk+_qA&/;R#CZ'NtP%9iB'>=pT9CXYRoF4/Bf=8K48?p'k++9")]*aGsFFb7cg!on7bn/8#.-@C_(:QEsJ"\62@Q/;r\knT8?ZP`#6>KdL=RK]`Q;=euF=%G3\?DT'Jl1;S(\QP2En:Qqi"h)>f!lQo!J6/6JJO>T1U;-da3u9,CaIH%hejg3NYg]AOW*9\k5HN1hr<$C5e^!H!UW:(V8Y0.r$W%9Ze0D$lO]6?YD.VK+(*lUU(G/:F=+*VCb\82cl3JqGS8QWCe!LY$AJk+@ipW5T%XkasAtXJ:8BhH*Npl2c%VQ(URF_>T1R+(s/UA%]YTK:'K9B@/\#_^n3(nD!;BeDRtaDn>1M%Lk,(S%3?GGk-X)gMLb98'bLK;(lVDYNjh5n&aqBf6*J=.VPlV9uE=*9Sk]\=cU]Nkh%B'8j5g.\VP8WHL&N@'9-H'\f>RcX/O+mgL?j2$^M&8c5>XeWI$XHm%VN5cR;gLR'mX%:]j5qMB6(t!5gp?4840:7^MYNf66&!er*%$"ArKL12Z'mou"hhutoX!@SJfq_=!qF%T4-ln-mb4qBMt2(B6Q^e5a<or6LTlO*2n(IT3H9_TfSR@HD!/M\4XCA(gZk)6)M0^Egd%JS)*'O-Hnq_.:3-<Q3g^4m:u63Xb*K.?.aPHjsk2.kFAj5\NF*V_\?P+L0iSfFBe.[H(;q,qW@kgPLI>X3*G>3FZ?7M%iXQRZHd5%.2BoUA5,X*;V@FZE"ijb'1uredAeg]SOokZ\s1__$./#3Xuc!7T#<E^J<o[VPA_VPo-Ka6(isS05g%ETbehNeTA)B<C]I%I.C*n!%"bD6eU?`%Pc@dl+fR@oQ&PO-JNJai<.Ub7L6V(]r#q'6A,2-kA-q+h#`i:\TLbbi)\r^g=-KOp(3c5`NKo.7(.0+CHSaCPXHfq;l%)+GH'4D'bP<#HD-%)u>(.gUUp&-SNZ79Hb1)#N;j_IX)AFi$rA#U1"sb+KB9PST[Sk,kd9(=gQBNg.pC(,C?B.V"bu!+f:M#sc^,%lo[BQ8?4IXk_Y%II"QB2b/*#%'#!!q:i*9[PiibA`!&)skeVu".MB"-V4h@,E+d>1jKu7(W+<F2A6"lap6=)E.APXuWORAVN^Yrs%G/-tLFNt:=W73g>5<[-D.Z&3aV^\OJEqmdd<D5"*egOBS+;pMrTu^AJa_r'Y*+kr[)\q82TSoF?-Bl'8RZ,)P0D+@'IUYmtaS6Js%?'!X:<a2AYDQY<roqsQ_7NAm8oGiG,bOUUK!\6?q2\2<hI.74E";X\GO1Z+1=/'V&Wu>ZH8?N_u]==#2NQ/XV\Oh<W_$JqMBk-IC%a%)Io5Gqd1Tjo<ln&`G_?&,:#,I\giAV+VTFGig9h.A"opT$?XVs&HQ$pbtRAer@obtWrJ58Lt%qFaB_T^9nJbO)tA)4XP@DY-=E%4]eE2'0QOiI157tNp!'47L;*V#n/&MY[Lt_`"Y)aO:amX<EoocMQ*;4ZL02"V-:VkXjL]R+,Gg+Vs8M"c\u<=@LY_[:Q.ku<=EN/%cT1h=$R7)Z2SUmsN%,DE?AZD,XXI(,DPTkj2E2&("jN^@.WJ)+T@aagW\'SrFq3=J9VItdLMJph&W;RGNGBFF&\3BpogIdbC:-N'%=e05Lp8B`YUF1F';p55r'"QFD0V?MrW)".]G=a1d649Y''VenL86Sc;s1FA+9gb@k("'k6/OD_\g'BjXUN5]m=Jc;OVT-M'CR#6@%,rUE-"Q)_VDui1tV?t4hg!E\7lRRgh;5TRq\#/6\Xua:0/nYJaQtZ\7<XrnLbWkqub%]#7N=EuZ"K7's3B3n?q^uX82MUj5W#op`%-PZIp)NLM5"OY4)k7M`:b+sFVf9!6kUg=uKa!S79;"S4tW`\n/di9g3>HGrV]rI%!8RQO)!7n@Xj9$QV;sikI=[uAr'S(WQ8k'G-%Cu=#Jh_nd>9uM4\0uOjX:(6?WY[%D!`h;4G2P!fOkp!<q;*CVR^7'q=@HM<`=?VBI)b-\SD*7(68.jZaU#PaE3o22Xp>eGN^aN"b%(07$GeV"j]H*I@6QeH^68asBueMptRM^6ocQUV^k1aRNr'6m#n<J!sX)MUNo^Bmhn4Y$pY60)5DZ;@JW)(HNi<DlbmFYD2^?,lMf%W-E`jNk_AB-2[nYL<YaB?uiH(Z'U,tR?YcDQqA'!M6c4Wkb%#aH%dG:2Q1F3)FD4t%,m?<efFDe1aBiDZ%(]0C)+n4PL\$b&7SHR%>`+i/VSX:6<`P!bVbD_b.G\S_j7fT0`i#N:*](n'0gh@o,8.ODlS78bd-GZi=ZNaPdl2=_AT'H70dLJlc@WA@Vd[V\%-#B3N>9<7%NGT(1CkIj]e<&XSel8JIA()DH'D\]6f;n0RS'hof#\P%+^9&<;f\((91Zq.Gd+o4eWBb'(TLA45kb$\!/7l)Xb;Kjn@%-YDR.)Y\%IaG*_kc(XecV(;k(!H.uF=`*hAV7lko+maUVl?XHe<=%E8/K]kAhnhMWag>-Uc[PuS@7'M2Yi68jKW16I#DQ3,qT88ln#C3i8.jH%RA[-\9oGFp"$Up*`0QQf7(N"!(g&X!L&irPAMn%>>'i+A")Ha#.OLa#)Neuul\Q$[F^(Z#DClIjqbnA>aXoE.q4<CsouWgKpuG49%Zg]1%@`d^gji"G46CEZ2X'p%c.p!_>>DX+BTk=k/%CH,Rr8)M7LMMKTA"R]`eO;f2BFP]9M<V95$R:^0CF]6a[AbS6`tGMo8/^5i%9uZKuFaQZB2\]:(,^^da[rMi#6Xj5TlZAF"5^@UE_-'4MjRgc$0dE*r!Vps`'2p_5LLY!V/Wc[EM87^%,-&hBeSE5C%0(oFp4Kee%OK5`gNs(BFg*1*MF#=i95F&Jf*H@f='OCtiI"9!HN/OCV=AQl>J2bTU;FC(dIclWqkotf&n!h/(%Wkjpo@+PYUkbcIKAJ;4_#U7_%%<.`_Qo;AnrG#$*9S]\`8d858)q>]Vk@]Y]V4<.6>4q"J9XWD#>tVS2.!>0c3j+[M78X?F))ep$/lB[F&gf"VZVuXqNq:nTWJ$J+%fm3PfSo:,A:#=a6EO[NeV^<Z=D-Z4N.n!n$fPpD^0r=YoM'6CQA:%88MNVk2)+"LFSs\dGdr(OBR8VIN6cne&Fdt+D(Cd7$.YV9-%1\@pUE/rNB4?)[hi6BSM\gUG+[Ra`q;_SN)g_idXSoQRB]I9_@i(PL--==AEcfNsuaj0Zi(JR.+$%(CZ(j]ZJ&;eek:6/XGFm(/C%[V7W5E;NKQ#PfN#g!J_O-`MQ\.kW$L7,2eioZ\RKOIS\e6D#J?>Y-)*TGd*-)XnUV"S3m?e3G*$WTLP%W\,$j:TL1b0nhe`Z>`N*%"CGPXWY/";@2`ZKR>s*cHW:s,L]IgcU3'rldDs!=s3B]f:2^*Eb4p\pOC[N4NCsBI8V;P9GZOtK4.tJ7+jXX(VN!1R$?3I.V%U?q%CJb_'e478`*'\pc-p_g0`2QNdm=o>?.A_Bd.J`qCNbc^m</tJadRS$^ChYmc-"sQj9(^@j<<K?*Be5B6/6kLr56+&$$9SVtice]!%\g*S#[\$SJ;_$rF9N*^6=Mfhq3/g1;d>980LfIY)&O`]Y8L`,+U=7N!ar"c/Dk(T.o8N+ZkcC<QW0hdL+Xerf!@U%7o27ZRIjQQ>%.Z!5lTLrX4/B^c'b[^ZjiGKOTEhs.sI.K_S#k`<PiN5T2`"F5f?tNSY!%9MF0Ei);($,BPpMMLi,tW:D(W8PV97[4De=>qjDphPl%e527"F&4eIBS7cX[p"C;<MHKQVu,p?h/&$Yjtfmb17,H]qdG7cQFZf0bO9'2B&QURH'g'uj*N!&KebXgHV9JOi6k.UW/Qsr"F1+a%SjCYQp;E'@9qq4ghMNrWp&aJ%/%S`-F5o<5e%bd>#pRgO0Ed+VE>E]2iq5DHlS<%N04*@/*]]j2iDjQ^.C$iD4mP$7n$`"mk.m+N%BV"mRK8,t22-Rf;`U.dog22(L_+k[*A!"H_IlHSRU>;[O.4=!2?)2aS+f@9>\jWTW`MJahC%\gb<O-pn4M6r6&nb:=Epu!U\&2&6%N]iZY(oj*RP*Z$3TkEcTU#2*]UVB$LRFAm88;a^IUnKEA6OH]6.0X"iNu8/*UV.h02"Cnb&)mQNKuKfB7DS3HDpTqqT_n/>XeA`,%r>M!?;'J<c@HT=I6B4;\:Pf4r.r!+H=aJY;*o88"6gQ<JnKD"1V@7<EiJ;[$<"^T!6+Zt4jEJ]hHl_p=#o4I5]h(=[@Ct![WIalF%e\]cqG$]OE*CnP5[!!dNaH/A#0>:#jHX>O3X@\^3pJ0g-hL-&48a2,>(DqJLDAq_S6*pQN^\p>*s#[^ld87/fGI?98ga[3\O>.!k%[<a0SN.^\,hmVP,]C'(!o%ZuC\d-=&mNjVTUp50i8D"KkoL\$?Q"7[;B2K6E]>hr!C=#].Lg&")DSu)R@l%hik(tmMQ(Ad_@GF<N%8aJmRFan'E%uo3"4ZI]NFDp+1G1#-].#=W[X,N+)3oK<d+&Jf`39JXa@c2nmnZ"OuY_2PZ<1$GVP"X5df/!!"gH=]'&'_u*-W8#H%j5;T.aYRm!3!FrOq'"0#b4:\VAKBkc_d4+=@6:s$'(><!Vp<+lGl";%e\oMPP?V,EH&SiQ3][&b;K-es?"Ml>1:$_Q<%;YCel?aH%>,`_7?Y_M.n5:L+1C/0GA7./^P0u56`_%,H>HJ;?T<2pnVdlQO8aB&4:81?$dlOTDO0m4#qj>sflSbV_-;Me)K#]lN=Q2Fnb)=r?%S<?csUih-gh)rc>eA@3t!SEO'G4FHQYlo<,M09La4!hDTI3%,W".NL1KqYoP=89j]qVYS$+$37.ceV59?)b);r07^G9V9gpTf!6p%55;F>NPffs5n1CS)c;N-psm#Vrgmg^baOm@8L+)rEhuO@/jgHB\I;&7&j6EQRMM4UUha-lHe2H/6tQ*s[?-AC\oP2OV37.hkj?j)%R=02:]n[&?^/7^KdG^+mU)NK-lSK.@`p_gDBPChl!<_NE%mmWG/a3Me2<sc<;7DTP@35aJf-0$k?0ZG#4Eo`V@p!e][BCE+4*jo0%1H;"-4hJKePU`h\Q(>k/EGjbV*^plgE'n1dD!,MME_0I*>)&VkRg2*S:I+#%Rf_V\96HEPVF4;;^_*Bc0.sV;_.,?d`p9j9*n+RV%=1!)>:>`T?5CCBGo$-Q.'7UL\S544`_JGCdiLr6QOuN\*_%Y/kmpp)*:$u!7cE6TsPI0C0loaSl%JGOU'S8+R:#oIqk#Nb4AgWOC%^j4WOB\00nNL%O:_g\*LRotfhgkWhKIOe%bg9,\6Vc]8:@+A@52+.()pYB"UdTUUbC`!e_0`PS>p!,]<>!9D>'t5q%,(,POWf#PV%enlJp^?Pg_qZrR-eK,llST4h9;RV^,fo]hN(\6%*55aF26OB[,C)DC=noVLe5")m9DFd!VDVBE.LL$Vq3mI+r%l7`Eh))CnP6E4p%WY?bK-;UE^s51T@AKIuj:Tjc#BVBM[QpH;JRC?T:`\Z#>Yq;`j[QZNS#5Yca0eQXOnCS;]KqkI_lbtS92<bJNYEVeBc"bYcU_]MG%h@aNmD,l9YK+=6HQ)eA;^=7!<nseMpH4^oWYY^Q()/Smg.:1%:cK<.hCOEjE%.\8"^Q*X#&@ZBf/b<fMCMOn=EU,rp#KG5e9siZ!%N4RFe*1(@f0t<,W4PU>WL3D>m&]Kn(q%c_ZQMd&FBC4j?NpB/OCKX'@VRoKP>Ir#-(&S\oY4+>S:E!O<Fs]u9\/lQl6\"ZIoduh4%4@ebR-1*cK4a<1f*m!deGXH9,Saa"M(d_QA7_E91'%8)nW>G,\0!g=r]U#7(h<"b,3,JQ9QaSOm%(!W<:rRi#VnMl("j<XEa3gOS%YT`K'95GDT?YraFq<;5>^e'Nt%Q:?07PO3+"k=8>D3%$gmLIro5u7^*?3Hg\#2BV+;2]-jfXJNI[pg'V$@Z.Z_+nGL(;!)WC^WR6%K<ol7WY]Su'T676p;If#[^P$afWgg^eK]=U!#Z/2>;O=nX27C<R6+7Mrr.9Q(F0L"@:61W4@J[]ZetAa/^TN<*@OIp,'B(HAV;U\%b$mW$T0)PD2mS5h`0#A$A`6C?2J'@0&Q+?UL"=)%<>nI<G&+q3"b=]+Z>WZ]b0`pY;(MRAV(]6GL)ba%p5fGeJMc/B3m)m:J"*os%F;NjORTcSY8(n+76DR>jI+<+(m@BJ1g)L:JVipXchYS=oTs`l$f!$FFa\\JF3tNPKQ?G[D7!ZCRD8If;a`CU2eo)UO^k/%<^2O5B%i#N>f1Q,UqmU.09/j`+A'/P(A3HYUT<PYOXEB_Wm"K+km0mlue`6iE-"4---@0fpTUuHJ>6?5\%WA8AT=hAspg!a!qD:q9p%[K7c%CYZ7Pq_CY(MR^s^1YX_'1=DYg+e8P57j"aLLApVue.n$rR.rWQH:e9riB]&)@/^]q0ZC7?nFs%<%j\$51bdKi)A&gYjGef6(U:N"%[`%DKgI("DFLK9(i%D$S4mU_n50q6!c5$5OrT/&1qcpOeH56^?8ujXr<0g-eBQ+bFGc0qXb0G0>IoN8,oD'.cL"7#B(hVr6[s>4R%CKh0T_)&7pD0Rk$,U/J'TY4C^:;#Nh&KV`G8UdE+Fc]B_Q/T`8`&.BSj1PnkW1S=j3*s_pc?e?$FRVb?1(tXT![M*^:,Wl[X[bAZ%BCt-jFl]^LV#!d&P[XIq.go77Ofuj;HkBr<$ZC/b>_APuiDoXi`i>,Ri"\Wm>UA7;nn<YkjjP/;0aZIKpGo0pi`Y-B'V&/X$,KgW%8e@:(KH!=)Mdd=9.r!+H=aJY;*j?T=2?-<*bKJWd"VHAVn@3ae[7%XHT#F3c]oFq88F`cfB%cPNi];u.k-5+q6!RZmK`[Q\1(c@p%%q=K4]OV1!j`rS,8MBl_KjE^aCclGg&(XD;>pFYsg:[PRdIFB[n_/*q4(hWDf'E4fL89?Fcf]G/(9nITk626]^#k$fIILOTgJ&%b%M5Tr+a.l-kkO8J80LLS$c3kCcNKY6U,HE6+S!Vn200FuW0=@5Pn@%74dR$2e4!$`0O#FFX%FX?\Pl#f3Z\$-,4V,_l(J>DP03E?E%4LTmgO]joNCO!4no.3Q\PZ@pLKHY@-C2)\d^!SNe(J.P>HFGa,,VAgD6dOK2_faQn7t7k)OjT>rKb+NYE(eZ[D)ma^)q]5'KC5U"%5Z7&:-PdbEmMlbC`,j8e]1$2o8a,TILMKLp6SN/?&VlE6%kMM!ac=.3SBBj'd)dBpUftRXUL)F=?1CBu+*)uFLud&:Y(8=So:H70%Z,K5b,[3p-]aXLLgOg\Y4\24#G#p>U1jqVFf@ppZk"g'M,;cB@=2okPAL2?_'-]0?9f@CqS''\(3F&88S>DKURsDfXe/O#_W-W.N%]*O;d`iTVam\8;afk:$(l_\ZZS[2Gb;L@tbO)F<-fBOSgoZT6!USN!h``AHU)Hk`JMoG*@bco9%;:-tN449hC1@qHp4DaOSkt2@Q%'<-V:l)5.imePJ>Vm5!qk;\p6f0eS@`31#q0QA.Y]ub@T0_Ad_C_cI@;UagSo2/IZHOR9!-S[<):-;4!_[`QaWA%&@P=s>ef/!!"%gGIhOdN5IGTFSh^`UBJCQcIFHP`IAu_kQp;85%nYV+#=^@B%s@)!nJs[;,JmW(!o#m_bp/Q8Gt[-#p<U9fst,P9hbm;gDR=-Ej3k%cXl?D^Nm&$Grm44"I>Q=.b%:n_[iN!Ep90>9=AjD3=#@C`a=Y>pmuc],;?^\*0Vu0_Q(F<ff5Vd\jg7E<K=XG<+DT0i]c64%i<).%9<3i.V"2=sHjcjJ[)_YE6dOK2_u31@Wpc?&E&jHKH`!d8QkGaX6(5HAoM\lD,^C:!\jS@Y>C5it[a>IK(`St7`CPt?)Z.X$%VZq4%%`Aes&I"oK/m`*&4X2]bc1m1;&2j/SOWgkAIacZ1g.fJt=smh;Q?P8-F,_^``*dDkEN$'PR%GUR5K#/$F)Z"<Og2+D#8%>*L$$@.%\WH2uFO&<drp5Xi3[AfJ%j207A?=Pk#o9s%_p!l&9bp1oo.A`(*I97mO'9e\(Pb89n4(:23jQs>&10jGFDDr/.,uSXPj'q&(B0-R%SuqF:O]2H[B3?4N<&Ok_L6^]L#=pV!7j\f*';[)_-p3V%SII*K2STfk%a"V*n*g/NIpUu]FDu1'e-i_9!h+=ij.9G260kOjgt9TX%'TJp8JrD,C7!]j4f73I_Fo@eJs7kdOIrkMWlbEGZ[r6cnq]Gk-ri_jgmItP6q>HB3rpckHpL!s@5QB]'s$Z_@^:gp\%92;h`/ej6%qnMomn,MY@IYQDEX4:Qnl^DMQL1m<dFeZ,[`JL2:RE!rS@t2%XegmFoXnM5OHLA33)1C/j].e>>bqG;Eq<.4>qnq0<IC4Eec0p_1%SAI.L-iWsJkl:/GVml8hs"?Q][QbKJCD:Y%ZG6@KnGZkQQ.rpN7?M52=HUO'a[u8bO0=QEVl."m4$HK!KBSTl^]Df6=;B=,6hH4G%eI['cCOD_\DB0>p;)D\_EAgjLDArof.&Mdtr1ab.L?6T?rWNT^,WUi2N?83n?2ZY]I=JHP"8?ROjHhI)QYFj)rC$AEPL4n==MX'B%_8:h\?*?Uub(/r78.FO)IFORB"="HnM\*u;0T;0JZ^d_H]S2J$24=`VXaHJ,.ulh/HKb"48@3F#"*bu+p8UEHF;q%Q.")ufc**g!%PJEKc'mD2%S)%n]nRabjc0pK)j0O+"&W"l7Ic#6L+bM)oLVUc4O0Z(L1.[Zu`oii(OcHG,/'g7N6e@[6C1eY(U.>J4YX#?4l3$+/%,CB7'3SO7N-,r),>aC/^b=M@Mdlsbu-9_8]=I7&Z?3iX[TNPCWAWPQ:_>*AghqrHPl+s0J&M[&#4_@aPj.qZ`HW8,+OR`,n=/;&X%2]L*>bX-SD[fmb/7V2ID?'8SI&1dqQl`u[mEQteTAZqi^`tTW$Xq,&,MUaA+l7%Xl*JRc#?9P@:SR7fYGl*D=1DKbo.+nTQja=cg%epCM$:/>Tr0CEArA,$TBo)/GZ/`pKPEG3;"^N$1e38e&:7_CqCLoFYiN=pu0piqbRY60/kXAZZ)4LDZeLCJNFPu`lr+"UTuNJBE8%L0!@(.RW3ooaX)GU6$NVc6t;KY^?eS<#)n6XP5km/cKYXMtfhW7RRFsiZPFd+2a$GG_.i5Fns)c2OGlfbHTmtcaESXLBFQ-B=l/(%7gjgZrUW23INmQS/f!QuSDVY8d(7!l4WDNPS5:NgNh,MjZsgF*MVEADQ(4RLpe=CgC,ZUs[/tSkO!&RF"W?JOk>`7J,K/\Rln-eS%`r*!D4luaJ"7HctQq<@D%Ml460JAI8a'9"D[X+125L"=tV'kO&6U&U#)7lUf=FS:e(r>SQ.S)Kt,\No?IpqD8UNor`_gG/M!N\Om%8[^75!B:%-G7lMi-+LmA*EP,4"//#;Fa?_WpX7gVAPk\SFn7$f,(mJ5Q@'hj[7(rFk<NG%_",hRRFs1S-^D%`/h!6`8u_oN4R+a4%=dpDjeB*R2]??XhDBghu>HcO"QY#B`9?FL1kfmH=[hK@\8=am4fsb)M4>6HGA[1B[HKp++a3a(;oUX)rU=i>#`Qg?B&9X9QSTK*$%*Vq9BO#kMf[uGGada?7$F,_(g02*16m)D\H9Y8l]4Z(UXCC]DeU+Fa*/9m[[p"S91]V;^C>iV!Io5$T)8eo_s@7ZoUQXub:SousN%;IO9C-C7%L<Q4>flS]:NEu87M-J6TS9thq*:'jeIn)=W$jjtWYb:%i\oF"#hXL?3u8uWp.*lD`nf4&!(oc*f%@DR)-Cu>aY@&*s-%Yhm9Lel*tCXh!LakfEeu06N\;E@i#n%>$?oaX"&@$iC!lIBdo87V.(fPHpKc0>guZQa&PQ**-hma6$R>N6QJca6'rqa6);nCsFU#%[q,aGDj7'&=jBj?50)euS`[cSX$j>!SWdmqBhs`#mR,GMB'f6W3&.U,QCV1P3kgBh2E"dEE'*+6O,@!q(2o@Yj7pi1gL$!&p^E^j%nJGl,7Un@2@(doq\@kb9k_@.=M0.hYqj4n<_\L3!c+Y51":+"MASda3g:I5*S_J+>@=lK$ME,Y4jtJpbSgHR=/BtYj+/<'O[HLq4%.(!ODcI-ZG.OW88>03;R)kK%%kY"rq$Wn+mO><>rJPPu5.uu_c6a^n7D!_R/bd:QTIjN*h[8>ltWoZg=CU@M)h6tFHX;21N:9has%`2I\OWQA*1-#/lU2(iB+VeC1+R91GMHBhS:YcMNtKTadE9&>4reA87Ll80%9"$7U=a8m/!//SHS^eBYZ,bW37]C!q:auO?fZtoBd%a'HQmNE[K6ER1A+;2;97IU?EU5L&kr$sOf4LHDt!6Ukm?Lul5a@>*AR/1@qj_AVUb?Pn(<BH#MB-V".=FP=,La+J7u[_VdWnIu\'%+Pf:#jY[?OL:U_8G@4<b!U\c#YOJ9LeKZAY``9'0O*N]23M5GYCJ36iCZ^291)(]Bp\C,"$TdXYFE\D]=<9GoDrHqFjL5O\CGudu%XWMpN+<CIpGh^lA7+$$:F9k+99_bFkj#otW"t@d5GkYWhdCo=k_JT#Fc6/15>]A`:4WE%*mU(4V(`>BbLX@eCL@2tj(2gERAoQM<%MUI4RaW9WmA!qVlC*'b5Q7n3HgR4s5,2)dD?=SbKn8SfK*Jns!CXh"'LW7MngY8`u5[gB-4AM%+^""W-U,P3?RA\atcQYA:ks2Ic%fF]Lng55PF2E6bXJmu/?DlAmMnc#pce)9*]BYgRLp`'*t:2(4AA1Y$B)g==9os"n1f8i5S-LZP2DT$nY"X-On(R?X-m"/@9_QXEr%;]Nra$fYk3faJ^3(F3,O@6lsp-me84aHOu5s6j=[1(R_3.TH:kp2j3k)!u$!"2qd*3!+quI\A?X?)JZJG%TFna;u2.?p2RAMnnbP%g>KF_;QbA\n>QAk`Ql2+'U;G25T<aUA"O=Spq<n_#eqdCY?ll4<0=MmP%lc^f4.D.E$s'Jg;kH=P?j!m\h`dPHK'@S8UQaRHPt=^%j7%rcr5jT8l7WnE]4cWJ><-chGPJS=5M^#m5G`F&bD',&8Mm###hHl:(g:'%rBa)O5Ms>Id%S3I\i`.-Bcap1P&R\p4E.NT5Tc.@%b:l>.e@`122W"QP7i<r38B_*Xj5<nA&!AreK44M?HRr^_.ZW<kCkLLo+"!sb3/5RHiqPE&E0q1].r2^<h$R>r%3f/X,&_%'XO0.0%0c=0^90,&[<U2`VgQf]3[3BGd(%3DQG/c4b>TY,7*SlXi0f2W<]r8V&JXK/Tkr9N4_m][FM23JDljW!<Q/LR6+=gfFQ48?A09sE[%!lGbQaB;Y;[@%6bkqaDc>2X><gO`i7\,;^5VaLkX[Hk@+l(?MJ";GUFVkAC'J-Ztqh?K#qZ^p-]1^pGP2=ZKlLqW3DHX'<Z/Vr3h%9B8M9D;t)fF]i0mD3PhK\D^G$WA_'SXPZ.e[k[0#1hP&V216gR2/ck/L%[W_3qnEL0m3?J0=GBC/a(I>C$+/'`:I)9:6*Y[_724R%^7G"3>U`[+g4gbkdMt=<hIT(G@hk5?d;gVAU)NK-lSK.?MmLg[In^(18i%e=C&iKt>1R9J0Lra@,X\S#LgLA\[`IB27Y2nOS_9S/%MH4#qK"<WEj?+Y,(CGr7ESX%0$j.YGGJ_FYmYs61+SmJLLD8sOCclJh%Fn*a$''Y%4F&'+CGA6c6>0<1-JC?B6_ce$?H9Tb4BkmX%9a%ZX<8mPg_f@9Q*Nm8`goAh[CLpVNZrRUP@7Zngk7a7r7gia=_;R`q\*/W75"R2'`U,eR2@oMq]6/,B)CZ7$h5Qhg>I<,(H$G\P%8Hn8;fC9H91J(onpg>;fb-6D('qFLF*9<ko5P4EYHd55p>eo_\nlhuu1%RhG`*!rpOBI$G*-N)^p5cKp7L"N1e4I&uR7Fr&_-8)o%_R`gs8<XV<Z7P\s*PBpP!*CCGHu^Od5?Y;Y<Kt+4%)$OA8=q&L%S#Gi]qN")"**?h]5PiY;!E,=0FTJ"@il7bcqV^%C)qRLA]6Jf%GsWN3$S+S]k2GU;jG/BAhAI-fIimZjE$dt21G;BIiNa$]n$?I)$5YZ1$-3NZ`"lSIn7["4?XD4=TC+#S:L.4iD@-K^YdI@_E/:-&%pc3i?8VXEuP6Ve?b!1T2Tbd7h41Jee#Tasl#o=G<m2#<pnSZ*Ob"0#N#8%SUM4T>N=,q(XP\T.L#uOj0!+#,"YuSV1^;bFu=h'V(%/Zs8.-S[<]8j#59S.+B8j]($Xq,R28V(:[50_DI$1rr`$D]g#b2"$e4Brb_UnU&&Cd:H2s2rKl^X6?:Hc7N?,g87(sb&=L;Njh<D%&0[Xr>,b4n&5J.Lb\<#8Q3a@AQ,N3i*1R[:O]He:nt$3jj7=jmO\UnG=]cR-1_3ob!]bXq%M:kNIMPTa9c8aeaI4NDmXl2Y%C6Ot%]6Op8d=H8@E0Arn#b]"BY>q7.VZYoG2?Ilodh&N(1M#]73*8/^9kJ@sX.j\YSD95:4dML+Xla&N!#tXSU^?.M0haV<%Kt]UNG$+K%.EeZ@UteP"Ui'KnW/0Y/4N-6$`u.upd5k;A7b/c\Vu+cd=stC'>73M_"O\Km-h/`1-d3]@-^CO4SoBKXiNlba;Qjf%Qho"/7K4>*%FoU2XlV_e"NVo-g0@<:V-LShO\MQ^GZ?o=TmoOiS#5;?'lRg(3^sk<0_UK`DX9aiONF7"_/-buNfjM:I;PIZe+4?g[Z8'j?*dfDk%k'N2Wq3!k(/@M.-:3?r.=4#A':F&VWB%cLCSfFD:SKq6#4i_$l`a<Xrh=6E8K84s642smmC`H/\,rkUL/`LMnh'*M]R[Zq.JT(+4%3bQCT_FgiQ1f0=!J<4u<^kO9b+\<\.Z#[XBF,\GIb&f&>,g"5chNjRIl'iI)5o)e"."AVm8!rI"PG((=lqu6A)2aJ4)e(L`+`j`5%-6o+YTOO;.O;sr`3:AaH[@%7LG5]h?JlIJm(q>0"Zq^dU)T!^lX[As`WEYCSjP=_&![t[/A-aZ81@YqMfY.!c6%h^22;/m4fj2'A%0pE"Y[q/&L`D7g%_B-T++sU$#$D.`nUa3-Tk?59>W;!nnm&RG:3'_&g%(XFj-=T0eeUrOu/dg>'53p#Y[Ycf]M\Ljt[%8]uV"_1f%;!*RX_t?RB-)RqWk`cN29V3$-/Wp.lfh`8CkY4fKK5Sh$e7'>4c!Bn+fXqIJ'Xj8`#B",*S7j?PVmKlM>FL_*+g-ZnK'.!u,=Q,5%.i.<LX[K+GcYH`n3"2_!D2jVpkU_O,Po2>djsu`n=i1Lm[4E`g^#=olkV%lWC,?IZ/P"WI<-':pNFK=q,0'_q[7%XH5)eF@KP9t=%4rC`V!c%6`K!Zd#ALEEU6Y,ljHUAX0PStc`A4N.*BX`fE0r/K[&kS?g")g4GV'Eiqbf[7uo)RqW/.RJ5/)e2di)RW,ZRTLg\F@Go%-J=]H0]?FQ`4'FkE8@bn8ISt9oE5M^GkD@4mW]-1e!rk>.lC(T]@'/XGS_q9K%H1qO)J)KQ&D:(!ug`p2TE=%_fVqn`$B>C63ILR%hF0pbAPNV/O1$$]iu7<Y0o02W\1q;h0fd'[,Y`KQq&^Ag@l7\X#XWRCmn+mWef*d"0LSZhj<PcJBu1L8D5+ZKacTMqUq4XoZZbqj%5;FS+Hce*aE_j!jORX9CCa\2I1WupPHQD8__4t5M9\)sX%S"D)"Rto:fKDLV)%eBi%H4HF6cKlQPLTqtbZ'1LU2&U:GGITeA`cjj%C%*n8!5UQ>njWm#3G/u.,oS[/GflmG@fP5P2E(8lAM8[`Rq(:]X=Fb!kJHqO7YI`W5.$IG2/X1n:e]to?TBNP,]O6i.oK8m3\1rs%Z\VMdY9?E7;Bk9,7T*OS_:h*DmdcriGo`E@dniS)$RK,L[,nA&=4f\@q*)r.7sKBXTnp\G\'D3J3trghlS591FN;EYPg1/p:rJ/$%]#8n*$Oi&*.1nf]SqN.%J,`E5GpqF=s2@tJo0q4ql/X;>W"CO+!6=^2r<Uj53/F6EYp=W*dMI\A_I0F_Wu`M94ng\8Go2fH`<XQ*%@&r]YL/VgR*-,U]SAJ[7J_)h1PG-OeW)@UcK<<!<.Aa&SSS-cU6%>+(0#L[?,0s-1O;jp-?hQ50`DV^G6$o64EHtO'OD<r6=PS)d%Ba,W6MN,`Q0N_>EQaaFFcq9QLh+6j4`6n!aB)1#Qb[>?E9%*]MGXJ$$#?Z9$C*($7C:-MBSXjC^LYoh$G'`@O.%fZYT>:[>'UaX<%Tm0IB'dSMeGRgNLl9+8INf/pWOg#P/\;&QD"N+;7@dp<d2L$'\$ti$"5[sR<"%+[&iQ!HL0E@;;&/?&;67/[":nhNjem75CdcBRH%aI*SoCCC!ILZ"GOcYb&clGHnO6;]H85qT-m6=p)JXmUK<e@='I_6%T'3")A7$=<`qo[gCcd`o$5[A#d(52YFcPiT:^IAu$Zi6OSa%dU(NC&K)&s0/1Z!=99_l"i23l&`qG!82g_abX*;q>$@pC&Jo@1i[nF9CLH#,LhgH#q<`K5-L4ihkpWh_:(u^)X$fRG.a_4@2'A5e%dZWe!oW6q4bRYaRH"/4mJAh\gCD(\q.rnh_krmFsEBZ4^LW8Z4T?&UAb_C[]iH$q&!`UbgY1KJQ7T4b'GMeU;6>Jq4OUNN?j7'us%H9rHX#"'(@Gn/e4B[Q:QoW6k*jKFitmI)0,$&.$:,$E^Y63N_=<-mCn>&msrbA*?V%/!Vl:UpT9:N[Ap\_s]+HQNZL_rf%J4J$WY%2&b=m$&5&K#Spb387q@Y8&7>lg_gDgUehb*$QG0'bepmJfE*`\8V,^fV3?^4iK-C]bYjP/&gP6#"f'6ghp9^[/m#s>7#8kk*[BpP%IdDSP6k?`l[HQFX%`u=t4Ndf.I]+r(&gr;%K#_iAYf)@0-njTN_CK?BF'3h?D]\><Ati=SNoruEm%Z[d7L1<$33FLRY/1#$9qa2_%`uojPqs3:B%@9"_730#]$fRT8pF"e3=C3WRWb_sLifa03?E^e&li,oa/W$fJ8Y(.8'FmJ>X5tb4Bh9=?8Lmf\%6\Jc$i.s#PLWJY%4Ml&:`'D(2\h"EQGj<2#X!j=o5_S,4j:',AI11*7RsX/^hFK^5,P^[9fdbr*ps/#>^)-.&6YkY2/PG)>D!m/3]TFO6bo:[QYHbVc%YG<JjAa*@4H(aW]1]sff%H3*ncCVukA;i?#fg`hiLBONbY9SHL4LJTB-*]Ac!pO#@aL*q$,7rH";7a)YpjkJcdBp2':;]QD^p5PR%A>e-68LgcM-RIQA8u_up4DH__hYU+(WRh)C'.G;)$KA"iU:8%d62/[b6QG/mbfkuZ\'9,TO5&eQX+-,k"E1WSDsd8hESGm(N47'`%ITDhRS'No<iPEAgn];,UP#k5dD*E54*Vi>acT9<<f.V6F7"_fsJ-@^O<W]fe$Dkp<%S<X8bHc!E]cZ&K@T[?7Un9[?Z7RPd@:&(T%@qGW"Wj<O;lRISh\$?Vdqg_3?EeOg\oLbr6)D$/#*B>W#WAa?%4nAN/A9>jBmli=+Y+mQM[Sd%F2Ql@+b-/0sT7c[I'"o3"/ni+Y%f<8-<%):W&c_:nb2>uf%]W?^#RC`"1^)U9k^W4F3:h&?lVSm8!V,B'JrMUqU=*Z`'E_9O+>F(kgRg+7C\L;X^MaBm`*#R<a'q'Lh%g)+g`AW6MgV2Xt+b$RX;[]a@GCnW-rp,]hC*[H[2:od,+2bgpQGYO#uGNBO9l\:"d:"/$?Y;7_L5;^N@9iF%e9(Y1R4_lteq,dsT%19?1EiKBY(.n'(#HYFa1]P#o[AZl3L5OY*Q(2g@X4jRWJF8g@PET_`4N-ESA8e$!i#=J5n-J!OLJ1E6PMJg7(Sk)BN^ON6+4B,,E%QiMapD4!:Nj4h&;NrW$1.N=3.:rUE60h\Xl6fVaRl]NlA7q\E=ed(s9Nt$"fHT0brEq)+$SU'23GZ$T^\p:cK)!oFu`u\?+fL\SA%d?TJ[e-`BnkY'a/6!m:A,9b0J6."tQ5o$(c'JXO0lZdSRCVJE7f(P6&Y9R@6^g1,9Mmk<@!;@:&CoH^(h:X!_=(B3Z0jI=pf59.L%XVF3E=<`O^q<,Q2V7'g3pCqHmO.=P*n1(eE)d.L<D]\2R<SkHp4_9\,@^m"A`K14WOJh"\Qg7$C$McF53N+#`bbfoci%\3Pr"pW<%H<"c49JK&nrPPg:OOiQhC9g6&6lfjqHPg0^;%sar8)[9X77H(JenQ,S9huTF+AGcd2I^]gfcdp2W8kjr[6AZ%CJ,JAelK*CA\d%=%f=8.scTLNTDl7kN]m&/C(;-E6rVGojhchS4]4SX:hX"bW48.Sam#Pk:=//6)EIk-;$DfVSR,-,U]$5k5F0+gQe>]nm?$^9RLYbXF%f<+2<SGeO@[]uHS*T@MG/^]]EV;A]EP?`o@nK,8!O3`el]N)u@8uLn8>F5F9p#0Abj-:L)c6t/bi,U2e2J!W>bbJ51YgrBgiHS[o%.aF<tEMt>aXRBstLN_@=AN<oeFd0'8rl'V*YRhK!bI9-_@:Sa)&6[RebH`I[SajG"Z:B^)2FK@E[k_O7UW-2'N%@WY:aaco<Z\Z;%L@Vbs,fSLlaI#kDl*9917k7B=/U-^tUjp%9niFp#7f0WT&P_H?M20"3cG?`@oBBQl%%]N!m`o<uQ.Eea=I-nQ3HjE@&3<t23HZfI%VqK0BButF!HId!Un2d-8*lLfYaZ'U^p6]8#9!$""X`MS!*fM^97euAcmr;VrpJuli@S:7dFG7EsRVZ3`@F)WPX`9kr<fP<C(ohSZ%4ni!/[pr&V/FD(JM=PiWXiMq?m;\UY$pAAb%sC1H7r,jDbcdDLH.!B$`sCdpESd%Dm-@>upI,Ce"B[4kElIeZkUqmhK(k4D(-75*%@[K0?;Cc\sV:5R01QlJRgVosl+aZXUXm=&<RX*J!)R)i56&Sac#&r"mX!(+dY'i_YnLY.0G8udUJ.M6HK"#/VPBE$J[+Gu4d:]S)%Y-IS$*\]d[+uZr'A]=-X<e=g'+PDg]m*L>2qS?:UV1A+3(7n'PcA%T`RsC)N)$>]_l0*uRSg:R:#-?0dQr4A2hMsB(%R2:+Wo^)&%U4^E`jBYDX*&R+fa6G@)f4((->7@bj,E<8/1WsE*@0\1);3h]e_]S0>>/8@W?IJm<Q99mCO.5CMd#&Vb:,@+.Sr=c3'r6=]YJfDK%-.,ZL^.[t:Rtq[tG]p091H^8EnXihkMt;cRdI+\<"%hh@Geak"AHi[D`FE^s(h3DU'GjW@iDaL<Dcup7]6U>bY2iqlHcDD6_`9Me%c+07d_d2]*5)q1:c_ucr/:/E1NUaB\".jeH_/V7T=2sr!H7_6]2g2utb)fqD'o)\8:h"CA,^A+T%R]%-NoFLY4IhS#r0F0lmH1,!%J!<(75()7YE+(UP8a6?s4;T%5gEfpakhKY`aB+&FqLq;Qg:clQ90pC)a6jRL4`K$"m4ZA&V6DHU(cM'n!VWRKJq`CSPF:RB#k?Ze%/ORVl.F;/LGgp@EWoo8<@)qqN(l:^kEqW?tQU<(cTWf]q9pCD;ZUSPDG2EK94KAJ0`'[X>G6;9`#lV-AGd+=P7(`=%l'9i:Y[:NG%7ff=dY9.C'6O<Wa`@4&/3@1e,))q2hh)t29(pLc=XBHNn`ce4X/Yn,1`Ho^kH)g`9F!%3u+FP:"*P!j%L$Rm+8&;f"H)>XFMrs/h%W7Sl8`VD@:pTr2N6E>Mcqe/P@PinY@mp9]KI;'C]%Mtu4_"i@N?:de]bL3_Go,our00ubZ%5l`,VH2,\Cl(0>]Sie]cQ):tN>K"Z%6e4WbAc2!00ZrXkWl2eD;k9]U>J$NK.c[;(DQN.&A*fHr?ODsmi98Id`3]?<Or[duPtKN5<QQV'L#6e29AQIRNt"LtU^eaj7Q(S&%N3Dl>6++1m0RLR'\1sn2*ETmE!6_+@(:L:X45=c]gu`)Bip-^[YBY=^#/i3D;YXKPi"@)j@Mp3*;bRF-+T.jeR^LD`:8.3%Cgo.[%KC^kHR[Vo\qB@?pQf7j0i\Su'n2r^Q/NSRqhMSZ"gQ0F:Z1I'm:K]M6Ktb![CZAS;LKmspB@//Mik<N+cc\:h8S!4_adpe8>.f?e%dO_'GJr,\PR3_;DM+AV.LlUMsMm")P\'1`ZnEKUuU:-;IGtk_Oo:R$?-g>KnMRLSHZqBrf)I=]R/AD@\%JN2N:pf$9(e,^soYQ9j%bu>&)Dt8QBE`Q4=D<:kWS*TJ=C"W*!=E'<q8FWVn5dK%+[c!q_'"tO(76IE6"Qm^+)Rgb5_;$4Wa2)R([6lW`K_DoNAb;&-":(P!%\J#5$fDq2Zf`\4#ToRonR8ff(E1W1V,=3neEk(E]\qNW!M!c2%@qVhof;Pqa:\VR5o+dCkf_?A0ID;fZc*1Lf=@F(XMg_d@VZ7"g%L"7;2]P])OYjW;hmT,#bmV#%/Z0s!26KsB+?5S">D&Vi`g'8foBf<a<o,=ojlnS!SWmOjY;7ioAR;R/<"nYujaZ#W!nFSN$+o/#.%+J0hQVQK//q53i#QnqrLT#iq-6Ini9K#ARmUu\$+NHFHQI.O10oC1;TXcA.QG7K54`R[O-.-Zlh+_[gV/P)5sU\ktjYG6Mbn5?cF%iZZIYH_F<`:'I^C*%Gslf[`d7.?k`@>T"/EiVLB#Pe@J[&3idFB`7EL[#XdINZ3;qDBA;+!V)T.b**+JG""N3Lq!.^*;ir)iJ^\G%;^fO<81X!SIi8!d0Uc(:Ifllm7!Ah:HkFnA(%D92`Vt#;&`>1AP6&BOPSr-$:-=3rKcu3D7<&q:(J[OPr2-;D[@;n4'.sCrmt;/2%P`db90Vf4]nu/:JI'V]</TJAAp<\%)r>+(l69ju[rMg!(LUGXQTI'B06jbNQf#XP-4,H8mK@^B3M&]^7=sJl)i)aL;6E*E%/.=]-%2@o\;H*j^K3`ChTr!?2SM)V-g'VOfLG)\;9Y:P#@jtlG.pGfEc2;_>Ijl#@UHk34RL`6X3,\C@9I.km/2I3s+1L"+lmic/V._a#i%bcJMfVP7,2LF%/?6]Yg@;6+F+1?S]X,GK`'ao*BC_7o^7'ZKP*]V8E><sN_/i0]+>/Wn2-'90rJ3CNTD_^<YYX<)ca%4<'ba2d.D%WEetdN>i4b%Q"Ars*WJ88OY+&k8DAfBr.i>SS-d@JW?Z@>FCV`J=1"Z^oXC2'\=2jLi'O`IhOi'UFT$P,dnXk=:Vd_K#^guo7CsN%[LqYE)'<)O4@U)PWCCP5%+U.[_JWN=]upVD0qt=3fa)dg/#r.=[8->?k/B1f#/Wr^'^&jo(<3S;N1JLP8)AJfej^H1a^^lpmhH-g%*ab.6Ws8is"5KL:Ys[>mUuW6.(Nl(,O[G[l#rsb^7#I#F(C_q]]YdL:d@@`u0L"C2+6fS)^s&Q[di`N3Vc=4:dj;8LOUSul:uieq%_BIXpCQL0PUV%o3b@oeQj3h;\f18#/1t@$:7DP4I@?ob>^rY0lN[$/X=pnhaAS=Y:"+/<_iZT^(=i+HDWBB!='i%?"VMfr[d'Ioe%5ZbVEG7^\+/`W6E>6@Mo1kKDrPA<[Sl%.erF0g$<KnXS(ZM8r:lNnh1bjfs[gR4GH\QRZ20aBa6M)d9=PaKA!R92G!$o<9=JORNs%%,jtF*/[IFR7FCA!K;hsJl_UOrXn0-jKTgTJEZg`)5PB`AWUir."<-&D2gXGfs$*QTKW!JOqj0:[+UA4k7K<C_@S5o1F:t(_`m+P%IPpIJ*nio,]QA?^R]K-9e?6\:C5(P%oVH`[E(@p%X\cJF$YK^(knr8JSIE^E7*&;5N[qJt6,(T<eEQ\!M)pKKoU=&C'6SUiSr#Ma%q(YaEF2gV=`)37(iZYu^=[EHj.Skm^aX_)58#";\qTXZkM"o<b,'bq8Efb!b`F6-pKSGF*]Y)`PSu\7Fb-KX85+-@n3Dg/b_[L<B%OA*:^*3;6j\[3==Bt)8VV5;JW,["7^VfJAp=['Y/42pAj;-)X<:$th(eH&\l[@2j>/`gT%j^DQ7`;[KlXbnhG>.26"(D?_@,!ct<%AO-!AiV<&gh(ut:AoIWn(E]8&PB;NgcPQ"n2b/:<L;mL.+.R$i0c%f_N5IlKD!WKG.6F\W:OZ,mT$#&LQ[']kmjB<fqVP@rXe"J)%(/p)=Wr9I<L`694LHKC,_EGt#M!fGrHl_L3ah\G/m_RQud6oAJojB/[2a8PtEOB<;pcRb-r@^1@aZ3&QZ=b[r;n"7^,_h*Nr)e`"%:n@q+_KZ$M+H^Z($?;6:n&#QM5D""QQ1@+Bao[t4m;3@W2ThO_4QO.t*tU;_ZoG+@7h$nmY.K^m+__sU#EgBQPWkFY#S9UoO;jP/%;[-OuMH\t!/UaVU1uJn:'lf<#GYXD3?<gEl4DfWU8]Xiu[*-K]g7b=q=fqNQ!,4!(@\%dffR,K>rSklF]cu4kd/%olR5E8oR;G;Y%M8<]fi:4TC%.R"PMMm\aE(X:kXsf%$BC4g^D\uj4&*!%6:rP^(cCIP(T1'^-=cP()QQN"#9Z#C)`uOlc[*qa8\SN57a2,"5'q<jr%cJ[DV45Irs&6rp,#3j8C3%XLh/[K8GRV(ukd'p5^()``_E[Z%()K+V5X_CV($\O;M4&N5'Bn,/`1++o<mKk7pS"W"8VW^`+HN[QY%ZXhb4fUe\cl6[NUYmPZJ:W-,5V.-@VI';8G5*2NX$AYOaL(,k<D.En;4]tmk7;YIEg;=CBU`e"@^XQ^6PkF'-mHW3U^kASFMdFcc%W]nV<U/`DXL7`>!kjiST^CKWH=XcnH8j)0)FY>Qk=pgPFJV,9^Xh+*B>+nr*pk>OWq)(^N8j)0+,tge*9'%M\.X<>B/Y3T*V.]bh%ToKLhm2JDFZVWaS`6,%bdhdnoffF>JJ@Kh`&NR$\qE!U`+.S1)YMaE0lK7$h)X_:0#EiKC[b'oWVoj\DNc^_o,Ym]Q"cqD<@>S2l%;-n'dKic\`j!c*QHId!Qi_4l2k8Xd_"I:$&fpR&8]oM\&k&&]_UjlXqj$B@cH4'Fk$-KDZPY("?FND^'_Mne^oQi4ML1)FbHR@OX%em1EbgmFeZ@$jOT%Rc)*+hW#dMVAkX&l)$!7"u.%4_lteHL#//gTh_"0:afN?\ep$G^ln')@;bt&ffoFNp;XP't5_$@G2M5Ye6P/%IP]@JC6:./ieiC-)%a^XX.I)tn8&uX]bCp,j9Y6UnIk;:g^XP*s*9Fj:7:SMG7*CeP4:\)@+4C%;Lm\J%Xg5k0d,>;f.j=CG)I,(%ZPMt_":K-FQkpNrZf:)'gJ*UX+l0p%'/;YDF*Q>5Qm&5<;a`0!NfhQD!=]dOBPSmK!A?QiR4kt:"n8s.WoRMd^3-<J+jNNh$3N_q%TKF5CXGM+[qTrncJ,MFfN?L.DN<`eY6oTH:(.#@ZcWX<cHAgX)_pbb[Bk?'1m3Dlsj2=;$)KsKNVS^h!-^UVTY@Zp#[s>dLl?rK;%(qW/V&.nDpV!+-G+2YIqAK+CA[cJ@%HJ<<Qe40k%4lQ=$6=Tg-f#C:FijGlq/,F$tL3;)[h(,TZ"nT=%/VWclAm"O>N#e3$YT;go%=Ef!)>";iK$VShB9nRduL@ANsMUE.CgYS`gE^qYu,e,GPAEdqOYP@#+o$DV!Icf1VX4\-sQ`=uF[F)DJ)j=XWjm3pbA3u2g1gqdl%\t2(VhNJQ,]q1,0%IN,8PbK)b?gBNZnqPiK[cY2,NFLOr'.kmh_pj$;l[+Kug"&Ht^JBe-g$DZLp+^NM`IO#o%LR:4aOX/Up)H#s%nUrR['F`,>"%L4g":G5P@>6K[/1TXK_O]%^-"Q.8X*NnMH+O2)mh6AFNFGSH*BJ`GO[=W.od&4%=-gN0n.g/sq`/\+i?kesJ-NuA%88Ol=jRe)ccJn'Q.XMNTFXqgoX7,5m"3Z3(1O`>+.Z)c6-#]`Gl2W>q>"o+OZ72rjZ*5CV!oSVZ8V448J?:/-co4-g5!i456Lln7%[q,tXDELHspiI!85(Cl,]_:<h@/4?iqA;hqKu:"9":(P!M2+Q3j79*=<=J*;2gHSVq'm>_1@q0o\E2[4B6db/.Y^HIOGk,!M:_iS%)pT;010i/:Q-%XaG5E1f3UI.p:(Fnfb"&l8<3M%><\`ni/Z#ne<oo,e6T%>BcFSU_K>V4+LPr,o*C5EY;VKTEl\;"=Rtl?>Id4OY%p;/(phB6!7;+-ReqHGrnD&ROgi]91ir%dV]M7_qjYtX/ZIN;,VR\;W_@uOE?iAe>KVE:rJ*G?I5CH`.IEG%K'PmO$H9c&!L4l1$(%NL\<R\KiJH%5V@+2@]6BJRuX7B2?CE`hKJZfF'!@/=L=q$`Z7`d;JW>7f,6d9qf+6fj\q9e:"jPPS2_297">;Z[9r!*pKa3pQ:kD%iO`pVA8)&i1Kl&tW3hYL4/(+;S-q-6>0V]OVG$)\higS#`(ihA>\XRZg+WVPQVDkmL;.#7,Y9'[+F"p_e&,8aT$p1#cFGW/l3SOR%"hXPGarIm)d)$+@c15gWWb`_q)b.n.3Sd:IT-qI0D31Sl5_$Mi&SZpeYV9*i(8ghMI<NQsg&L:Wo2XXC5:Pq]*_5&A$`iH>+-(=-%Hn9Qh%=`uUW,<pi3o>Z_E_krj1)k$a-7eDY@duB'@OGJf<+]E6R<9#j<C=u+eGas"HWtE(GhI0sDA6\)SmJ4nna<ik2KXcK2[*<R%X:8`tQ9o;\!bj)?Rh\L);W?N0]I]SK`901/)Pg\a?[Vm+Em[e#K7m,F/VSQ4;<^hHZlSC`>Q.eu^Ecc&,N@,HnI#r2CC"qE!Xf_p%"b2Pj#"Z`ss2.o);IY]COr._7Jqu(1V4Wf%KX\_CJ7pBroX-Xjfh:RFE?YJR;P?k``?4";jtdDsBTGC\.<#rj$DM#o5(&>8jja!Q%ltW:[_=f3tlqrW"nd:2.`c>InNhjVM<$VYsZ*b9;SW_@RM3Wl]-*\ekO#]WPg'=H"-2,n50h@/ik$^^4+6)-/6_E"/om=<4T`6U[%2,p*A?:F>f@3tG^afI5dPG$nqKj8as&m@Yacm]:7'mPl(=DK_nIZgMF-)tm59@0F0p3-YGU*TWrJ+j'ABheNVAc!I^,5fk<-5k"Z%r$?nd&Jt1TSUT:"LPj?+VWT-@L87"/gc-WJ_I;,/*18O08s:mb7H&ptr5_7490#V^*=^M;`s6Aechp'=fau0%:&1'f8n0g@=ZB%=%P$QKq:7!q(;k@$Ks/W?m07M=Wk4h\fEqnDHfD#.@T9o9o3H]Ur/\h:chlQ/$I/CrK^]0dMDY<>1ro:J+J,B*bs7$#kSGMXIDnl,H%O5Ks,VUteFfDkBeJ,&%gOn!AI3-BZLHRlt1CHoQ#n,MBS^Ak+Gq`1O7YGQf[Z#ceICSJ)>bVZcR1fe3,X##aCRDs^8-iD/Ic2>tT%R6TC\o1*"trb1WA+)RSEUTH>%[.Q*PBPis+YB@%Sp;Os%?+D-*+9-6GkV%g3+6Rs@R,!Y5*tkdDip!f1rU)'"rUBMfJ+bAIQJ_]i%>l3!rq51X)hfQ2AJtMtLMcUDGp0IK2\VhHBo[5N+Xu0:>XB_sCEHO<<FWg-s?`h$@NW4(qos;C#TBJOiip6RIHT\7mnZeEl[AR*P%F$!4OI6C6mCl7(f?L,_$=gQG@NdGY#B`<Sm\Rr"O]5@!%ZN01]3S)m`kaUCO$i3p75Ncs>K6M]JkDi'kh>11_51_a:IdX\t\4u[H%KDRn!L\2=5.JH8\GrIj,:ouMYeb5=7eXm4tJ#`3Gqa4*>T&7#J&$M#+T/YkMIsJOngH*Z$GK'<FB4#OPiRRMH2Y2F+<jaP%Fh)u>%d?4+&pBK1Z_+G`95++I;0@kSl#Q)j8f:VOYmItS+g:1(!GOC=TdPLR]gAbjcFg:ZIb;%4q#;K0^c\>C$3'L!lms`.1lX/7.UME)l%k?*4C(AO(LJ7!cf?oPgeA[Q0/GALpc9Dls^Q>O'YoT/qKrkA8m]Crc**_FlVMCTP*n<WiS4r4U#g5l6R&,&LVq_)Wfs*s2M5J6s(%\%d:erS.ALG+ie<r4BFFrRGhps75W.s5OX)rMOR`r7CuFm8q(!It%8*hu;c!^]!W9qtA(>J,%K2s1`L@^]"-"s7#4/rqY=K\0^VD%nAfHs]"bXkmsk1PJ,'%*kPbb;J+]jlru_7:m=,1tHT3t~>%AI9_PrivateDataEnd